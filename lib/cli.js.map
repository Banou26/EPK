{"version":3,"file":"cli.js","sources":["../src/types.ts","../src/core/parcel/index.ts","../src/utils/file.ts","../src/utils/installImport.ts","../src/utils/async-observable.ts","../src/utils/async-filter.ts","../src/utils/flatted.ts","../src/runtimes/chrome.ts","../src/runtimes/index.ts","../src/core/preprocessor.ts","../src/core/tester.ts","../src/core/index.ts","../src/reporters/cli/reporter.tsx","../src/reporters/cli/index.tsx","../src/server/index.ts","../src/cli/index.ts"],"sourcesContent":["\nimport { Observable, Subject } from 'rxjs'\nimport { ParcelBundle } from 'parcel-bundler'\nimport { CoverageEntry, ElementHandle } from 'puppeteer'\n\n// Subject that is sent data from the tester to the runtime\nexport const EPK_SUBJECT = '__EPK__SUBJECT__'\n// Subject that is sent data from the runtime to the tester\nexport const EPK_RUNTIME_SUBJECT = '__EPK__RUNTIME__SUBJECT__'\nexport const EPK_FUNCTION_PROPERTY_PLACEHOLDER = '__EPK__FUNCTION__PLACEHOLDER__'\n\nexport interface Bundler extends Observable<any> {}\n\n// Going to change when Parcel 2 get released\nexport interface Options {\n  outDir: string\n  entryFiles: string | string[]\n  target: TARGET\n  watch?: boolean\n  browsers?: BROWSER[]\n  port?: number\n}\n\nexport interface installImportOptions {\n  path: string\n  dev: boolean\n}\n\nexport interface TestBundle {\n  /**\n   * Parcel bundle\n   */\n  parcelBundle: ParcelBundle\n  /**\n   * Entry files\n   */\n  entryFiles: string[]\n  /**\n   * Time at which the bundling started(high precision timestamp)\n   */\n  buildStartTime: number\n  /**\n   * Time at which the bundling ended(high precision timestamp)\n   */\n  buildEndTime: number\n}\n\n/**\n * Representation of a file\n */\nexport interface TestFile {\n  /**\n   * Bundle\n   */\n  bundle: TestBundle\n  /**\n   * Hashes of all the parcel assets\n   */\n  hashes: Set<string>\n  /**\n   * Path of the source test file\n   */\n  name: string\n  /**\n   * Prettified path of the source test file\n   */\n  displayName: string\n  /**\n   * Path of the bundled test file\n   */\n  path: string\n  /**\n   * Target\n   */\n  target: TARGET | RUNTIME\n  /**\n   * Url by which browsers can access the test file\n   * Not defined if target is node\n   */\n  url?: string\n  /**\n   * Array of analyzed tests\n   */\n  tests?: Test[] | undefined\n  /**\n   * Boolean that equals true if all the tests ran\n   */\n  testsDone?: boolean\n  /**\n   * Array of logs logged without running the tests\n   */\n  logs?: Log[]\n  /**\n   * Time at which the test preprocessing started(high precision timestamp)\n   */\n  preprocessingStart?: number\n  /**\n   * Time at which the test preprocessing ended(high precision timestamp)\n   */\n  preprocessingEnd?: number\n}\n\nexport interface TestFileRuntimeAggregation {\n/**\n   * Bundle\n   */\n  bundle: TestBundle\n  /**\n   * Hashes of all the parcel assets\n   */\n  hashes: Set<string>\n  /**\n   * Path of the source test file\n   */\n  name: string\n  /**\n   * Prettified path of the source test file\n   */\n  displayName: string\n  /**\n   * Path of the bundled test file\n   */\n  path: string\n  /**\n   * Array of analyzed tests\n   */\n  tests?: Test[] | undefined\n  /**\n   * Url by which browsers can access the test file\n   * Not defined if target is node\n   */\n  url?: string\n  /**\n   * Map of tested file per runtime\n   */\n  testFiles: Map<RUNTIME, TestFile>\n}\n\n/**\n * Representation of a test\n */\nexport interface Test {\n  /**\n   * Description of the test\n   */\n  description: string\n  /**\n   * Body of the test (Stringified function)\n   */\n  body: string\n  /**\n   * String type of test: Function | Promise<any> | Observable<any>\n   */\n\n  //** Properties from the test when executed\n  \n  type?: string\n  /**\n   * Flatted(https://github.com/WebReflection/flatted) value returned by the test\n   */\n  value?: any\n  /**\n   * Array of logs logged while running the test\n   */\n  logs?: Log[]\n  /**\n   * Time at which the test started(high precision timestamp)\n   */\n  executionStart?: number\n  /**\n   * Time at which the test ended(high precision timestamp)\n   */\n  executionEnd?: number\n  /**\n   * Code coverage of the test\n   * Can be undefined if environment doesn't support native Coverage (in browser)\n   * todo: think of using instanbul for in browser coverage when parcel v2 will be released\n   */\n  coverage?: CoverageEntry\n\n  //** Properties from the test when analyzed\n  /**\n   * Percent of code run by the test from the file\n   */\n  codeCoverage?: number\n  /**\n   * Time at which the test analyze started(high precision timestamp)\n   */\n  analyzeStart?: number\n  /**\n   * Time at which the test analyze ended(high precision timestamp)\n   */\n  analyzeEnd?: number\n}\n\nexport interface Analyze {\n\n}\n\nexport enum MESSAGE {\n  GET_TESTS,\n  GET_TESTS_RESPONSE,\n  \n  RUN_TESTS,\n  RUN_TESTS_RESPONSE,\n\n  RUN_TEST,\n  RUN_TEST_RESPONSE\n}\n\nconst messageMap = new Map<MESSAGE, MESSAGE>([\n  [MESSAGE.GET_TESTS, MESSAGE.GET_TESTS_RESPONSE],\n  [MESSAGE.RUN_TESTS, MESSAGE.RUN_TESTS_RESPONSE],\n  [MESSAGE.RUN_TEST, MESSAGE.RUN_TEST_RESPONSE]\n])\n\nexport const getMessageResponse = message => messageMap.get(message)\n\n// https://github.com/parcel-bundler/parcel/issues/2574#issuecomment-459694774\nexport enum PARCEL_REPORTER_EVENT {\n  BUILD_START = 'buildStart',\n  BUILD_PROGRESS = 'buildProgress',\n  BUILD_SUCCESS = 'buildSuccess',\n  BUILD_FAILURE = 'buildFailure',\n  LOG = 'log'\n}\n\nexport enum REPORTER_EVENT {\n  BUILD_START = 'buildStart',\n  BUILD_PROGRESS = 'buildProgress',\n  BUILD_SUCCESS = 'buildSuccess',\n  BUILD_FAILURE = 'buildFailure',\n  LOG = 'log',\n  PORT_SEARCH = 'portSearch',\n  PORT_FOUND = 'portFound',\n  WEB_SERVER_START = 'webServerStart',\n  WEB_SERVER_READY = 'webServerReady',\n  STATE = 'state'\n}\n\nexport enum TARGET {\n  BROWSER = 'browser',\n  NODE = 'node'\n}\n\nexport enum BROWSER {\n  FIREFOX = 'firefox',\n  FIREFOX_NIGHTLY = 'firefoxNightly',\n  CHROME = 'chrome',\n  CHROME_CANARY = 'chromeCanary'\n}\n\nexport enum RUNTIME {\n  FIREFOX = 'firefox',\n  FIREFOX_NIGHTLY = 'firefoxNightly',\n  CHROME = 'chrome',\n  CHROME_CANARY = 'chromeCanary',\n  NODE = 'node'\n}\n\nexport interface RuntimeProvider extends Observable<Runtime> {\n  runtimeName: RUNTIME\n}\n\nexport interface Runtime extends Observable<any> {\n  loadFile(file: TestFile): Promise<ElementHandle>\n  inMessages: Subject<any>\n  outMessages: Subject<any>\n}\n\nexport enum LOG {\n  log = 'log',\n  info = 'info',\n  warn = 'warn',\n  error = 'error',\n  uncaughtError = 'uncaughtError'\n}\n\nexport interface MetaStack {\n  file: string\n  source: string\n  name: string\n  line: number\n  column: number\n  originalSource: string\n  originalName: string\n  originalLine: number\n  originalColumn: number\n}\n\nexport interface Error {\n  message: string\n  name: string\n  stack: string\n  string: string\n  metaStack?: MetaStack[]\n  originalStack?: string\n}\n\nexport interface Log {\n  type: LOG\n  arguments?: any[]\n  error?: Error\n}\n","import path from 'path'\n\nimport { Observable } from 'rxjs'\nimport ParcelBundler from 'parcel-bundler'\n\nimport { Bundler } from '../../types.ts'\n\nexport default (options = undefined): Bundler =>\n  Observable.create(observer => {\n    const bundler = new ParcelBundler(options.entryFiles, options)\n\n    bundler.addAssetType('js', path.resolve(__dirname, '../src/core/parcel/js-asset.js'))\n    bundler.addAssetType('ts', path.resolve(__dirname, '../src/core/parcel/ts-asset.js'))\n\n    bundler.on('bundled', bundle =>\n      observer.next({ name: 'bundled', parcelBundle: bundle, buildEndTime: Date.now() }))\n    bundler.on('buildStart', entryFiles =>\n      observer.next({ name: 'buildStart', entryFiles, buildStartTime: Date.now() }))\n    bundler.on('buildEnd', () =>\n      observer.next({ name: 'buildEnd' }))\n\n    const emitError = err => observer.error(err)\n    bundler.on('buildError', emitError)\n    bundler\n      .bundle()\n      .catch(emitError)\n\n    return () =>\n      bundler\n        .stop()\n        .catch(emitError)\n  })\n","\nimport fs from 'fs'\nimport path from 'path'\nimport { promisify } from 'util'\nimport { Test, TestFileRuntimeAggregation } from '../types';\n\nconst _access = promisify(fs.access)\n\nexport const cwd = process.cwd()\n\nexport const access =\n  (filename, _path = '') =>\n    _access(path.resolve(_path, filename), fs.constants.F_OK)\n      .then(\n        () => true,\n        () => false)\n\nexport const prettifyPath = _path => path.relative(cwd, _path)\n\nexport const getEmptyPageUrl = port =>\n  pathToEpkUrl(path.resolve(__dirname, '..', 'dist', 'empty.html'), port)\n\nexport const pathToTestUrl = (_path, { outDir = '.epk', port = undefined }) =>\n  `${port ? `http://localhost:${port}` : ''}${path.normalize(_path).replace(`${path.resolve(cwd, outDir, 'dist')}${path.sep}`, '/tests/').replace(path.sep, '/')}`\n\nexport const pathToEpkUrl = (_path, { port }) =>\n  `${port ? `http://localhost:${port}` : ''}${path.normalize(_path).replace(`${path.resolve(__dirname, '..', 'lib')}${path.sep}`, '/epk/').replace(path.sep, '/')}`\n\nexport const getTestFileAggregationStats =  (testFileAggregation: TestFileRuntimeAggregation) => {\n  const tests: Test[] | undefined = testFileAggregation?.tests\n  const runtimeTestFiles = Array.from(testFileAggregation.testFiles.values())\n  const testedTestsArray =\n    testFileAggregation.tests\n      ?.filter(({ description }) =>\n        runtimeTestFiles\n          .every(testFiles =>\n            testFiles.tests\n              ?.some(({ description: _description, executionEnd }) =>\n                _description === description &&\n                executionEnd)))\n      || []\n\n  const isPreprocessed = testFileAggregation.tests\n  const testedTest = testedTestsArray.length\n  const totalTests = testFileAggregation.tests?.length || 0\n\n  return {\n    tests,\n    runtimeTestFiles,\n    testedTestsArray,\n    isPreprocessed,\n    testedTest,\n    totalTests\n  }\n}","import set from 'core-js/features/set'\n\nimport fs from 'fs'\nimport path from 'path'\nimport { promisify } from 'util'\nimport { spawn } from 'child_process'\nimport { builtinModules } from 'module'\n\nimport { Observable, Subject, from } from 'rxjs'\nimport { shareReplay, filter, bufferTime, mergeMap, skip, switchMap, take } from 'rxjs/operators'\n// import rxjs from 'rxjs'\n// import rxjsOperators from 'rxjs/operators'\n\nimport { cwd, access } from './file.ts'\nimport { installImportOptions } from '../types.ts'\n\n// const { Observable, Subject, from } = rxjs\n// const { shareReplay, filter, bufferTime, mergeMap, skip } = rxjsOperators\n\nconst readFile = promisify(fs.readFile)\nconst writeFile = promisify(fs.writeFile)\n\nexport const getClosestPackageJSONDirPath =\n\t(_path: string = undefined, _cwd: string = cwd) =>\n\t\taccess('package.json', _path || _cwd)\n\t\t\t.then(access => {\n\t\t\t\tif (access) return _path || _cwd\n\t\t\t\tconst parentPath = path.resolve('..', _path)\n\t\t\t\treturn parentPath === _cwd\n\t\t\t\t\t? undefined\n\t\t\t\t\t: getClosestPackageJSONDirPath(parentPath)\n\t\t\t})\n\n/**\n * \n * @param path Package.json path\n * @returns Promise of a dependency and devDependency Set tuple\n */\nexport const getDependencies =\n\t(path: string): Promise<[Set<string>, Set<string>]> =>\n\t\treadFile(path, 'utf8')\n\t\t\t.then(\n\t\t\t\tdata => data,\n\t\t\t\terr => // If package.json doesn't exist, create an empty one\n\t\t\t\t\terr.code === 'ENOENT' &&\n\t\t\t\t\twriteFile(path, '{}')\n\t\t\t\t\t\t.then(() => '{}'))\n\t\t\t.then(data =>\n\t\t\t\tJSON.parse(data))\n\t\t\t.then(({ dependencies, devDependencies }) => [\n\t\t\t\t\tnew Set<string>([...builtinModules, ...Object.keys(dependencies)]),\n\t\t\t\t\tnew Set<string>([...builtinModules, ...Object.keys(devDependencies)])\n\t\t\t\t])\n\n// const installPackages = (dependencies: string[], { path, dev, yarn }: { path: string, dev: boolean, yarn: boolean }) =>\n// \tObservable.create(observer => {\n// \t\tconst child = spawn(\n// \t\t\tyarn ? 'yarn' : 'npm',\n// \t\t\t[\n// \t\t\t\tyarn ? 'add' : 'install',\n// \t\t\t\t...dependencies.map(name =>\n// \t\t\t\t\t\tname\n// \t\t\t\t\t\t\t.split('/')\n// \t\t\t\t\t\t\t.shift()),\n// \t\t\t\t...dev && [yarn ? '-D': '--save-dev']\n// \t\t\t],\n// \t\t\t{\n// \t\t\t\tcwd: path,\n// \t\t\t\tstdio: 'inherit', // needed to get the colors and stream writes\n// \t\t\t\tshell: process.platform === 'win32' // needed for windows\n// \t\t\t})\n// \t\t// If stdio is inherit, comment the data listeners\n// \t\t// child.stdout.on('data', data => observer.next(data.toString('utf8')))\n// \t\t// child.stderr.on('data', data => observer.error(data.toString('utf8')))\n// \t\tchild.on('close', () => observer.complete())\n// \t\treturn () => child.kill()\n// \t})\n// console.log(spawn('yarn -v'))\nconst installPackages = (dependencies: string[], { path, dev, yarn }: { path: string, dev: boolean, yarn: boolean }) =>\n\tnew Promise(resolve => {\n\t\tconst child = spawn(\n\t\t\tyarn ? 'yarn' : 'npm',\n\t\t\t[\n\t\t\t\tyarn ? 'add' : 'install',\n\t\t\t\t...dependencies.map(name =>\n\t\t\t\t\t\tname\n\t\t\t\t\t\t\t.split('/')\n\t\t\t\t\t\t\t.shift()),\n\t\t\t\t...dev ? [yarn ? '-D': '--save-dev'] : []\n\t\t\t],\n\t\t\t{\n\t\t\t\tcwd: path,\n\t\t\t\tstdio: 'inherit', // needed to get the colors and stream writes\n\t\t\t\tshell: process.platform === 'win32' // needed for windows\n\t\t\t}\n\t\t\t)\n\t\t// If stdio is inherit, comment the data listeners\n\t\t// child.stdout.on('data', data => observer.next(data.toString('utf8')))\n\t\t// child.stderr.on('data', data => observer.error(data.toString('utf8')))\n\t\tchild.on('close', () => resolve())\n\t})\n\nconst importModules =\n\t(names: string[]) =>\n\t\tPromise\n\t\t\t.all(\n\t\t\t\tnames.map(name =>\n\t\t\t\t\timport(name)))\n\nconst packageObservable = async (path: string): Promise<Function> => {\n\tconst packagePath = await getClosestPackageJSONDirPath(path)\n\tconst yarn = await access('yarn.lock', packagePath)\n\tconst [ dependencies, devDependencies ] = await getDependencies(`${path}/package.json`)\n\t// const [ seenDep, seenDevDep ] = [new Set(), new Set()]\n\tconst [ queuedDeps, queuedDevDeps ] = [new Set<string>(), new Set<string>()]\n\tlet pending: Promise<string[]> = Promise.resolve([])\n\n\tconst run = async (modules: string[], dev: boolean) => {\n\t\tconst deps = dev ? devDependencies : dependencies\n\t\tconst qDeps = dev ? queuedDevDeps : queuedDeps\n\n\t\tfor (const name of modules) qDeps.add(name)\n\n\t\tconst allCurrentModules = [...devDependencies, ...dependencies]\n\t\tif (!modules.some(name => !allCurrentModules.includes(name))) return importModules(modules)\n\n\t\ttry {\n\t\t\tawait pending\n\t\t} finally {\n\t\t\tconst names = Array.from(qDeps)\n\t\t\tawait installPackages(names, { path, dev, yarn })\n\n\t\t\tfor (const name of names) deps.add(name)\n\t\t\tfor (const name of names) qDeps.delete(name)\n\n      return importModules(modules)\n\t\t}\n\t}\n\t\n\n\treturn (modules: string[], dev: boolean = false) => (pending = run(modules, dev))\n\n\tconst [ depQueue, devDepQueue ] =\n\t\t[new Subject(), new Subject()]\n\t\t\t.map((subject, dev) =>\n\t\t\t\t// @ts-ignore\n\t\t\t\tsubject\n\t\t\t\t// @ts-ignore\n\t\t\t\t|> filter((names: string[]) => {\n\t\t\t\t\tconst seenDeps = dev ? seenDevDep : seenDep\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn Array.from(\n\t\t\t\t\t\t\tseenDeps\n\t\t\t\t\t\t\t\t.difference(names))\n\t\t\t\t\t\t\t\t.flat(Infinity)\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tfor (const name of names) seenDeps.add(name)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// @ts-ignore\n\t\t\t\t|> bufferTime(50)\n\t\t\t\t// @ts-ignore\n\t\t\t\t|> filter(arr => arr.length))\n\n\tconst [ depUpdate, devDepUpdate ] =\n\t\t[depQueue, devDepQueue]\n\t\t\t.map((obs, dev) =>\n\t\t\t\t// @ts-ignore\n\t\t\t\tobs\n\t\t\t\t// @ts-ignore\n\t\t\t\t|> mergeMap(async (names: string[]) => {\n\t\t\t\t\tconst deps = dev ? devDependencies : dependencies\n\n\t\t\t\t\tawait installPackages(names, { path, dev, yarn }).toPromise()\n\n\t\t\t\t\tfor (const name of names) deps.add(name)\n\n\t\t\t\t\treturn from(names)\n\t\t\t\t})\n\t\t\t\t// @ts-ignore\n\t\t\t\t|> shareReplay())\n\n\t// @ts-ignore\n\tdepUpdate.subscribe()\n\t// @ts-ignore\n\tdevDepUpdate.subscribe()\n\n\treturn (modules, dev) =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\tif (typeof modules === 'string') modules = [modules]\n\t\t\tconst deps = dev ? devDependencies : dependencies\n\t\t\tconst queue = dev ? devDepQueue : depQueue\n\t\t\tconst depsUpdate = dev ? devDepUpdate : depUpdate\n\n\t\t\tconst missingDeps =\n\t\t\t\tnew Set(\n\t\t\t\t\tmodules.map(name =>\n\t\t\t\t\t\tname\n\t\t\t\t\t\t\t.split('/')\n\t\t\t\t\t\t\t.shift()))\n\t\t\t\t\t\t\t.difference(deps)\n\t\t\t\n\t\t\tif (missingDeps.size) {\n\t\t\t\tconst obs =\n\t\t\t\t\tdepsUpdate\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t|> switchMap(obs => obs)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t|> filter(name => missingDeps.has(name))\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t|> skip(missingDeps.size - 1)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t|> take(1)\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tobs.subscribe(() => resolve(importModules(modules)))\n\t\t\t\t\n\t\t\t\t// @ts-ignore\n\t\t\t\tfor (const name of missingDeps) queue.next(name)\n\n\t\t\t} else {\n\t\t\t\tresolve(importModules(modules))\n\t\t\t}\n\t\t})\n}\n\nconst packages = new Map<string, Function>()\n\nconst getPackage = async (path: string) =>\n\tpackages.has(path)\n\t\t? packages.get(path)\n\t\t: packages\n\t\t\t.set(path, await packageObservable(path))\n\t\t\t.get(path)\n\nexport default async (names: string | string[], options?: installImportOptions) =>\n\tgetPackage(options?.path || await getClosestPackageJSONDirPath())\n\t\t.then(getPackage =>\n\t\t\tgetPackage(Array.isArray(names) ? names : [names], options?.dev))\n\t\t.then(packages =>\n\t\t\tArray.isArray(names)\n\t\t\t\t? packages\n\t\t\t\t: packages[0])\n","import { Observable } from 'rxjs'\n\nexport default <T>(func: Function): Observable<T> =>\n  Observable.create(observer => {\n    const unsubscribe = func(observer)\n    return async () => (await unsubscribe)?.()\n  })\n","import { mergeMap } from 'rxjs/operators'\nimport asyncObservable from './async-observable.ts'\n\nexport default mergeMap(_value =>\n  asyncObservable(async observer => {\n    const value = await _value\n    if (value) observer.next(value)\n  }))","import { stringify as _stringify, parse as _parse } from 'flatted'\n\nimport { EPK_FUNCTION_PROPERTY_PLACEHOLDER } from '../types.ts'\n\nexport const stringify = data =>\n  _stringify(\n    data,\n    (key, val) =>\n      typeof val === 'function'\n        ? {\n          [EPK_FUNCTION_PROPERTY_PLACEHOLDER]: val.name\n        }\n        : val)\n\nexport const parse = data =>\n  _parse(\n    data,\n    (_, val) =>\n      val?.[EPK_FUNCTION_PROPERTY_PLACEHOLDER]\n        // Way to dynamically set a function name (to render via `util.inspect` from the reporter)\n        ? {\n          [val[EPK_FUNCTION_PROPERTY_PLACEHOLDER]]: () => {}\n        }[val[EPK_FUNCTION_PROPERTY_PLACEHOLDER]]\n        : val)","import path from 'path'\n\nimport { installImport, Observable as AsyncObservable, pathToEpkUrl } from '../utils/index.ts'\nimport { TestFile, EPK_SUBJECT, EPK_RUNTIME_SUBJECT } from '../types.ts'\nimport { ReplaySubject, Subject } from 'rxjs'\nimport { stringify, parse } from '../utils/index.ts'\n\nlet pptr\n\nexport default ({ port }) =>\n  AsyncObservable(async observer => {\n    if (!pptr) pptr = await installImport('puppeteer')\n\n    const rootBrowser = await pptr.launch({ devtools: true })\n\n    observer.next(\n      AsyncObservable(async observer => {\n        const emptyHTMLFilePath = path.resolve(__dirname, '..', 'lib', 'empty.html')\n        const emptyPageUrl = pathToEpkUrl(emptyHTMLFilePath, { port })\n\n        const browser = await rootBrowser.createIncognitoBrowserContext()\n        const page = await browser.newPage()\n        \n        const inMessages = new ReplaySubject()\n        page.exposeFunction(\n          EPK_RUNTIME_SUBJECT,\n          value => inMessages.next(parse(value))\n        )\n\n        let subjectHandle\n\n        const outMessages = new Subject()\n        outMessages.subscribe(value =>\n          page.evaluate(\n            (subject, value) => subject.next(value),\n            subjectHandle,\n            stringify(value)\n          )\n        )\n\n        observer.next({\n          inMessages,\n          outMessages,\n          loadFile: async (testFile: TestFile) => {\n            await page.goto(emptyPageUrl)\n            await page.addScriptTag({ url: testFile.url })\n            subjectHandle = await page.evaluateHandle(\n              (subjectGlobalProperty) => globalThis[subjectGlobalProperty],\n              EPK_SUBJECT\n            )\n          }\n        })\n\n        return () => page.close()\n      })\n    )\n\n    return () => rootBrowser.close()\n  })\n\n  // Observable.create(observer => {\n  //   if (!pptr) installImport('puppeteer').then(_pptr => pptr = _pptr)\n\n  //   const browser = pptr.then(pptr => pptr.launch({ devtools: true }))\n\n  //   browser.then(browser =>\n  //     observer.next(Observable.create(observer => {\n  //       const page = browser.newPage()\n  //       const emptyHTMLFilePath = path.resolve(__dirname, '..', 'dist', 'empty.html')\n  //       const url = transformPathToEpkUrl(emptyHTMLFilePath, options.port)\n  //       page.then(page => {\n  //         observer.next({\n  //           loadFile: file => page.goto(url).then(() => page.addScriptTag({ url: file.url })),\n  //           exec: str => page.evaluate(str)\n  //         })\n  //       })\n  //       return () =>\n  //         page.then(page =>\n  //           page.close())\n  //     })))\n\n  //   return () =>\n  //     browser.then(browser =>\n  //       browser.close())\n  // })\n","import { RUNTIME, RuntimeProvider } from '../types.ts'\n\nimport chrome from './chrome.ts'\nimport { map } from 'rxjs/operators'\nimport { Observable } from 'rxjs'\n\nconst runtimeMap = new Map<RUNTIME, (...args) => Observable<RuntimeProvider>>([\n  [RUNTIME.CHROME, chrome]\n])\n\nfor (const [runtimeName, runtime] of runtimeMap) {\n  runtimeMap.set(\n    runtimeName,\n    (...args) =>\n      // @ts-ignore\n      runtime(...args)\n      // @ts-ignore\n      |> map((provider: RuntimeProvider) => {\n        provider.runtimeName = runtimeName\n        return provider\n      }))\n\n  runtimeMap.get(runtimeName).runtimeName = runtimeName\n}\n\nexport default (runtime: RUNTIME) => runtimeMap.get(runtime)\n","import { performance } from 'perf_hooks'\n\nimport { OperatorFunction } from 'rxjs'\nimport {\n  map,\n  scan,\n  skip,\n  take,\n  pluck,\n  filter,\n  mergeMap,\n  startWith,\n  takeUntil,\n  combineLatest,\n} from 'rxjs/operators'\n\nimport { MESSAGE, TestFile, Runtime } from '../types.ts'\nimport { Observable as AsyncObservable } from '../utils/index.ts'\n\nexport default (testFile: TestFile): OperatorFunction<Runtime, TestFile> =>\n  mergeMap(({ loadFile, inMessages, outMessages }: Runtime) =>\n    AsyncObservable<TestFile>(async observer => {\n      const preprocessingStart = performance.now()\n      await loadFile(testFile)\n\n      const tests =\n        // @ts-ignore\n        inMessages\n        // @ts-ignore\n        |> filter(({ type }) => type === MESSAGE.GET_TESTS_RESPONSE)\n        // @ts-ignore\n        |> pluck('tests')\n        // @ts-ignore\n        |> take(1)\n        // @ts-ignore\n        |> startWith(undefined)\n\n      const logs =\n        // @ts-ignore\n        inMessages\n        // @ts-ignore\n        |> takeUntil(tests |> skip(1))\n        // @ts-ignore\n        |> filter(({ type }) => type === MESSAGE.LOG)\n        // @ts-ignore\n        |> pluck('log')\n        // @ts-ignore\n        |> scan((arr, log) => [...arr, log] , [])\n        // @ts-ignore\n        |> startWith([])\n\n      const result =\n        tests\n        // @ts-ignore\n        |> take(2)\n        // @ts-ignore\n        |> combineLatest(logs)\n        // @ts-ignore\n        |> map(([tests, logs]): TestFile => ({\n          ...testFile,\n          tests,\n          logs,\n          preprocessingStart,\n          preprocessingEnd: tests && performance.now()\n        }))\n\n      // @ts-ignore\n      result.subscribe(\n        analyzedTestFile => observer.next(analyzedTestFile),\n        err => observer.error(err),\n        () => observer.complete()\n      )\n\n      outMessages.next({ type: MESSAGE.GET_TESTS })\n    })\n  )\n","import { mergeScan, map, takeUntil } from 'rxjs/operators'\nimport { of, merge } from 'rxjs'\n\nimport { TestFile, Test, Log } from '../types.ts'\nimport preprocessTestFile from './preprocessor.ts'\nimport runTest from './runner.ts'\nimport analyzeTests from './analyzer.ts'\n\ninterface Cache {\n  hashes: Set<string>\n  tests: Test,\n  testsDone: boolean\n  logs: Log[]\n  preprocessingStart: boolean\n  preprocessingEnd: boolean\n}\n\nexport default\n  unsubscribe =>\n    // @ts-ignore\n    mergeScan<unknown, [Partial<Cache>, TestFile?]>(([cache], testFile: TestFile) => {\n      const { hashes: cachedHashes } = cache\n      const { hashes } = cache\n\n      // @ts-ignore\n      const hashDifference = cachedHashes.difference(hashes)\n      const hasChanged =\n        hashDifference.size\n        || hashes.size\n\n      const preprocessedTestFile =\n        // @ts-ignore\n        of(testFile)\n        // @ts-ignore\n        |> filter(() => hasChanged)\n        // @ts-ignore\n        |> switchMap(() =>\n          // @ts-ignore\n          runtimeProvider\n          // @ts-ignore\n          |> preprocessTestFile(testFile)\n          // @ts-ignore\n          |> takeWhile(({ preprocessingEnd }) => !preprocessingEnd, true)\n        )\n        // @ts-ignore\n        |> tap(({ tests, logs, preprocessingStart, preprocessingEnd }) => {\n          cache.tests = tests\n          cache.testsDone = false\n          cache.logs = logs\n          cache.preprocessingStart = preprocessingStart\n          cache.preprocessingEnd = preprocessingEnd\n        })\n        // @ts-ignore\n        |> share()\n\n      const testResult =\n        // @ts-ignore\n        merge(\n          preprocessedTestFile\n          // @ts-ignore\n          |> filter(({ preprocessingEnd }) => preprocessingEnd),\n          // @ts-ignore\n          of(cachedTestFile)\n          // @ts-ignore\n          |> filter(() => !hashDifference.size && testFile.hashes.size)\n        )\n        // @ts-ignore\n        |> switchMap((testFile: TestFile) =>\n          // @ts-ignore\n          from(testFile.tests)\n          // @ts-ignore\n          |> mergeMap((test: Test) =>\n            // test hasn't changed and is in the cache\n            (!hashDifference.size &&\n            cachedTestFile.tests.find((_test) =>\n              test.description === _test.description &&\n              'executionEnd' in _test)) ||\n            // test has changed or wasn't in the cache\n            // @ts-ignore\n            runtimeProvider\n            // @ts-ignore\n            |> run(testFile, test)\n            // @ts-ignore\n            |> takeWhile(({ executionEnd }) => !executionEnd, true)\n          )\n        )\n        // @ts-ignore\n        |> updateCache\n        // @ts-ignore\n        |> share()\n    \n      const analyzedTest =\n        // @ts-ignore\n        merge(\n          testResult\n          // @ts-ignore\n          |> filter(({ preprocessEnd }) => preprocessEnd),\n          // @ts-ignore\n          of(cachedTestFile)\n          // @ts-ignore\n          |> filter(() => !hashDifference.size && testFile.hashes.size)\n        )\n        // @ts-ignore\n        |> switchMap((testFile: TestFile) =>\n          // @ts-ignore\n          from(testFile.tests)\n          // @ts-ignore\n          |> mergeMap((_test: Test) =>\n            // test hasn't changed and is in the cache\n            (!hashDifference.size &&\n            cachedTestFile.tests.find((test) =>\n              test.description === _test.description &&\n              'executionEnd' in test)) ||\n            // test has changed or wasn't in the cache\n            // @ts-ignore\n            runtimeProvider\n            // @ts-ignore\n            |> test(testFile, _test)\n            // @ts-ignore\n            |> takeWhile(({ executionEnd }) => !executionEnd, true)\n          )\n        )\n\n      const mergedResult = merge(\n        preprocessedTestFile,\n        testResult,\n        analyzedTest\n      )\n\n      return (\n        // @ts-ignore\n        mergedResult\n        // @ts-ignore\n        |> map(result => [cache, result])\n        // @ts-ignore\n        |> takeUntil(unsubscribe)\n      )\n    }, [{}])\n    // @ts-ignore\n    |> map(([, result]) => result)\n","import { Observable, Subject, from } from 'rxjs'\nimport { publish, switchMap, filter, map, tap, takeUntil, mergeMap, shareReplay } from 'rxjs/operators'\n\nimport './polyfills.ts'\nimport { REPORTER_EVENT, Options, TARGET, RUNTIME } from '../types.ts'\nimport Parcel from './parcel/index.ts'\nimport getRuntimeProvider from '../runtimes/index.ts'\nimport test from './tester.ts'\n\nexport default\n  (options: Options) =>\n    Observable.create(observer => {\n      const { watch, target = TARGET.BROWSER, entryFiles, port, outDir = '.epk' } = options\n\n      const unsubscribe = new Subject()\n\n      const parcelBundle =\n        // @ts-ignore\n        (Parcel({\n          entryFiles: entryFiles,\n          target: target,\n          outDir: `${outDir}/dist/${target}`,\n          watch: true,\n          cache: true,\n          cacheDir: `${outDir}/cache/${target}`\n        })\n        // @ts-ignore\n        |> takeUntil(unsubscribe)\n        // @ts-ignore\n        |> publish())\n          // @ts-ignore\n          .refCount()\n\n      // @ts-ignore\n      const bundle =\n        // @ts-ignore\n        parcelBundle\n        // @ts-ignore\n        |> filter(({ name }) => name === 'buildStart')\n        // @ts-ignore\n        |> tap(() => observer.next({ type: REPORTER_EVENT.BUILD_START }))\n        // @ts-ignore\n        |> switchMap(({ entryFiles, buildStartTime }) =>\n          // @ts-ignore\n          parcelBundle\n          // @ts-ignore\n          |> filter(({ name }) => name === 'bundled')\n          // @ts-ignore\n          |> tap(() => observer.next({ type: REPORTER_EVENT.BUILD_SUCCESS }))\n          // @ts-ignore\n          |> map(bundle => ({ ...bundle, entryFiles, buildStartTime })))\n        // @ts-ignore\n        |> shareReplay(1) // needed for slow runtimes to start working on initial bundle\n\n      const runtimeNames =\n        options.target === TARGET.NODE\n          ? [RUNTIME.NODE]\n          : options.browsers as unknown as RUNTIME[] || [RUNTIME.CHROME]\n\n      const runtimeProvider =\n        // @ts-ignore\n        from(\n          runtimeNames\n            .map(runtimeName => getRuntimeProvider(runtimeName))\n            .map(makeRuntimeProvider => makeRuntimeProvider(options)))\n        // @ts-ignore\n        |> mergeMap(runtimeProvider => runtimeProvider) // todo: check how to remove that\n        // @ts-ignore\n        |> takeUntil(unsubscribe)\n\n      const tests = test({\n        bundle,\n        runtimeProvider\n      })\n\n      // @ts-ignore\n      tests.subscribe(\n        value => observer.next(value),\n        error => observer.error(error),\n        () => observer.complete()\n      )\n\n      return () => {\n        unsubscribe.next()\n        unsubscribe.complete()\n      }\n    })\n","import path from 'path'\n\nimport { Text, Box, Color } from 'ink'\nimport React, { useEffect, useState } from 'react'\nimport BorderBox from 'ink-box'\nimport getStrLength from 'string-width'\nimport ColorPipe from 'ink-color-pipe'\n\nimport File from './file.tsx'\nimport { prettifyPath } from '../../utils/file.ts'\nimport { TestFileRuntimeAggregation, TestFile, LOG } from '../../types.ts'\n\ninterface State {\n  testFiles: Map<string, TestFileRuntimeAggregation>\n}\n\nconst UP_ARROW = '\\u001B[A'\nconst DOWN_ARROW = '\\u001B[B'\nconst RIGHT_ARROW = '\\u001B[C'\nconst LEFT_ARROW = '\\u001B[D'\nconst CTRL_C = '\\x03'\n\nconst useError = (subject) => {\n  const [error, setError] = useState<Error>()\n  useEffect(() => {\n    const subscription =\n      subject.subscribe(\n        () => {},\n        error => setError(error))\n    return () => subscription.unsubscribe()\n  }, [])\n\n  return [\n    error,\n    error\n      ? <Color red>\n        <Box flexDirection=\"column\">\n          <Box>An internal error happened, you should probably report the error here: https://github.com/FKN48/EPK/issues</Box>\n        </Box>\n      </Color>\n      : ''\n  ]\n}\n\nconst useFilesState = (subject) => {\n  const [{ testFiles }, setFilesState] = useState<State>({\n    testFiles: new Map()\n  })\n\n  useEffect(() => {\n    const subscription = subject.subscribe(report => setFilesState(report))\n    return () => subscription.unsubscribe()\n  }, [])\n\n  return Array.from(testFiles.values())\n}\n\nconst getRenderableNames = (terminalWidth, names: string[], startAt): [[string, number][], number, boolean] =>\n  Array.from(names)\n    .splice(startAt)\n    .reduce(([list, max, found = false], name, i) =>\n      found\n        ? [list, max, true]\n        : getStrLength(`${list.join(' ')} ${name}`) > terminalWidth\n          ? [list, max, true]\n          : [[...list, [name, i + startAt]], i + startAt, false]\n    , [[], 0, false])\n\nconst useTabs = ({ stdin, setRawMode }, aggregatedTestFiles: TestFileRuntimeAggregation[]): [TestFileRuntimeAggregation, JSX.Element] => {\n  /**\n   * Level 0 = folder\n   * Level 1 = file\n   */\n  const [level, setLevel] = useState<number>(0)\n  const [[selected, scroll], setState] = useState<[number, number]>([0, 0])\n\n  const folderTestFileMap =\n    aggregatedTestFiles\n      .map(({name, displayName}) => [path.dirname(name), displayName])\n      .reduce((map, [folder, file]) =>\n        (map.get(folder) ||\n        map.set(folder, []).get(folder)).push(file) &&\n        map\n      , new Map<string, string[]>())\n      \n  const terminalWidth = process.stdout.columns\n  const terminalHeight = process.stdout.rows\n\n  const folderNames = Array.from(folderTestFileMap.keys())\n  const fileNames = Array.from(folderTestFileMap.values()).flat()\n\n  const names = level ? folderNames : fileNames\n\n  const [, _maxRenderableNames] = getRenderableNames(terminalWidth, names, scroll)\n\n  const needScroller = _maxRenderableNames !== names.length\n\n  const [renderNames, maxRenderableNames] = getRenderableNames(terminalWidth - getStrLength(`⬅️➡️`), names, scroll)\n\n  const handleKeyPress = data => {\n    const s = String(data)\n    if (s === CTRL_C) {\n      setRawMode(false)\n      process.exit()\n    }\n    if (s === RIGHT_ARROW) {\n      setState(([selected, scroll]) => [\n        selected + (selected < names.length - 1 ? 1 : 0),\n        scroll + (selected < names.length - 1 && selected === scroll + maxRenderableNames ? 1 : 0)\n      ])\n    }\n    if (s === LEFT_ARROW) {\n      setState(([selected, scroll]) => [\n        selected - (selected > 0 ? 1 : 0),\n        scroll - (scroll > 0 && selected === scroll ? 1 : 0)\n      ])\n    }\n  }\n\n  useEffect(() => {\n    setRawMode(true)\n    stdin.on('data', handleKeyPress)\n    return () => {\n      stdin.removeListener('data', handleKeyPress)\n    }\n  })\n\n  // remove set raw mode, as it might interfere with CTRL-C\n  useEffect(() => () => setRawMode(false), [])\n  return [\n    aggregatedTestFiles[selected],\n    <Box width={terminalWidth} alignItems=\"center\" justifyContent=\"space-around\">\n        <Box>\n          {\n            needScroller &&\n            renderNames[0][1] !== 0\n              ? '⬅️'\n              : ''\n          }\n        </Box>\n        {\n          renderNames\n            .map(([name, i]) => {\n              const testFiles =\n                Array.from(\n                  aggregatedTestFiles\n                    .find(({displayName}) => displayName === name)\n                    .testFiles.values())\n\n              const hasErrors =\n                testFiles.some(({tests}) =>\n                  tests?.some(({logs}) =>\n                    logs?.some(({type}) => type === LOG.error)))\n\n              return (\n                <Box key={name}>\n                  <ColorPipe styles={`${hasErrors ? 'red' : 'greenBright'}${i === selected ? '.bold.underline' : ''}`}>\n                    {prettifyPath(name)}\n                  </ColorPipe>\n                </Box>\n              )\n            })\n            .reverse()\n            .reduce((arr, value, i) =>\n              i\n                ? [...arr, [value, <Text key={i}> </Text>]]\n                : [...arr, [value]]\n              , [])\n            .reverse()\n            .flat(Infinity)\n        }\n        <Box>\n          {\n            needScroller &&\n            renderNames[renderNames.length - 1][1] !== names.length - 1\n              ? '➡️'\n              : ''\n          }\n        </Box>\n      </Box>\n  ]\n}\n\nconst useTestFile = (aggregatedTestFile: TestFileRuntimeAggregation) => {\n  // todo:\n  // replace tests because TestFileRuntimeAggregation#tests are analyzed tests,\n  // they're not tested so they'll not have execution error logs\n  const color =\n    aggregatedTestFile?.tests &&\n    'executionEnd'\n      ? aggregatedTestFile.tests.some(({logs}) => logs?.some(({type}) => type === LOG.error))\n        ? 'red'\n        : 'greenBright'\n      : ''\n\n  return aggregatedTestFile\n    ? <Box flexDirection=\"column\">\n      <Box>\n        <ColorPipe styles={color}>\n          {aggregatedTestFile.displayName}\n        </ColorPipe>\n      </Box>\n      <Box  flexDirection=\"column\" paddingLeft={2}>\n        {\n          aggregatedTestFile.tests?.map(({ description, logs }) => (\n            <Box key={description}>\n              <ColorPipe\n                styles={\n                  logs\n                    ? logs.some(({type}) => type === LOG.error)\n                      ? 'red'\n                      : 'greenBright'\n                    : ''\n                }>\n                {description}\n              </ColorPipe>\n            </Box>\n          ))\n        }\n      </Box>\n    </Box>\n    : ''\n}\n\nexport default ({ stdin, setRawMode, subject }) => {\n  const [ error, errorElement ] = useError(subject)\n  const aggregatedTestFiles = useFilesState(subject)\n  const [ selected, tabsElement ] = useTabs({ stdin, setRawMode }, aggregatedTestFiles)\n  const fileDescription = useTestFile(selected)\n  return <Box flexDirection=\"column\">\n    { fileDescription }\n    { tabsElement }\n    { errorElement }\n  </Box>\n}\n\n// testFiles.length &&\n// Array.from(testFiles).map(testFile =>\n//   <File key={testFile.name} testFile={testFile}/>) || ''\n// <BorderBox borderStyle=\"round\">\n//   {\n//     Array.from(state.testFiles).map(([,testFile]) =>\n//       <File key={testFile.name} testFile={testFile}/>)\n//   }\n// </BorderBox> || ''\n","import { render, StdinContext } from 'ink'\nimport React from 'react'\nimport Reporter from './reporter.tsx'\n\nexport default subject =>\n  render(\n    <StdinContext.Consumer>\n      {({ stdin, setRawMode }) => (\n        <Reporter stdin={stdin} setRawMode={setRawMode} subject={subject}/>\n      )}\n    </StdinContext.Consumer>\n  )\n","import path from 'path'\n\nimport { installImport, Observable as AsyncObservable, cwd } from '../utils/index.ts'\n\nlet imports\n\nexport default options =>\n  AsyncObservable(async observer => {\n    const { port } = options\n    if (!imports) imports = await installImport(['koa', 'koa-static', 'koa-mount'])\n\n    const [ Koa, serve, mount ] = imports\n\n    const app = new Koa()\n\n    const epk = new Koa()\n    epk.use(serve(path.resolve(__dirname, '..', 'lib')))\n\n    const tests = new Koa()\n    tests.use(serve(path.resolve(cwd, '.epk', 'dist')))\n\n    app.use(mount('/epk', epk))\n    app.use(mount('/tests', tests))\n\n    await app.listen(port)\n    \n    observer.next(app)\n\n    return () => app.close()\n  })\n","import path from 'path'\n\nimport 'v8-compile-cache'\nimport getPort from 'get-port'\nimport program from 'commander'\nimport chalk from 'chalk'\n\nimport pkg from '../../package.json'\nimport Tester from '../core/index.ts'\nimport CLIReporter from '../reporters/cli/index.tsx'\nimport Server from '../server/index.ts'\nimport { tap, take, shareReplay, filter } from 'rxjs/operators'\nimport { Subject } from 'rxjs'\nimport { REPORTER_EVENT } from '../types.ts'\n\nprocess.on('unhandledRejection', error => {\n  console.error(error)\n  process.exit(1)\n})\n\nprogram.version(pkg.version)\n\nconst commonOptions = {\n  '--no-cache': 'disable the filesystem cache',\n  '--cache-dir <path>': 'set the cache directory. defaults to \".parcel-cache\"',\n  '--no-source-maps': 'disable sourcemaps',\n  '--no-autoinstall': 'disable autoinstall',\n  '--public-url <url>': 'set the public URL to serve on. defaults to \"/\"',\n  '--log-level <level>': [\n    'set the log level, either \"none\", \"error\", \"warn\", \"info\", or \"verbose\".',\n    /^(none|error|warn|info|verbose)$/\n  ],\n  '-T, --target': [\n    'target for the test, either \"browser\" or \"node\"',\n    /^(browser|node)$/\n  ],\n  '-V, --version': 'output the version number'\n}\n\nprogram\n  .command('help [command]')\n  .description('display help information for a command')\n  .action(command =>\n    (\n      program\n        .commands\n        .find(c =>\n          c.name() === command) ||\n      program)\n      .help())\n\nprogram.on('--help', function() {\n  console.log('')\n  console.log(`  Run \\`${chalk.bold('epk help <command>')}\\` for more information on specific commands`)\n  console.log('')\n})\n\nconst run = async (entries: Array<string>, command: any) => {\n  entries = entries.map(entry => path.resolve(entry))\n\n  if (entries.length === 0) return console.log('No entries found')\n\n  const subject = new Subject()\n\n  CLIReporter(\n    // @ts-ignore\n    subject\n    // @ts-ignore\n    |> filter(({ type }) => type === REPORTER_EVENT.STATE)\n  )\n\n  await new Promise(resolve => setTimeout(resolve, 0))\n  subject.next({ type: REPORTER_EVENT.PORT_SEARCH })\n  const port = await getPort({ port: command.port || 10485 })\n  subject.next({ type: REPORTER_EVENT.PORT_FOUND, port })\n\n  // @ts-ignore\n  const serverObservable = Server({ port }) |> shareReplay(1)\n  subject.next({ type: REPORTER_EVENT.WEB_SERVER_START })\n  serverObservable.subscribe()\n\n  // @ts-ignore\n  await (serverObservable |> take(1)).toPromise()\n  subject.next({ type: REPORTER_EVENT.WEB_SERVER_READY, port })\n\n  const testerObservable =\n    // @ts-ignore\n    Tester(({\n      entryFiles: entries,\n      watch: command.watch,\n      target: command.target,\n      port\n    }))\n\n  // @ts-ignore\n  testerObservable.subscribe(\n    report => subject.next(report),\n    error => {\n      subject.error(error)\n      setTimeout(() => process.exit(1), 0)\n      throw error\n    },\n    () => subject.complete())\n}\n\nconst watch = program\n  .command('watch [input...]')\n  .description('starts the tester in watch mode')\n  .action(run)\n\napplyOptions(watch, commonOptions)\n\nconst test = program\n  .command('test [input...]')\n  .description('test once')\n  .action(run)\n\napplyOptions(test, commonOptions)\n\nfunction applyOptions(cmd, options) {\n  for (let opt in options) {\n    cmd.option(\n      opt,\n      ...(Array.isArray(options[opt]) ? options[opt] : [options[opt]])\n    )\n  }\n}\n\n// Make watch the default command except for --help\nlet args = process.argv\nif (args[2] === '--help' || args[2] === '-h') args[2] = 'help'\nif (!args[2] || !program.commands.some(c => c.name() === args[2])) {\n  args.splice(2, 0, 'watch')\n}\nprogram.parse(args)\n"],"names":["EPK_SUBJECT","EPK_RUNTIME_SUBJECT","EPK_FUNCTION_PROPERTY_PLACEHOLDER","MESSAGE","messageMap","Map","GET_TESTS","GET_TESTS_RESPONSE","RUN_TESTS","RUN_TESTS_RESPONSE","RUN_TEST","RUN_TEST_RESPONSE","PARCEL_REPORTER_EVENT","REPORTER_EVENT","TARGET","BROWSER","RUNTIME","LOG","options","undefined","Observable","create","observer","bundler","ParcelBundler","entryFiles","addAssetType","path","resolve","__dirname","on","bundle","next","name","parcelBundle","buildEndTime","Date","now","buildStartTime","emitError","err","error","catch","stop","_access","promisify","fs","access","cwd","process","filename","_path","constants","F_OK","then","prettifyPath","relative","pathToEpkUrl","port","normalize","replace","sep","readFile","writeFile","getClosestPackageJSONDirPath","_cwd","parentPath","getDependencies","data","code","JSON","parse","dependencies","devDependencies","Set","builtinModules","Object","keys","installPackages","dev","yarn","Promise","child","spawn","map","split","shift","stdio","shell","platform","importModules","names","all","packageObservable","packagePath","queuedDeps","queuedDevDeps","pending","run","modules","deps","qDeps","add","allCurrentModules","some","includes","Array","from","delete","depQueue","devDepQueue","Subject","subject","filter","seenDeps","seenDevDep","seenDep","difference","flat","Infinity","bufferTime","arr","length","depUpdate","devDepUpdate","obs","mergeMap","toPromise","shareReplay","subscribe","reject","queue","depsUpdate","missingDeps","size","switchMap","has","skip","take","packages","getPackage","get","set","isArray","func","unsubscribe","_value","asyncObservable","value","stringify","_stringify","key","val","_parse","_","pptr","AsyncObservable","installImport","rootBrowser","launch","devtools","emptyHTMLFilePath","emptyPageUrl","browser","createIncognitoBrowserContext","page","newPage","inMessages","ReplaySubject","exposeFunction","subjectHandle","outMessages","evaluate","loadFile","testFile","goto","addScriptTag","url","evaluateHandle","subjectGlobalProperty","globalThis","close","runtimeMap","CHROME","chrome","runtimeName","runtime","args","provider","preprocessingStart","performance","tests","type","pluck","startWith","logs","takeUntil","scan","log","result","combineLatest","preprocessingEnd","analyzedTestFile","complete","mergeScan","cache","hashes","cachedHashes","hashDifference","hasChanged","preprocessedTestFile","of","runtimeProvider","preprocessTestFile","takeWhile","tap","testsDone","share","testResult","merge","cachedTestFile","test","find","_test","description","executionEnd","updateCache","analyzedTest","preprocessEnd","mergedResult","watch","target","outDir","Parcel","cacheDir","publish","refCount","BUILD_START","BUILD_SUCCESS","runtimeNames","NODE","browsers","getRuntimeProvider","makeRuntimeProvider","RIGHT_ARROW","LEFT_ARROW","CTRL_C","useError","setError","useState","useEffect","subscription","React","Color","Box","useFilesState","testFiles","setFilesState","report","values","getRenderableNames","terminalWidth","startAt","splice","reduce","list","max","found","i","getStrLength","join","useTabs","stdin","setRawMode","aggregatedTestFiles","level","setLevel","selected","scroll","setState","folderTestFileMap","displayName","dirname","folder","file","push","stdout","columns","terminalHeight","rows","folderNames","fileNames","_maxRenderableNames","needScroller","renderNames","maxRenderableNames","handleKeyPress","s","String","exit","removeListener","hasErrors","reverse","Text","useTestFile","aggregatedTestFile","color","errorElement","tabsElement","fileDescription","render","StdinContext","imports","Koa","serve","mount","app","epk","use","listen","console","program","version","pkg","commonOptions","command","action","commands","c","help","chalk","bold","entries","entry","CLIReporter","STATE","setTimeout","PORT_SEARCH","getPort","PORT_FOUND","serverObservable","Server","WEB_SERVER_START","WEB_SERVER_READY","testerObservable","Tester","applyOptions","cmd","opt","option","argv"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA,AAAO,MAAMA,WAAW,GAAG,kBAApB;;AAEP,AAAO,MAAMC,mBAAmB,GAAG,2BAA5B;AACP,AAAO,MAAMC,iCAAiC,GAAG,gCAA1C;AA8LP,IAAYC,OAAZ;;WAAYA;EAAAA,QAAAA;EAAAA,QAAAA;EAAAA,QAAAA;EAAAA,QAAAA;EAAAA,QAAAA;EAAAA,QAAAA;GAAAA,YAAAA;;AAWZ,MAAMC,UAAU,GAAG,IAAIC,GAAJ,CAA0B,CAC3C,CAACF,OAAO,CAACG,SAAT,EAAoBH,OAAO,CAACI,kBAA5B,CAD2C,EAE3C,CAACJ,OAAO,CAACK,SAAT,EAAoBL,OAAO,CAACM,kBAA5B,CAF2C,EAG3C,CAACN,OAAO,CAACO,QAAT,EAAmBP,OAAO,CAACQ,iBAA3B,CAH2C,CAA1B,CAAnB;AAMA;AAGA,IAAYC,qBAAZ;;WAAYA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;GAAAA,0BAAAA;;AAQZ,IAAYC,cAAZ;;WAAYA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;GAAAA,mBAAAA;;AAaZ,IAAYC,MAAZ;;WAAYA;EAAAA;EAAAA;GAAAA,WAAAA;;AAKZ,IAAYC,OAAZ;;WAAYA;EAAAA;EAAAA;EAAAA;EAAAA;GAAAA,YAAAA;;AAOZ,IAAYC,OAAZ;;WAAYA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;GAAAA,YAAAA;;AAkBZ,IAAYC,GAAZ;;WAAYA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;GAAAA,QAAAA;;ACvQZ,cAAe,CAACC,OAAO,GAAGC,SAAX,KACbC,eAAU,CAACC,MAAX,CAAkBC,QAAQ,IAAI;QACtBC,OAAO,GAAG,IAAIC,aAAJ,CAAkBN,OAAO,CAACO,UAA1B,EAAsCP,OAAtC,CAAhB;EAEAK,OAAO,CAACG,YAAR,CAAqB,IAArB,EAA2BC,IAAI,CAACC,OAAL,CAAaC,SAAb,EAAwB,gCAAxB,CAA3B;EACAN,OAAO,CAACG,YAAR,CAAqB,IAArB,EAA2BC,IAAI,CAACC,OAAL,CAAaC,SAAb,EAAwB,gCAAxB,CAA3B;EAEAN,OAAO,CAACO,EAAR,CAAW,SAAX,EAAsBC,MAAM,IAC1BT,QAAQ,CAACU,IAAT,CAAc;IAAEC,IAAI,EAAE,SAAR;IAAmBC,YAAY,EAAEH,MAAjC;IAAyCI,YAAY,EAAEC,IAAI,CAACC,GAAL;GAArE,CADF;EAEAd,OAAO,CAACO,EAAR,CAAW,YAAX,EAAyBL,UAAU,IACjCH,QAAQ,CAACU,IAAT,CAAc;IAAEC,IAAI,EAAE,YAAR;IAAsBR,UAAtB;IAAkCa,cAAc,EAAEF,IAAI,CAACC,GAAL;GAAhE,CADF;EAEAd,OAAO,CAACO,EAAR,CAAW,UAAX,EAAuB,MACrBR,QAAQ,CAACU,IAAT,CAAc;IAAEC,IAAI,EAAE;GAAtB,CADF;;QAGMM,SAAS,GAAGC,GAAG,IAAIlB,QAAQ,CAACmB,KAAT,CAAeD,GAAf,CAAzB;;EACAjB,OAAO,CAACO,EAAR,CAAW,YAAX,EAAyBS,SAAzB;EACAhB,OAAO,CACJQ,MADH,GAEGW,KAFH,CAESH,SAFT;SAIO,MACLhB,OAAO,CACJoB,IADH,GAEGD,KAFH,CAESH,SAFT,CADF;CAnBF,CADF;;ACDA,MAAMK,OAAO,GAAGC,cAAS,CAACC,EAAE,CAACC,MAAJ,CAAzB;;AAEA,AAAO,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,EAAZ;AAEP,AAAO,MAAMD,MAAM,GACjB,CAACG,QAAD,EAAWC,KAAK,GAAG,EAAnB,KACEP,OAAO,CAACjB,IAAI,CAACC,OAAL,CAAauB,KAAb,EAAoBD,QAApB,CAAD,EAAgCJ,EAAE,CAACM,SAAH,CAAaC,IAA7C,CAAP,CACGC,IADH,CAEI,MAAM,IAFV,EAGI,MAAM,KAHV,CAFG;AAOP,AAAO,MAAMC,YAAY,GAAGJ,KAAK,IAAIxB,IAAI,CAAC6B,QAAL,CAAcR,GAAd,EAAmBG,KAAnB,CAA9B;AAEP,AAMO,MAAMM,YAAY,GAAG,CAACN,KAAD,EAAQ;EAAEO;CAAV,KACzB,GAAEA,IAAI,GAAI,oBAAmBA,IAAK,EAA5B,GAAgC,EAAG,GAAE/B,IAAI,CAACgC,SAAL,CAAeR,KAAf,EAAsBS,OAAtB,CAA+B,GAAEjC,IAAI,CAACC,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,KAA9B,CAAqC,GAAEF,IAAI,CAACkC,GAAI,EAAjF,EAAoF,OAApF,EAA6FD,OAA7F,CAAqGjC,IAAI,CAACkC,GAA1G,EAA+G,GAA/G,CAAoH,EAD3J;;ACTP;;AAGA,MAAMC,QAAQ,GAAGjB,cAAS,CAACC,EAAE,CAACgB,QAAJ,CAA1B;AACA,MAAMC,SAAS,GAAGlB,cAAS,CAACC,EAAE,CAACiB,SAAJ,CAA3B;AAEA,AAAO,MAAMC,4BAA4B,GACxC,CAACb,KAAa,GAAGhC,SAAjB,EAA4B8C,IAAY,GAAGjB,GAA3C,KACCD,MAAM,CAAC,cAAD,EAAiBI,KAAK,IAAIc,IAA1B,CAAN,CACEX,IADF,CACOP,MAAM,IAAI;MACXA,MAAJ,EAAY,OAAOI,KAAK,IAAIc,IAAhB;QACNC,UAAU,GAAGvC,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmBuB,KAAnB,CAAnB;SACOe,UAAU,KAAKD,IAAf,GACJ9C,SADI,GAEJ6C,4BAA4B,CAACE,UAAD,CAF/B;CAJF,CAFK;;;;;;;AAgBP,AAAO,MAAMC,eAAe,GAC1BxC,IAAD,IACCmC,QAAQ,CAACnC,IAAD,EAAO,MAAP,CAAR,CACE2B,IADF,CAEEc,IAAI,IAAIA,IAFV,EAGE5B,GAAG;AACFA,GAAG,CAAC6B,IAAJ,KAAa,QAAb,IACAN,SAAS,CAACpC,IAAD,EAAO,IAAP,CAAT,CACE2B,IADF,CACO,MAAM,IADb,CALH,EAOEA,IAPF,CAOOc,IAAI,IACTE,IAAI,CAACC,KAAL,CAAWH,IAAX,CARF,EASEd,IATF,CASO,CAAC;EAAEkB,YAAF;EAAgBC;CAAjB,KAAuC,CAC3C,IAAIC,GAAJ,CAAgB,CAAC,GAAGC,uBAAJ,EAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYL,YAAZ,CAAvB,CAAhB,CAD2C,EAE3C,IAAIE,GAAJ,CAAgB,CAAC,GAAGC,uBAAJ,EAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,eAAZ,CAAvB,CAAhB,CAF2C,CAT9C,CAFK;;;;;;;;;;;;;;;;;;;;;;;;;AAwCP,MAAMK,eAAe,GAAG,CAACN,YAAD,EAAyB;EAAE7C,IAAF;EAAQoD,GAAR;EAAaC;CAAtC,KACvB,IAAIC,OAAJ,CAAYrD,OAAO,IAAI;QAChBsD,KAAK,GAAGC,mBAAK,CAClBH,IAAI,GAAG,MAAH,GAAY,KADE,EAElB,CACCA,IAAI,GAAG,KAAH,GAAW,SADhB,EAEC,GAAGR,YAAY,CAACY,GAAb,CAAiBnD,IAAI,IACtBA,IAAI,CACFoD,KADF,CACQ,GADR,EAEEC,KAFF,EADC,CAFJ,EAMC,IAAGP,GAAG,GAAG,CAACC,IAAI,GAAG,IAAH,GAAS,YAAd,CAAH,GAAiC,EAAvC,CAND,CAFkB,EAUlB;IACChC,GAAG,EAAErB,IADN;IAEC4D,KAAK,EAAE,SAFR;;IAGCC,KAAK,EAAEvC,OAAO,CAACwC,QAAR,KAAqB,OAH7B;;GAVkB,CAAnB,CADsB;;;;EAoBtBP,KAAK,CAACpD,EAAN,CAAS,OAAT,EAAkB,MAAMF,OAAO,EAA/B;CApBD,CADD;;AAwBA,MAAM8D,aAAa,GACjBC,KAAD,IACCV,OAAO,CACLW,GADF,CAEED,KAAK,CAACP,GAAN,CAAUnD,IAAI,IACb,wBAAOA,IAAP,EADD,CAFF,CAFF;;AAOA,MAAM4D,iBAAiB,GAAG,MAAOlE,IAAP,IAA2C;QAC9DmE,WAAW,GAAG,MAAM9B,4BAA4B,CAACrC,IAAD,CAAtD;QACMqD,IAAI,GAAG,MAAMjC,MAAM,CAAC,WAAD,EAAc+C,WAAd,CAAzB;QACM,CAAEtB,YAAF,EAAgBC,eAAhB,IAAoC,MAAMN,eAAe,CAAE,GAAExC,IAAK,eAAT,CAA/D,CAHoE;;QAK9D,CAAEoE,UAAF,EAAcC,aAAd,IAAgC,CAAC,IAAItB,GAAJ,EAAD,EAAoB,IAAIA,GAAJ,EAApB,CAAtC;MACIuB,OAA0B,GAAGhB,OAAO,CAACrD,OAAR,CAAgB,EAAhB,CAAjC;;QAEMsE,GAAG,GAAG,OAAOC,OAAP,EAA0BpB,GAA1B,KAA2C;UAChDqB,IAAI,GAAGrB,GAAG,GAAGN,eAAH,GAAqBD,YAArC;UACM6B,KAAK,GAAGtB,GAAG,GAAGiB,aAAH,GAAmBD,UAApC;;SAEK,MAAM9D,IAAX,IAAmBkE,OAAnB,EAA4BE,KAAK,CAACC,GAAN,CAAUrE,IAAV;;UAEtBsE,iBAAiB,GAAG,CAAC,GAAG9B,eAAJ,EAAqB,GAAGD,YAAxB,CAA1B;QACI,CAAC2B,OAAO,CAACK,IAAR,CAAavE,IAAI,IAAI,CAACsE,iBAAiB,CAACE,QAAlB,CAA2BxE,IAA3B,CAAtB,CAAL,EAA8D,OAAOyD,aAAa,CAACS,OAAD,CAApB;;QAE1D;YACGF,OAAN;KADD,SAEU;YACHN,KAAK,GAAGe,KAAK,CAACC,IAAN,CAAWN,KAAX,CAAd;YACMvB,eAAe,CAACa,KAAD,EAAQ;QAAEhE,IAAF;QAAQoD,GAAR;QAAaC;OAArB,CAArB;;WAEK,MAAM/C,IAAX,IAAmB0D,KAAnB,EAA0BS,IAAI,CAACE,GAAL,CAASrE,IAAT;;WACrB,MAAMA,IAAX,IAAmB0D,KAAnB,EAA0BU,KAAK,CAACO,MAAN,CAAa3E,IAAb;;aAEhByD,aAAa,CAACS,OAAD,CAApB;;GAlBL;;SAuBO,CAACA,OAAD,EAAoBpB,GAAY,GAAG,KAAnC,KAA8CkB,OAAO,GAAGC,GAAG,CAACC,OAAD,EAAUpB,GAAV,CAAlE;QAEM,CAAE8B,QAAF,EAAYC,WAAZ,IACL,CAAC,IAAIC,YAAJ,EAAD,EAAgB,IAAIA,YAAJ,EAAhB,EACE3B,GADF,CACM,CAAC4B,OAAD,EAAUjC,GAAV;;;;kCAEJiC,OAFI;QAIDC,gBAAM,CAAEtB,KAAD,IAAqB;cACxBuB,QAAQ,GAAGnC,GAAG,GAAGoC,UAAH,GAAgBC,OAApC;;YACI;iBACIV,KAAK,CAACC,IAAN,CACNO,QAAQ,CACNG,UADF,CACa1B,KADb,CADM,EAGJ2B,IAHI,CAGCC,QAHD,CAAP;SADD,SAKU;eACJ,MAAMtF,IAAX,IAAmB0D,KAAnB,EAA0BuB,QAAQ,CAACZ,GAAT,CAAarE,IAAb;;OARnB,CAJL;SAgBDuF,oBAAU,CAAC,EAAD,CAhBT;SAkBDP,gBAAM,CAACQ,GAAG,IAAIA,GAAG,CAACC,MAAZ,CAlBL;;GADN,CADD;QAsBM,CAAEC,SAAF,EAAaC,YAAb,IACL,CAACf,QAAD,EAAWC,WAAX,EACE1B,GADF,CACM,CAACyC,GAAD,EAAM9C,GAAN;;;;sBAEJ8C,GAFI;QAIDC,kBAAQ,CAAC,MAAOnC,KAAP,IAA2B;cAChCS,IAAI,GAAGrB,GAAG,GAAGN,eAAH,GAAqBD,YAArC;cAEMM,eAAe,CAACa,KAAD,EAAQ;UAAEhE,IAAF;UAAQoD,GAAR;UAAaC;SAArB,CAAf,CAA4C+C,SAA5C,EAAN;;aAEK,MAAM9F,IAAX,IAAmB0D,KAAnB,EAA0BS,IAAI,CAACE,GAAL,CAASrE,IAAT;;eAEnB0E,SAAI,CAAChB,KAAD,CAAX;OAPU,CAJP;SAcDqC,qBAAW,EAdV;;GADN,CADD,CAvDoE;;EA0EpEL,SAAS,CAACM,SAAV,GA1EoE;;EA4EpEL,YAAY,CAACK,SAAb;SAEO,CAAC9B,OAAD,EAAUpB,GAAV,KACN,IAAIE,OAAJ,CAAY,CAACrD,OAAD,EAAUsG,MAAV,KAAqB;QAC5B,OAAO/B,OAAP,KAAmB,QAAvB,EAAiCA,OAAO,GAAG,CAACA,OAAD,CAAV;UAC3BC,IAAI,GAAGrB,GAAG,GAAGN,eAAH,GAAqBD,YAArC;UACM2D,KAAK,GAAGpD,GAAG,GAAG+B,WAAH,GAAiBD,QAAlC;UACMuB,UAAU,GAAGrD,GAAG,GAAG6C,YAAH,GAAkBD,SAAxC;UAEMU,WAAW,GAChB,IAAI3D,GAAJ,CACCyB,OAAO,CAACf,GAAR,CAAYnD,IAAI,IACfA,IAAI,CACFoD,KADF,CACQ,GADR,EAEEC,KAFF,EADD,CADD,EAKI+B,UALJ,CAKejB,IALf,CADD;;QAQIiC,WAAW,CAACC,IAAhB,EAAsB;;;YACfT,GAAG,6CACRO,UADQ;QAGLG,mBAAS,CAACV,GAAG,IAAIA,GAAR,CAHJ;SAKLZ,gBAAM,CAAChF,IAAI,IAAIoG,WAAW,CAACG,GAAZ,CAAgBvG,IAAhB,CAAT,CALD;SAOLwG,cAAI,CAACJ,WAAW,CAACC,IAAZ,GAAmB,CAApB,CAPC;SASLI,cAAI,CAAC,CAAD,CATC,QAAT,CADqB;;MAarBb,GAAG,CAACI,SAAJ,CAAc,MAAMrG,OAAO,CAAC8D,aAAa,CAACS,OAAD,CAAd,CAA3B,EAbqB;;WAgBhB,MAAMlE,IAAX,IAAmBoG,WAAnB,EAAgCF,KAAK,CAACnG,IAAN,CAAWC,IAAX;KAhBjC,MAkBO;MACNL,OAAO,CAAC8D,aAAa,CAACS,OAAD,CAAd,CAAP;;GAjCF,CADD;CA9ED;;AAqHA,MAAMwC,QAAQ,GAAG,IAAItI,GAAJ,EAAjB;;AAEA,MAAMuI,UAAU,GAAG,MAAOjH,IAAP,IAClBgH,QAAQ,CAACH,GAAT,CAAa7G,IAAb,IACGgH,QAAQ,CAACE,GAAT,CAAalH,IAAb,CADH,GAEGgH,QAAQ,CACRG,GADA,CACInH,IADJ,GACU,MAAMkE,iBAAiB,CAAClE,IAAD,CADjC,GAEAkH,GAFA,CAEIlH,IAFJ,CAHJ;;AAOA,qBAAe,OAAOgE,KAAP,EAAiCzE,OAAjC,KACd0H,UAAU,CAAC,CAAA1H,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAES,IAAT,MAAiB,MAAMqC,4BAA4B,EAAnD,CAAD,CAAV,CACEV,IADF,CACOsF,UAAU,IACfA,UAAU,CAAClC,KAAK,CAACqC,OAAN,CAAcpD,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAhC,EAAyCzE,OAAzC,aAAyCA,OAAzC,uBAAyCA,OAAO,CAAE6D,GAAlD,CAFZ,EAGEzB,IAHF,CAGOqF,QAAQ,IACbjC,KAAK,CAACqC,OAAN,CAAcpD,KAAd,IACGgD,QADH,GAEGA,QAAQ,CAAC,CAAD,CANb,CADD;;ACzOA,uBAAmBK,IAAJ,IACb5H,eAAU,CAACC,MAAX,CAAkBC,QAAQ,IAAI;QACtB2H,WAAW,GAAGD,IAAI,CAAC1H,QAAD,CAAxB;SACO;;;mBAAa,MAAM2H,WAAnB,yCAAY,MAAZ;GAAP;CAFF,CADF;;ACCenB,kBAAQ,CAACoB,MAAM,IAC5BC,eAAe,CAAC,MAAM7H,QAAN,IAAkB;QAC1B8H,KAAK,GAAG,MAAMF,MAApB;MACIE,KAAJ,EAAW9H,QAAQ,CAACU,IAAT,CAAcoH,KAAd;CAFE,CADM,CAAvB;;ACCO,MAAMC,SAAS,GAAGjF,IAAI,IAC3BkF,iBAAU,CACRlF,IADQ,EAER,CAACmF,GAAD,EAAMC,GAAN,KACE,OAAOA,GAAP,KAAe,UAAf,GACI;GACCtJ,iCAAD,GAAqCsJ,GAAG,CAACvH;CAF7C,GAIIuH,GAPE,CADL;AAUP,AAAO,MAAMjF,KAAK,GAAGH,IAAI,IACvBqF,aAAM,CACJrF,IADI,EAEJ,CAACsF,CAAD,EAAIF,GAAJ,KACE,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAGtJ,iCAAH,CAAH;IAEI;GACCsJ,GAAG,CAACtJ,iCAAD,CAAJ,GAA0C,MAAM;EAChDsJ,GAAG,CAACtJ,iCAAD,CAFH,CAFJ,GAKIsJ,GARF,CADD;;ACPP,IAAIG,IAAJ;AAEA,cAAe,CAAC;EAAEjG;CAAH,KACbkG,eAAe,CAAC,MAAMtI,QAAN,IAAkB;MAC5B,CAACqI,IAAL,EAAWA,IAAI,GAAG,MAAME,aAAa,CAAC,WAAD,CAA1B;QAELC,WAAW,GAAG,MAAMH,IAAI,CAACI,MAAL,CAAY;IAAEC,QAAQ,EAAE;GAAxB,CAA1B;EAEA1I,QAAQ,CAACU,IAAT,CACE4H,eAAe,CAAC,MAAMtI,QAAN,IAAkB;UAC1B2I,iBAAiB,GAAGtI,IAAI,CAACC,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,KAA9B,EAAqC,YAArC,CAA1B;UACMqI,YAAY,GAAGzG,YAAY,CAACwG,iBAAD,EAAoB;MAAEvG;KAAtB,CAAjC;UAEMyG,OAAO,GAAG,MAAML,WAAW,CAACM,6BAAZ,EAAtB;UACMC,IAAI,GAAG,MAAMF,OAAO,CAACG,OAAR,EAAnB;UAEMC,UAAU,GAAG,IAAIC,kBAAJ,EAAnB;IACAH,IAAI,CAACI,cAAL,CACExK,mBADF,EAEEmJ,KAAK,IAAImB,UAAU,CAACvI,IAAX,CAAgBuC,KAAK,CAAC6E,KAAD,CAArB,CAFX;QAKIsB,aAAJ;UAEMC,WAAW,GAAG,IAAI5D,YAAJ,EAApB;IACA4D,WAAW,CAAC1C,SAAZ,CAAsBmB,KAAK,IACzBiB,IAAI,CAACO,QAAL,CACE,CAAC5D,OAAD,EAAUoC,KAAV,KAAoBpC,OAAO,CAAChF,IAAR,CAAaoH,KAAb,CADtB,EAEEsB,aAFF,EAGErB,SAAS,CAACD,KAAD,CAHX,CADF;IAQA9H,QAAQ,CAACU,IAAT,CAAc;MACZuI,UADY;MAEZI,WAFY;MAGZE,QAAQ,EAAE,MAAOC,QAAP,IAA8B;cAChCT,IAAI,CAACU,IAAL,CAAUb,YAAV,CAAN;cACMG,IAAI,CAACW,YAAL,CAAkB;UAAEC,GAAG,EAAEH,QAAQ,CAACG;SAAlC,CAAN;QACAP,aAAa,GAAG,MAAML,IAAI,CAACa,cAAL,CACnBC,qBAAD,IAA2BC,UAAU,CAACD,qBAAD,CADjB,EAEpBnL,WAFoB,CAAtB;;KANJ;WAaO,MAAMqK,IAAI,CAACgB,KAAL,EAAb;GArCa,CADjB;SA0CO,MAAMvB,WAAW,CAACuB,KAAZ,EAAb;CA/Ca,CADjB;;;;;;;;;;;;;;;;;;;;;;;ACHA,MAAMC,UAAU,GAAG,IAAIjL,GAAJ,CAA2D,CAC5E,CAACW,OAAO,CAACuK,MAAT,EAAiBC,MAAjB,CAD4E,CAA3D,CAAnB;;AAIA,KAAK,MAAM,CAACC,WAAD,EAAcC,OAAd,CAAX,IAAqCJ,UAArC,EAAiD;EAC/CA,UAAU,CAACxC,GAAX,CACE2C,WADF,EAEE,CAAC,GAAGE,IAAJ;;;;iBAEED,OAAO,CAAC,GAAGC,IAAJ,CAFT;QAIKvG,aAAG,CAAEwG,QAAD,IAA+B;QACpCA,QAAQ,CAACH,WAAT,GAAuBA,WAAvB;eACOG,QAAP;OAFI,CAJR;;GAFF;EAWAN,UAAU,CAACzC,GAAX,CAAe4C,WAAf,EAA4BA,WAA5B,GAA0CA,WAA1C;;;AAGF,0BAAgBC,OAAD,IAAsBJ,UAAU,CAACzC,GAAX,CAAe6C,OAAf,CAArC;;ACNA,0BAAgBZ,QAAD,IACbhD,kBAAQ,CAAC,CAAC;EAAE+C,QAAF;EAAYN,UAAZ;EAAwBI;CAAzB,KACPf,eAAe,CAAW,MAAMtI,QAAN,IAAkB;;;QACpCuK,kBAAkB,GAAGC,sBAAW,CAACzJ,GAAZ,EAA3B;QACMwI,QAAQ,CAACC,QAAD,CAAd;QAEMiB,KAAK;0CAETxB,UAFS;IAINtD,gBAAM,CAAC,CAAC;IAAE+E;GAAH,KAAcA,IAAI,KAAK7L,OAAO,CAACI,kBAAhC,CAJA;KAMN0L,eAAK,CAAC,OAAD,CANC;KAQNvD,cAAI,CAAC,CAAD,CARE;KAUNwD,mBAAS,CAAC/K,SAAD,CAVH,OAAX;QAYMgL,IAAI;qDAER5B,UAFQ;IAIL6B,mBAAS,WAACL,KAAD,EAAUtD,cAAI,CAAC,CAAD,CAAd,UAJJ;KAMLxB,gBAAM,CAAC,CAAC;IAAE+E;GAAH,KAAcA,IAAI,KAAK7L,OAAO,CAACc,GAAhC,CAND;KAQLgL,eAAK,CAAC,KAAD,CARA;KAULI,cAAI,CAAC,CAAC5E,GAAD,EAAM6E,GAAN,KAAc,CAAC,GAAG7E,GAAJ,EAAS6E,GAAT,CAAf,EAA+B,EAA/B,CAVC;KAYLJ,mBAAS,CAAC,EAAD,CAZJ,QAAV;QAcMK,MAAM,gCACVR,KADU;IAGPrD,cAAI,CAAC,CAAD,CAHG;KAKP8D,uBAAa,CAACL,IAAD,CALN;KAOP/G,aAAG,CAAC,CAAC,CAAC2G,KAAD,EAAQI,IAAR,CAAD,MAA8B,EACnC,GAAGrB,QADgC;IAEnCiB,KAFmC;IAGnCI,IAHmC;IAInCN,kBAJmC;IAKnCY,gBAAgB,EAAEV,KAAK,IAAID,sBAAW,CAACzJ,GAAZ;GALtB,CAAD,CAPI,QAAZ,CA9B0C;;EA8C1CkK,MAAM,CAACtE,SAAP,CACEyE,gBAAgB,IAAIpL,QAAQ,CAACU,IAAT,CAAc0K,gBAAd,CADtB,EAEElK,GAAG,IAAIlB,QAAQ,CAACmB,KAAT,CAAeD,GAAf,CAFT,EAGE,MAAMlB,QAAQ,CAACqL,QAAT,EAHR;EAMAhC,WAAW,CAAC3I,IAAZ,CAAiB;IAAEgK,IAAI,EAAE7L,OAAO,CAACG;GAAjC;CApDa,CADT,CADV;;ACFA,cACE2I,WAAW;;;;iBAET2D,mBAAS,CAAuC,CAAC,CAACC,KAAD,CAAD,EAAU/B,QAAV,KAAiC;;;YACzE;QAAEgC,MAAM,EAAEC;UAAiBF,KAAjC;YACM;QAAEC;UAAWD,KAAnB,CAF+E;;YAKzEG,cAAc,GAAGD,YAAY,CAAC1F,UAAb,CAAwByF,MAAxB,CAAvB;YACMG,UAAU,GACdD,cAAc,CAAC1E,IAAf,IACGwE,MAAM,CAACxE,IAFZ;YAIM4E,oBAAoB;sCAExBC,OAAE,CAACrC,QAAD,CAFsB;QAIrB7D,MAAM,CAAC,MAAMgG,UAAP,CAJe;SAMrB1E,SAAS,CAAC;;;;sCAEX6E,eAFW;YAIRC,kBAAkB,CAACvC,QAAD,CAJV;aAMRwC,SAAS,CAAC,CAAC;YAAEb;WAAH,KAA0B,CAACA,gBAA5B,EAA8C,IAA9C,CAND;;OAAD,CANY;SAerBc,GAAG,CAAC,CAAC;QAAExB,KAAF;QAASI,IAAT;QAAeN,kBAAf;QAAmCY;OAApC,KAA2D;QAChEI,KAAK,CAACd,KAAN,GAAcA,KAAd;QACAc,KAAK,CAACW,SAAN,GAAkB,KAAlB;QACAX,KAAK,CAACV,IAAN,GAAaA,IAAb;QACAU,KAAK,CAAChB,kBAAN,GAA2BA,kBAA3B;QACAgB,KAAK,CAACJ,gBAAN,GAAyBA,gBAAzB;OALI,CAfkB;SAuBrBgB,KAAK,EAvBgB,OAA1B;YAyBMC,UAAU;iCAEdC,UAAK,0BACHT,oBADG;QAGAjG,MAAM,CAAC,CAAC;QAAEwF;OAAH,KAA0BA,gBAA3B,CAHN;aAKHU,OAAE,CAACS,cAAD,CALC;QAOA3G,MAAM,CAAC,MAAM,CAAC+F,cAAc,CAAC1E,IAAhB,IAAwBwC,QAAQ,CAACgC,MAAT,CAAgBxE,IAA/C,CAPN,QAFS;QAYXC,SAAS,CAAC,CAACuC,QAAD;;;;uBAEXnE,IAAI,CAACmE,QAAQ,CAACiB,KAAV,CAFO;UAIRjE,QAAQ,CAAC,CAAC+F,IAAD;;;;kCAET,CAACb,cAAc,CAAC1E,IAAhB,IACDsF,cAAc,CAAC7B,KAAf,CAAqB+B,IAArB,CAA2BC,KAAD,IACxBF,IAAI,CAACG,WAAL,KAAqBD,KAAK,CAACC,WAA3B,IACA,kBAAkBD,KAFpB,CADA;;UAMAX,eARU;YAUPlH,GAAG,CAAC4E,QAAD,EAAW+C,IAAX,CAVI;aAYPP,SAAS,CAAC,CAAC;YAAEW;WAAH,KAAsB,CAACA,YAAxB,EAAsC,IAAtC,CAZF;SAAD,CAJA;OAAD,CAZE;SAgCXC,WAhCW;SAkCXT,KAAK,EAlCM,QAAhB;YAoCMU,YAAY;gBAEhBR,UAAK,gBACHD,UADG;QAGAzG,MAAM,CAAC,CAAC;QAAEmH;OAAH,KAAuBA,aAAxB,CAHN;aAKHjB,OAAE,CAACS,cAAD,CALC;QAOA3G,MAAM,CAAC,MAAM,CAAC+F,cAAc,CAAC1E,IAAhB,IAAwBwC,QAAQ,CAACgC,MAAT,CAAgBxE,IAA/C,CAPN,QAFW;QAYbC,SAAS,CAAC,CAACuC,QAAD;;;;wBAEXnE,IAAI,CAACmE,QAAQ,CAACiB,KAAV,CAFO;UAIRjE,QAAQ,CAAC,CAACiG,KAAD;;;;mCAET,CAACf,cAAc,CAAC1E,IAAhB,IACDsF,cAAc,CAAC7B,KAAf,CAAqB+B,IAArB,CAA2BD,IAAD,IACxBA,IAAI,CAACG,WAAL,KAAqBD,KAAK,CAACC,WAA3B,IACA,kBAAkBH,IAFpB,CADA;;UAMAT,eARU;YAUPS,IAAI,CAAC/C,QAAD,EAAWiD,KAAX,CAVG;aAYPT,SAAS,CAAC,CAAC;YAAEW;WAAH,KAAsB,CAACA,YAAxB,EAAsC,IAAtC,CAZF;SAAD,CAJA;OAAD,CAZI,UAAlB;YAgCMI,YAAY,GAAGV,UAAK,CACxBT,oBADwB,EAExBQ,UAFwB,EAGxBS,YAHwB,CAA1B;;kCAQEE,YAFF;UAIKjJ,aAAG,CAACmH,MAAM,IAAI,CAACM,KAAD,EAAQN,MAAR,CAAX,CAJR;WAMKH,mBAAS,CAACnD,WAAD,CANd;;KA7GO,EAqHN,CAAC,EAAD,CArHM,CAFA;MAyHN7D,aAAG,CAAC,CAAC,GAAGmH,MAAH,CAAD,KAAgBA,MAAjB,CAzHG;;CADb;;ACRA,cACGrL,OAAD,IACEE,eAAU,CAACC,MAAX,CAAkBC,QAAQ,IAAI;;;QACtB;IAAEgN,KAAF;IAASC,MAAM,GAAGzN,MAAM,CAACC,OAAzB;IAAkCU,UAAlC;IAA8CiC,IAA9C;IAAoD8K,MAAM,GAAG;MAAWtN,OAA9E;QAEM+H,WAAW,GAAG,IAAIlC,YAAJ,EAApB;QAEM7E,YAAY;qBAEfuM,MAAM,CAAC;IACNhN,UAAU,EAAEA,UADN;IAEN8M,MAAM,EAAEA,MAFF;IAGNC,MAAM,EAAG,GAAEA,MAAO,SAAQD,MAAO,EAH3B;IAIND,KAAK,EAAE,IAJD;IAKNzB,KAAK,EAAE,IALD;IAMN6B,QAAQ,EAAG,GAAEF,MAAO,UAASD,MAAO;GAN/B,CAAP;IASGnC,mBAAS,CAACnD,WAAD,CATZ;KAWG0F,iBAAO,EAXV;EAaGC,QAbH,EAFF,CAL4B;;QAuBtB7M,MAAM;6CAEVG,YAFU;IAIP+E,gBAAM,CAAC,CAAC;IAAEhF;GAAH,KAAcA,IAAI,KAAK,YAAxB,CAJC;KAMPsL,aAAG,CAAC,MAAMjM,QAAQ,CAACU,IAAT,CAAc;IAAEgK,IAAI,EAAEnL,cAAc,CAACgO;GAArC,CAAP,CANI;KAQPtG,mBAAS,CAAC,CAAC;IAAE9G,UAAF;IAAca;GAAf;;;;yCAEXJ,YAFW;QAIR+E,gBAAM,CAAC,CAAC;QAAEhF;OAAH,KAAcA,IAAI,KAAK,SAAxB,CAJE;SAMRsL,aAAG,CAAC,MAAMjM,QAAQ,CAACU,IAAT,CAAc;QAAEgK,IAAI,EAAEnL,cAAc,CAACiO;OAArC,CAAP,CANK;SAQR1J,aAAG,CAACrD,MAAM,KAAK,EAAE,GAAGA,MAAL;QAAaN,UAAb;QAAyBa;OAA9B,CAAP,CARK;;GAAD,CARF;KAkBP0F,qBAAW,CAAC,CAAD,CAlBJ,QAAZ,CAvB4B;;QA2CtB+G,YAAY,GAChB7N,OAAO,CAACqN,MAAR,KAAmBzN,MAAM,CAACkO,IAA1B,GACI,CAAChO,OAAO,CAACgO,IAAT,CADJ,GAEI9N,OAAO,CAAC+N,QAAR,IAA4C,CAACjO,OAAO,CAACuK,MAAT,CAHlD;QAKM6B,eAAe;mBAEnBzG,SAAI,CACFoI,YAAY,CACT3J,GADH,CACOqG,WAAW,IAAIyD,kBAAkB,CAACzD,WAAD,CADxC,EAEGrG,GAFH,CAEO+J,mBAAmB,IAAIA,mBAAmB,CAACjO,OAAD,CAFjD,CADE,CAFe;IAOhB4G,kBAAQ,CAACsF,eAAe,IAAIA,eAApB,CAPQ;;KAShBhB,mBAAS,CAACnD,WAAD,CATO,QAArB;QAWM8C,KAAK,GAAG8B,MAAI,CAAC;IACjB9L,MADiB;IAEjBqL;GAFgB,CAAlB,CA3D4B;;EAiE5BrB,KAAK,CAAC9D,SAAN,CACEmB,KAAK,IAAI9H,QAAQ,CAACU,IAAT,CAAcoH,KAAd,CADX,EAEE3G,KAAK,IAAInB,QAAQ,CAACmB,KAAT,CAAeA,KAAf,CAFX,EAGE,MAAMnB,QAAQ,CAACqL,QAAT,EAHR;SAMO,MAAM;IACX1D,WAAW,CAACjH,IAAZ;IACAiH,WAAW,CAAC0D,QAAZ;GAFF;CAvEF,CAFJ;;ACSA,MAAMyC,WAAW,GAAG,UAApB;AACA,MAAMC,UAAU,GAAG,UAAnB;AACA,MAAMC,MAAM,GAAG,MAAf;;AAEA,MAAMC,QAAQ,GAAIvI,OAAD,IAAa;QACtB,CAACvE,KAAD,EAAQ+M,QAAR,IAAoBC,cAAQ,EAAlC;EACAC,eAAS,CAAC,MAAM;UACRC,YAAY,GAChB3I,OAAO,CAACiB,SAAR,CACE,MAAM,EADR,EAEExF,KAAK,IAAI+M,QAAQ,CAAC/M,KAAD,CAFnB,CADF;WAIO,MAAMkN,YAAY,CAAC1G,WAAb,EAAb;GALO,EAMN,EANM,CAAT;SAQO,CACLxG,KADK,EAELA,KAAK,GACDmN,6BAACC,SAAD;IAAO,GAAG;KACVD,6BAACE,OAAD;IAAK,aAAa,EAAC;KACjBF,6BAACE,OAAD,qHADF,CADA,CADC,GAMD,EARC,CAAP;CAVF;;AAsBA,MAAMC,aAAa,GAAI/I,OAAD,IAAa;QAC3B,CAAC;IAAEgJ;GAAH,EAAgBC,aAAhB,IAAiCR,cAAQ,CAAQ;IACrDO,SAAS,EAAE,IAAI3P,GAAJ;GADkC,CAA/C;EAIAqP,eAAS,CAAC,MAAM;UACRC,YAAY,GAAG3I,OAAO,CAACiB,SAAR,CAAkBiI,MAAM,IAAID,aAAa,CAACC,MAAD,CAAzC,CAArB;WACO,MAAMP,YAAY,CAAC1G,WAAb,EAAb;GAFO,EAGN,EAHM,CAAT;SAKOvC,KAAK,CAACC,IAAN,CAAWqJ,SAAS,CAACG,MAAV,EAAX,CAAP;CAVF;;AAaA,MAAMC,kBAAkB,GAAG,CAACC,aAAD,EAAgB1K,KAAhB,EAAiC2K,OAAjC,KACzB5J,KAAK,CAACC,IAAN,CAAWhB,KAAX,EACG4K,MADH,CACUD,OADV,EAEGE,MAFH,CAEU,CAAC,CAACC,IAAD,EAAOC,GAAP,EAAYC,KAAK,GAAG,KAApB,CAAD,EAA6B1O,IAA7B,EAAmC2O,CAAnC,KACND,KAAK,GACD,CAACF,IAAD,EAAOC,GAAP,EAAY,IAAZ,CADC,GAEDG,YAAY,CAAE,GAAEJ,IAAI,CAACK,IAAL,CAAU,GAAV,CAAe,IAAG7O,IAAK,EAA3B,CAAZ,GAA4CoO,aAA5C,GACE,CAACI,IAAD,EAAOC,GAAP,EAAY,IAAZ,CADF,GAEE,CAAC,CAAC,GAAGD,IAAJ,EAAU,CAACxO,IAAD,EAAO2O,CAAC,GAAGN,OAAX,CAAV,CAAD,EAAiCM,CAAC,GAAGN,OAArC,EAA8C,KAA9C,CAPV,EAQI,CAAC,EAAD,EAAK,CAAL,EAAQ,KAAR,CARJ,CADF;;AAWA,MAAMS,OAAO,GAAG,CAAC;EAAEC,KAAF;EAASC;CAAV,EAAwBC,mBAAxB,KAAyH;;;;;QAKjI,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,cAAQ,CAAS,CAAT,CAAlC;QACM,CAAC,CAAC4B,QAAD,EAAWC,MAAX,CAAD,EAAqBC,QAArB,IAAiC9B,cAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAA/C;QAEM+B,iBAAiB,GACrBN,mBAAmB,CAChB9L,GADH,CACO,CAAC;IAACnD,IAAD;IAAOwP;GAAR,KAAyB,CAAC9P,IAAI,CAAC+P,OAAL,CAAazP,IAAb,CAAD,EAAqBwP,WAArB,CADhC,EAEGjB,MAFH,CAEU,CAACpL,GAAD,EAAM,CAACuM,MAAD,EAASC,IAAT,CAAN,KACN,CAACxM,GAAG,CAACyD,GAAJ,CAAQ8I,MAAR,KACDvM,GAAG,CAAC0D,GAAJ,CAAQ6I,MAAR,EAAgB,EAAhB,EAAoB9I,GAApB,CAAwB8I,MAAxB,CADA,EACiCE,IADjC,CACsCD,IADtC,KAEAxM,GALJ,EAMI,IAAI/E,GAAJ,EANJ,CADF;QASMgQ,aAAa,GAAGpN,OAAO,CAAC6O,MAAR,CAAeC,OAArC;QACMC,cAAc,GAAG/O,OAAO,CAAC6O,MAAR,CAAeG,IAAtC;QAEMC,WAAW,GAAGxL,KAAK,CAACC,IAAN,CAAW6K,iBAAiB,CAAC3M,IAAlB,EAAX,CAApB;QACMsN,SAAS,GAAGzL,KAAK,CAACC,IAAN,CAAW6K,iBAAiB,CAACrB,MAAlB,EAAX,EAAuC7I,IAAvC,EAAlB;QAEM3B,KAAK,GAAGwL,KAAK,GAAGe,WAAH,GAAiBC,SAApC;QAEM,GAAGC,mBAAH,IAA0BhC,kBAAkB,CAACC,aAAD,EAAgB1K,KAAhB,EAAuB2L,MAAvB,CAAlD;QAEMe,YAAY,GAAGD,mBAAmB,KAAKzM,KAAK,CAAC+B,MAAnD;QAEM,CAAC4K,WAAD,EAAcC,kBAAd,IAAoCnC,kBAAkB,CAACC,aAAa,GAAGQ,YAAY,CAAE,MAAF,CAA7B,EAAuClL,KAAvC,EAA8C2L,MAA9C,CAA5D;;QAEMkB,cAAc,GAAGpO,IAAI,IAAI;UACvBqO,CAAC,GAAGC,MAAM,CAACtO,IAAD,CAAhB;;QACIqO,CAAC,KAAKnD,MAAV,EAAkB;MAChB2B,UAAU,CAAC,KAAD,CAAV;MACAhO,OAAO,CAAC0P,IAAR;;;QAEEF,CAAC,KAAKrD,WAAV,EAAuB;MACrBmC,QAAQ,CAAC,CAAC,CAACF,QAAD,EAAWC,MAAX,CAAD,KAAwB,CAC/BD,QAAQ,IAAIA,QAAQ,GAAG1L,KAAK,CAAC+B,MAAN,GAAe,CAA1B,GAA8B,CAA9B,GAAkC,CAAtC,CADuB,EAE/B4J,MAAM,IAAID,QAAQ,GAAG1L,KAAK,CAAC+B,MAAN,GAAe,CAA1B,IAA+B2J,QAAQ,KAAKC,MAAM,GAAGiB,kBAArD,GAA0E,CAA1E,GAA8E,CAAlF,CAFyB,CAAzB,CAAR;;;QAKEE,CAAC,KAAKpD,UAAV,EAAsB;MACpBkC,QAAQ,CAAC,CAAC,CAACF,QAAD,EAAWC,MAAX,CAAD,KAAwB,CAC/BD,QAAQ,IAAIA,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmB,CAAvB,CADuB,EAE/BC,MAAM,IAAIA,MAAM,GAAG,CAAT,IAAcD,QAAQ,KAAKC,MAA3B,GAAoC,CAApC,GAAwC,CAA5C,CAFyB,CAAzB,CAAR;;GAbJ;;EAoBA5B,eAAS,CAAC,MAAM;IACduB,UAAU,CAAC,IAAD,CAAV;IACAD,KAAK,CAAClP,EAAN,CAAS,MAAT,EAAiB0Q,cAAjB;WACO,MAAM;MACXxB,KAAK,CAAC4B,cAAN,CAAqB,MAArB,EAA6BJ,cAA7B;KADF;GAHO,CAAT,CAnDuI;;EA4DvI9C,eAAS,CAAC,MAAM,MAAMuB,UAAU,CAAC,KAAD,CAAvB,EAAgC,EAAhC,CAAT;SACO,CACLC,mBAAmB,CAACG,QAAD,CADd,EAELzB,6BAACE,OAAD;IAAK,KAAK,EAAEO,aAAZ;IAA2B,UAAU,EAAC,QAAtC;IAA+C,cAAc,EAAC;KAC1DT,6BAACE,OAAD,QAEIuC,YAAY,IACZC,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,MAAsB,CADtB,GAEI,IAFJ,GAGI,EALR,CADJ,EAUMA,WAAW,CACRlN,GADH,CACO,CAAC,CAACnD,IAAD,EAAO2O,CAAP,CAAD,KAAe;UACZZ,SAAS,GACbtJ,KAAK,CAACC,IAAN,CACEuK,mBAAmB,CAChBpD,IADH,CACQ,CAAC;MAAC2D;KAAF,KAAmBA,WAAW,KAAKxP,IAD3C,EAEG+N,SAFH,CAEaG,MAFb,EADF,CADF;UAMM0C,SAAS,GACb7C,SAAS,CAACxJ,IAAV,CAAe,CAAC;MAACuF;KAAF,KACbA,KADa,aACbA,KADa,uBACbA,KAAK,CAAEvF,IAAP,CAAY,CAAC;MAAC2F;KAAF,KACVA,IADU,aACVA,IADU,uBACVA,IAAI,CAAE3F,IAAN,CAAW,CAAC;MAACwF;KAAF,KAAYA,IAAI,KAAK/K,GAAG,CAACwB,KAApC,CADF,CADF,CADF;WAMEmN,6BAACE,OAAD;MAAK,GAAG,EAAE7N;OACR2N,6BAAC,SAAD;MAAW,MAAM,EAAG,GAAEiD,SAAS,GAAG,KAAH,GAAW,aAAc,GAAEjC,CAAC,KAAKS,QAAN,GAAiB,iBAAjB,GAAqC,EAAG;OAC/F9N,YAAY,CAACtB,IAAD,CADf,CADF,CADF;GAbJ,EAqBG6Q,OArBH,GAsBGtC,MAtBH,CAsBU,CAAC/I,GAAD,EAAM2B,KAAN,EAAawH,CAAb,KACNA,CAAC,GACG,CAAC,GAAGnJ,GAAJ,EAAS,CAAC2B,KAAD,EAAQwG,6BAACmD,QAAD;IAAM,GAAG,EAAEnC;SAAnB,CAAT,CADH,GAEG,CAAC,GAAGnJ,GAAJ,EAAS,CAAC2B,KAAD,CAAT,CAzBR,EA0BM,EA1BN,EA2BG0J,OA3BH,GA4BGxL,IA5BH,CA4BQC,QA5BR,CAVN,EAwCIqI,6BAACE,OAAD,QAEIuC,YAAY,IACZC,WAAW,CAACA,WAAW,CAAC5K,MAAZ,GAAqB,CAAtB,CAAX,CAAoC,CAApC,MAA2C/B,KAAK,CAAC+B,MAAN,GAAe,CAD1D,GAEI,IAFJ,GAGI,EALR,CAxCJ,CAFK,CAAP;CA7DF;;AAmHA,MAAMsL,WAAW,GAAIC,kBAAD,IAAoD;;;;;;QAIhEC,KAAK,GACT,CAAAD,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAElH,KAApB,KACA,cADA,GAEIkH,kBAAkB,CAAClH,KAAnB,CAAyBvF,IAAzB,CAA8B,CAAC;IAAC2F;GAAF,KAAYA,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAE3F,IAAN,CAAW,CAAC;IAACwF;GAAF,KAAYA,IAAI,KAAK/K,GAAG,CAACwB,KAApC,CAA1C,IACE,KADF,GAEE,aAJN,GAKI,EANN;SAQOwQ,kBAAkB,GACrBrD,6BAACE,OAAD;IAAK,aAAa,EAAC;KACnBF,6BAACE,OAAD,QACEF,6BAAC,SAAD;IAAW,MAAM,EAAEsD;KAChBD,kBAAkB,CAACxB,WADtB,CADF,CADA,EAMA7B,6BAACE,OAAD;IAAM,aAAa,EAAC,QAApB;IAA6B,WAAW,EAAE;8BAEtCmD,kBAAkB,CAAClH,KAFvB,0DAEI,sBAA0B3G,GAA1B,CAA8B,CAAC;IAAE4I,WAAF;IAAe7B;GAAhB,KAC5ByD,6BAACE,OAAD;IAAK,GAAG,EAAE9B;KACR4B,6BAAC,SAAD;IACE,MAAM,EACJzD,IAAI,GACAA,IAAI,CAAC3F,IAAL,CAAU,CAAC;MAACwF;KAAF,KAAYA,IAAI,KAAK/K,GAAG,CAACwB,KAAnC,IACE,KADF,GAEE,aAHF,GAIA;KAELuL,WARH,CADF,CADF,CAFJ,CANA,CADqB,GA0BrB,EA1BJ;CAZF;;AAyCA,gBAAe,CAAC;EAAEgD,KAAF;EAASC,UAAT;EAAqBjK;CAAtB,KAAoC;QAC3C,CAAEvE,KAAF,EAAS0Q,YAAT,IAA0B5D,QAAQ,CAACvI,OAAD,CAAxC;QACMkK,mBAAmB,GAAGnB,aAAa,CAAC/I,OAAD,CAAzC;QACM,CAAEqK,QAAF,EAAY+B,WAAZ,IAA4BrC,OAAO,CAAC;IAAEC,KAAF;IAASC;GAAV,EAAwBC,mBAAxB,CAAzC;QACMmC,eAAe,GAAGL,WAAW,CAAC3B,QAAD,CAAnC;SACOzB,6BAACE,OAAD;IAAK,aAAa,EAAC;KACtBuD,eADG,EAEHD,WAFG,EAGHD,YAHG,CAAP;CALF;;;;;;;;;;AC5NA,mBAAenM,OAAO,IACpBsM,UAAM,CACJ1D,6BAAC2D,gBAAD,CAAc,QAAd,QACG,CAAC;EAAEvC,KAAF;EAASC;CAAV,KACCrB,6BAAC,QAAD;EAAU,KAAK,EAAEoB,KAAjB;EAAwB,UAAU,EAAEC,UAApC;EAAgD,OAAO,EAAEjK;EAF7D,CADI,CADR;;ACAA,IAAIwM,OAAJ;AAEA,cAAetS,OAAO,IACpB0I,eAAe,CAAC,MAAMtI,QAAN,IAAkB;QAC1B;IAAEoC;MAASxC,OAAjB;MACI,CAACsS,OAAL,EAAcA,OAAO,GAAG,MAAM3J,aAAa,CAAC,CAAC,KAAD,EAAQ,YAAR,EAAsB,WAAtB,CAAD,CAA7B;QAER,CAAE4J,GAAF,EAAOC,KAAP,EAAcC,KAAd,IAAwBH,OAA9B;QAEMI,GAAG,GAAG,IAAIH,GAAJ,EAAZ;QAEMI,GAAG,GAAG,IAAIJ,GAAJ,EAAZ;EACAI,GAAG,CAACC,GAAJ,CAAQJ,KAAK,CAAC/R,IAAI,CAACC,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,KAA9B,CAAD,CAAb;QAEMkK,KAAK,GAAG,IAAI0H,GAAJ,EAAd;EACA1H,KAAK,CAAC+H,GAAN,CAAUJ,KAAK,CAAC/R,IAAI,CAACC,OAAL,CAAaoB,GAAb,EAAkB,MAAlB,EAA0B,MAA1B,CAAD,CAAf;EAEA4Q,GAAG,CAACE,GAAJ,CAAQH,KAAK,CAAC,MAAD,EAASE,GAAT,CAAb;EACAD,GAAG,CAACE,GAAJ,CAAQH,KAAK,CAAC,QAAD,EAAW5H,KAAX,CAAb;QAEM6H,GAAG,CAACG,MAAJ,CAAWrQ,IAAX,CAAN;EAEApC,QAAQ,CAACU,IAAT,CAAc4R,GAAd;SAEO,MAAMA,GAAG,CAACvI,KAAJ,EAAb;CArBa,CADjB;;ACSApI,OAAO,CAACnB,EAAR,CAAW,oBAAX,EAAiCW,KAAK,IAAI;EACxCuR,OAAO,CAACvR,KAAR,CAAcA,KAAd;EACAQ,OAAO,CAAC0P,IAAR,CAAa,CAAb;CAFF;AAKAsB,OAAO,CAACC,OAAR,CAAgBC,GAAG,CAACD,OAApB;AAEA,MAAME,aAAa,GAAG;gBACN,8BADM;wBAEE,sDAFF;sBAGA,oBAHA;sBAIA,qBAJA;wBAKE,iDALF;yBAMG,CACrB,0EADqB,EAErB,kCAFqB,CANH;kBAUJ,CACd,iDADc,EAEd,kBAFc,CAVI;mBAcH;CAdnB;AAiBAH,OAAO,CACJI,OADH,CACW,gBADX,EAEGrG,WAFH,CAEe,wCAFf,EAGGsG,MAHH,CAGUD,OAAO,IACb,CACEJ,OAAO,CACJM,QADH,CAEGzG,IAFH,CAEQ0G,CAAC,IACLA,CAAC,CAACvS,IAAF,OAAaoS,OAHjB,KAIAJ,OALF,EAMGQ,IANH,EAJJ;AAYAR,OAAO,CAACnS,EAAR,CAAW,QAAX,EAAqB,YAAW;EAC9BkS,OAAO,CAAC1H,GAAR,CAAY,EAAZ;EACA0H,OAAO,CAAC1H,GAAR,CAAa,WAAUoI,KAAK,CAACC,IAAN,CAAW,oBAAX,CAAiC,8CAAxD;EACAX,OAAO,CAAC1H,GAAR,CAAY,EAAZ;CAHF;;AAMA,MAAMpG,KAAG,GAAG,OAAO0O,OAAP,EAA+BP,OAA/B,KAAgD;;;EAC1DO,OAAO,GAAGA,OAAO,CAACxP,GAAR,CAAYyP,KAAK,IAAIlT,IAAI,CAACC,OAAL,CAAaiT,KAAb,CAArB,CAAV;MAEID,OAAO,CAAClN,MAAR,KAAmB,CAAvB,EAA0B,OAAOsM,OAAO,CAAC1H,GAAR,CAAY,kBAAZ,CAAP;QAEpBtF,OAAO,GAAG,IAAID,YAAJ,EAAhB;EAEA+N,WAAW;aAET9N,OAFS;IAINC,gBAAM,CAAC,CAAC;IAAE+E;GAAH,KAAcA,IAAI,KAAKnL,cAAc,CAACkU,KAAvC,CAJA,YAAX;QAOM,IAAI9P,OAAJ,CAAYrD,OAAO,IAAIoT,UAAU,CAACpT,OAAD,EAAU,CAAV,CAAjC,CAAN;EACAoF,OAAO,CAAChF,IAAR,CAAa;IAAEgK,IAAI,EAAEnL,cAAc,CAACoU;GAApC;QACMvR,IAAI,GAAG,MAAMwR,OAAO,CAAC;IAAExR,IAAI,EAAE2Q,OAAO,CAAC3Q,IAAR,IAAgB;GAAzB,CAA1B;EACAsD,OAAO,CAAChF,IAAR,CAAa;IAAEgK,IAAI,EAAEnL,cAAc,CAACsU,UAAvB;IAAmCzR;GAAhD,EAjB0D;;QAoBpD0R,gBAAgB,cAAGC,MAAM,CAAC;IAAE3R;GAAH,CAAT,EAAuBsE,qBAAW,CAAC,CAAD,CAAlC,UAAtB;EACAhB,OAAO,CAAChF,IAAR,CAAa;IAAEgK,IAAI,EAAEnL,cAAc,CAACyU;GAApC;EACAF,gBAAgB,CAACnN,SAAjB,GAtB0D;;QAyBpD,qBAACmN,gBAAD,EAAqB1M,cAAI,CAAC,CAAD,CAAzB,qBAA8BX,SAA9B,EAAN;EACAf,OAAO,CAAChF,IAAR,CAAa;IAAEgK,IAAI,EAAEnL,cAAc,CAAC0U,gBAAvB;IAAyC7R;GAAtD;QAEM8R,gBAAgB;EAEpBC,MAAM,CAAE;IACNhU,UAAU,EAAEmT,OADN;IAENtG,KAAK,EAAE+F,OAAO,CAAC/F,KAFT;IAGNC,MAAM,EAAE8F,OAAO,CAAC9F,MAHV;IAIN7K;GAJI,CAFR,CA5B0D;;EAsC1D8R,gBAAgB,CAACvN,SAAjB,CACEiI,MAAM,IAAIlJ,OAAO,CAAChF,IAAR,CAAakO,MAAb,CADZ,EAEEzN,KAAK,IAAI;IACPuE,OAAO,CAACvE,KAAR,CAAcA,KAAd;IACAuS,UAAU,CAAC,MAAM/R,OAAO,CAAC0P,IAAR,CAAa,CAAb,CAAP,EAAwB,CAAxB,CAAV;UACMlQ,KAAN;GALJ,EAOE,MAAMuE,OAAO,CAAC2F,QAAR,EAPR;CAtCF;;AAgDA,MAAM2B,KAAK,GAAG2F,OAAO,CAClBI,OADW,CACH,kBADG,EAEXrG,WAFW,CAEC,iCAFD,EAGXsG,MAHW,CAGJpO,KAHI,CAAd;AAKAwP,YAAY,CAACpH,KAAD,EAAQ8F,aAAR,CAAZ;AAEA,MAAMvG,MAAI,GAAGoG,OAAO,CACjBI,OADU,CACF,iBADE,EAEVrG,WAFU,CAEE,WAFF,EAGVsG,MAHU,CAGHpO,KAHG,CAAb;AAKAwP,YAAY,CAAC7H,MAAD,EAAOuG,aAAP,CAAZ;;AAEA,SAASsB,YAAT,CAAsBC,GAAtB,EAA2BzU,OAA3B,EAAoC;OAC7B,IAAI0U,GAAT,IAAgB1U,OAAhB,EAAyB;IACvByU,GAAG,CAACE,MAAJ,CACED,GADF,EAEE,IAAIlP,KAAK,CAACqC,OAAN,CAAc7H,OAAO,CAAC0U,GAAD,CAArB,IAA8B1U,OAAO,CAAC0U,GAAD,CAArC,GAA6C,CAAC1U,OAAO,CAAC0U,GAAD,CAAR,CAAjD,CAFF;;;;;AAQJ,IAAIjK,IAAI,GAAG1I,OAAO,CAAC6S,IAAnB;AACA,IAAInK,IAAI,CAAC,CAAD,CAAJ,KAAY,QAAZ,IAAwBA,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAxC,EAA8CA,IAAI,CAAC,CAAD,CAAJ,GAAU,MAAV;;AAC9C,IAAI,CAACA,IAAI,CAAC,CAAD,CAAL,IAAY,CAACsI,OAAO,CAACM,QAAR,CAAiB/N,IAAjB,CAAsBgO,CAAC,IAAIA,CAAC,CAACvS,IAAF,OAAa0J,IAAI,CAAC,CAAD,CAA5C,CAAjB,EAAmE;EACjEA,IAAI,CAAC4E,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,OAAlB;;;AAEF0D,OAAO,CAAC1P,KAAR,CAAcoH,IAAd"}