{"version":3,"sources":["runner/cli.ts","runner/utils.ts","runner/bundler.ts","runner/logger.ts","runner/server.ts","utils.ts","runner/analyze.ts","runner/test.ts","runner/index.ts","test/test.ts","test/assert.ts","test/index.ts","index.ts"],"names":["_","Promise","resolve","reject","program","command","description","action","cmd","commands","find","c","name","help","on","console","log","chalk","bold","args","process","argv","some","splice","parse","prettifyTime","time","toFixed","entryFiles","Observable","create","observer","bundler","Bundler","outDir","watch","cache","cacheDir","minify","scopeHoist","hmr","target","logLevel","sourceMaps","detailedReport","addAssetType","Path","__dirname","bundle","next","entryPoints","error","stop","prettyError","err","opts","message","fileName","loc","line","column","stack","codeFrame","color","highlightedCodeFrame","slice","indexOf","supportsEmoji","platform","env","TERM","emoji","progress","success","warning","Logger","constructor","options","lines","spinner","setOptions","isNaN","Number","supportsColor","enabled","isTest","NODE_ENV","countLines","split","reduce","p","stdout","columns","Math","ceil","length","writeRaw","stopSpinner","write","persistent","verbose","_log","currDate","Date","toLocaleTimeString","logFile","fs","createWriteStream","path","join","cwd","toISOString","warn","_writeError","yellow","red","green","formatError","clear","readline","clearLine","moveCursor","cursorTo","styledMessage","gray","text","stream","undefined","start","handleMessage","method","table","colWidths","row","i","item","max","stringWidth","items","map","padding","align","pad","repeat","string","countBreaks","port","app","Koa","epk","use","tests","then","listen","isBrowser","window","GET_TESTS","RUN_TESTS","RUN_TEST","browser","page","evaluate","urls","isEmpty","Array","from","childBundles","replace","result","coverage","startJSCoverage","testsResult","testsCoverage","stopJSCoverage","init","node","pageReload","buildTimeStart","buildTimeEnd","analyzeTimeStart","analyzeTimeEnd","testTimeStart","testTimeEnd","globs","puppeteer","launch","devtools","pages","msg","logger","goto","fg","async","entryFilesDisplayNames","win32","basename","building","subscribe","reload","now","grey","analyzed","Object","entries","obj","test","url","push","val","connect","Map","todo","pass","fail","desc","func","Error","has","set","initiated","setTimeout","addEventListener","data","parent","postMessage","toString","get","assert","PowerAssert","customize"],"mappings":"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","file":"index.map","sourceRoot":"..\\src","sourcesContent":["import program from 'commander'\r\nimport chalk from 'chalk'\r\n\r\nexport default _ =>\r\n  new Promise((resolve, reject) => {\r\n    program\r\n      .command('serve [input...]')\r\n      .description('starts a development server')\r\n      .action(resolve)\r\n\r\n    program\r\n      .command('help [command]')\r\n      .description('display help information for a command')\r\n      .action(function(command) {\r\n        let cmd = program.commands.find(c => c.name() === command) || program\r\n        cmd.help()\r\n      })\r\n\r\n    program.on('--help', function() {\r\n      console.log('')\r\n      console.log(\r\n        '  Run `' +\r\n          chalk.bold('epk help <command>') +\r\n          '` for more information on specific commands'\r\n      )\r\n      console.log('')\r\n    })\r\n\r\n    // Make serve the default command except for --help\r\n    const args = process.argv\r\n    if (args[2] === '--help' || args[2] === '-h') args[2] = 'help'\r\n    if (!args[2] || !program.commands.some(c => c.name() === args[2])) {\r\n      args.splice(2, 0, 'serve')\r\n    }\r\n\r\n    program.parse(args)\r\n  })","// import draftlog from 'draftlog'\r\n// import { Observable, timer, of } from 'rxjs'\r\n// import { takeUntil, switchMap, take, publish } from 'rxjs/operators'\r\n\r\nexport const prettifyTime = time =>\r\n  time < 1000\r\n    ? `${time.toFixed()}ms`\r\n    : `${(time / 1000).toFixed(2)}s`\r\n\r\n\r\n// draftlog.into(console)\r\n\r\n// export const frames = ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏']\r\n// export const getFrame =\r\n//   i =>\r\n//     frames[i % frames.length]\r\n// export const check = '✔'\r\n// export const x = '✖'\r\n\r\n\r\n// export const log = (textFunction, operator) =>\r\n//   switchMap(value =>\r\n//     Observable.create(observer => {\r\n//       let completed\r\n//       const updateLine = console.draft()\r\n//       const t1 = Date.now()\r\n//       const observable =\r\n//         of(value)\r\n//           .pipe(\r\n//             operator,\r\n//             publish()\r\n//           )\r\n//       const obs = observable.refCount()\r\n//       const sub = obs.subscribe(val => {\r\n//         completed = true\r\n//         updateLine(\r\n//           textFunction({\r\n//             time: prettifyTime(Date.now() - t1),\r\n//             done: true,\r\n//             value\r\n//           })\r\n//         )\r\n//         observer.next(val)\r\n//       })\r\n//       const spinnerSub =\r\n//         timer(0, 100)\r\n//           .pipe(\r\n//             takeUntil(obs),\r\n//           )\r\n//           .subscribe(i =>\r\n//             updateLine(\r\n//               textFunction({\r\n//                 icon: frames[i % frames.length],\r\n//                 running: true,\r\n//                 value,\r\n//                 i\r\n//               })\r\n//             ))\r\n//       observable.connect()\r\n//       return _ => {\r\n//         if (completed) return\r\n//         sub.unsubscribe()\r\n//         spinnerSub.unsubscribe()\r\n//         updateLine(\r\n//           textFunction({\r\n//             cancelled: true,\r\n//             value\r\n//           })\r\n//         )\r\n//       }\r\n//     }))","import Path from 'path'\r\nimport Bundler from 'parcel-bundler'\r\nimport { Observable } from 'rxjs'\r\n\r\nexport default entryFiles =>\r\n  Observable.create(observer => {\r\n    const bundler = new Bundler(entryFiles, {\r\n      outDir: '.epk/dist',\r\n      watch: true,\r\n      cache: true,\r\n      cacheDir: '.epk/cache',\r\n      minify: false,\r\n      scopeHoist: false,\r\n      hmr: false,\r\n      target: 'browser',\r\n      logLevel: 0, // 3 = log everything, 2 = log warnings & errors, 1 = log errors\r\n      sourceMaps: true, // Enable or disable sourcemaps, defaults to enabled (minified builds currently always create sourcemaps)\r\n      detailedReport: false\r\n    })\r\n    bundler.addAssetType('js', Path.resolve(__dirname, '../src/runner/js-asset.ts'))\r\n    bundler.addAssetType('ts', Path.resolve(__dirname, '../src/runner/ts-asset.ts'))\r\n    bundler.on('bundled', bundle =>\r\n      observer.next({ name: 'bundled', bundle }))\r\n    bundler.on('buildStart', entryPoints =>\r\n      observer.next({ name: 'buildStart', entryPoints }))\r\n    bundler.on('buildEnd', _ =>\r\n      observer.next({ name: 'buildEnd' }))\r\n    bundler.on('buildError', error =>\r\n      observer.next({ name:'error', error }))\r\n    bundler.bundle()\r\n    return _ => bundler.stop()\r\n  })\r\n","// https://github.com/parcel-bundler/parcel/tree/master/packages/core/logger/src\r\n\r\nimport chalk from 'chalk'\r\nimport readline from 'readline'\r\nimport { coundBreaks } from 'grapheme-breaker'\r\nimport stripAnsi from 'strip-ansi'\r\nimport ora from 'ora'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\nconst prettyError = (err, opts = {}) => {\r\n  let message = typeof err === 'string' ? err : err.message\r\n  if (!message) message = 'Unknown error'\r\n\r\n  if (err.fileName) {\r\n    let fileName = err.fileName\r\n    if (err.loc) {\r\n      fileName += `:${err.loc.line}:${err.loc.column}`\r\n    }\r\n\r\n    message = `${fileName}: ${message}`\r\n  }\r\n\r\n  let stack;\r\n  if (err.codeFrame) {\r\n    stack = (opts.color && err.highlightedCodeFrame) || err.codeFrame\r\n  } else if (err.stack) {\r\n    stack = err.stack.slice(err.stack.indexOf('\\n') + 1)\r\n  }\r\n\r\n  return {\r\n    message, stack\r\n  }\r\n}\r\n\r\nconst supportsEmoji =\r\n  process.platform !== 'win32' || process.env.TERM === 'xterm-256color'\r\n\r\n// Fallback symbols for Windows from https://en.wikipedia.org/wiki/Code_page_437\r\nconst emoji = {\r\n  progress: supportsEmoji ? '⏳' : '∞',\r\n  success: supportsEmoji ? '✨' : '√',\r\n  error: supportsEmoji ? '🚨' : '×',\r\n  warning: supportsEmoji ? '⚠️' : '‼'\r\n}\r\n\r\nclass Logger {\r\n  constructor(options) {\r\n    this.lines = 0;\r\n    this.spinner = null;\r\n    this.setOptions(options);\r\n  }\r\n\r\n  setOptions(options) {\r\n    this.logLevel =\r\n      options && isNaN(options.logLevel) === false\r\n        ? Number(options.logLevel)\r\n        : 3;\r\n    this.color =\r\n      options && typeof options.color === 'boolean'\r\n        ? options.color\r\n        : chalk.supportsColor;\r\n    this.emoji = (options && options.emoji) || emoji;\r\n    this.chalk = new chalk.constructor({enabled: this.color});\r\n    this.isTest =\r\n      options && typeof options.isTest === 'boolean'\r\n        ? options.isTest\r\n        : process.env.NODE_ENV === 'test';\r\n  }\r\n\r\n  countLines(message) {\r\n    return stripAnsi(message)\r\n      .split('\\n')\r\n      .reduce((p, line) => {\r\n        if (process.stdout.columns) {\r\n          return p + Math.ceil((line.length || 1) / process.stdout.columns);\r\n        }\r\n\r\n        return p + 1;\r\n      }, 0);\r\n  }\r\n\r\n  writeRaw(message) {\r\n    this.stopSpinner();\r\n\r\n    this.lines += this.countLines(message) - 1;\r\n    process.stdout.write(message);\r\n  }\r\n\r\n  write(message, persistent = false) {\r\n    if (this.logLevel > 3) {\r\n      return this.verbose(message);\r\n    }\r\n\r\n    if (!persistent) {\r\n      this.lines += this.countLines(message);\r\n    }\r\n\r\n    this.stopSpinner();\r\n    this._log(message);\r\n  }\r\n\r\n  verbose(message) {\r\n    if (this.logLevel < 4) {\r\n      return;\r\n    }\r\n\r\n    let currDate = new Date();\r\n    message = `[${currDate.toLocaleTimeString()}]: ${message}`;\r\n    if (this.logLevel > 4) {\r\n      if (!this.logFile) {\r\n        this.logFile = fs.createWriteStream(\r\n          path.join(process.cwd(), `parcel-debug-${currDate.toISOString()}.log`)\r\n        );\r\n      }\r\n      this.logFile.write(stripAnsi(message) + '\\n');\r\n    }\r\n    this._log(message);\r\n  }\r\n\r\n  log(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    this.write(message);\r\n  }\r\n\r\n  persistent(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    this.write(this.chalk.bold(message), true);\r\n  }\r\n\r\n  warn(err) {\r\n    if (this.logLevel < 2) {\r\n      return;\r\n    }\r\n\r\n    this._writeError(err, this.emoji.warning, this.chalk.yellow);\r\n  }\r\n\r\n  error(err) {\r\n    if (this.logLevel < 1) {\r\n      return;\r\n    }\r\n\r\n    this._writeError(err, this.emoji.error, this.chalk.red.bold);\r\n  }\r\n\r\n  success(message) {\r\n    this.log(`${this.emoji.success}  ${this.chalk.green.bold(message)}`);\r\n  }\r\n\r\n  formatError(err, opts) {\r\n    return prettyError(err, opts);\r\n  }\r\n\r\n  _writeError(err, emoji, color) {\r\n    let {message, stack} = this.formatError(err, {color: this.color});\r\n    this.write(color(`${emoji}  ${message}`));\r\n    if (stack) {\r\n      this.write(stack);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!this.color || this.isTest || this.logLevel > 3) {\r\n      return;\r\n    }\r\n\r\n    while (this.lines > 0) {\r\n      readline.clearLine(process.stdout, 0);\r\n      readline.moveCursor(process.stdout, 0, -1);\r\n      this.lines--;\r\n    }\r\n\r\n    readline.cursorTo(process.stdout, 0);\r\n    this.stopSpinner();\r\n  }\r\n\r\n  progress(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    if (this.logLevel > 3) {\r\n      return this.verbose(message);\r\n    }\r\n\r\n    let styledMessage = this.chalk.gray.bold(message);\r\n    if (!this.spinner) {\r\n      this.spinner = ora({\r\n        text: styledMessage,\r\n        stream: process.stdout,\r\n        enabled: this.isTest ? false : undefined // fall back to ora default unless we need to explicitly disable it.\r\n      }).start();\r\n    } else {\r\n      this.spinner.text = styledMessage;\r\n    }\r\n  }\r\n\r\n  stopSpinner() {\r\n    if (this.spinner) {\r\n      this.spinner.stop();\r\n      this.spinner = null;\r\n    }\r\n  }\r\n\r\n  handleMessage(options) {\r\n    this[options.method](...options.args);\r\n  }\r\n\r\n  _log(message) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(message);\r\n  }\r\n\r\n  table(columns, table) {\r\n    // Measure column widths\r\n    let colWidths = [];\r\n    for (let row of table) {\r\n      let i = 0;\r\n      for (let item of row) {\r\n        colWidths[i] = Math.max(colWidths[i] || 0, stringWidth(item));\r\n        i++;\r\n      }\r\n    }\r\n\r\n    // Render rows\r\n    for (let row of table) {\r\n      let items = row.map((item, i) => {\r\n        // Add padding between columns unless the alignment is the opposite to the\r\n        // next column and pad to the column width.\r\n        let padding =\r\n          !columns[i + 1] || columns[i + 1].align === columns[i].align ? 4 : 0;\r\n        return pad(item, colWidths[i] + padding, columns[i].align);\r\n      });\r\n\r\n      this.log(items.join(''));\r\n    }\r\n  }\r\n}\r\n\r\n// Pad a string with spaces on either side\r\nfunction pad(text, length, align = 'left') {\r\n  let pad = ' '.repeat(length - stringWidth(text));\r\n  if (align === 'right') {\r\n    return pad + text;\r\n  }\r\n\r\n  return text + pad;\r\n}\r\n\r\n// Count visible characters in a string\r\nfunction stringWidth(string) {\r\n  return countBreaks(stripAnsi('' + string))\r\n}\r\n\r\nexport default new Logger()\r\n","import path from 'path'\r\nimport Koa from 'koa'\r\nimport serve from 'koa-static'\r\nimport mount from 'koa-mount'\r\nimport getPort from 'get-port'\r\n\r\nexport const port = getPort({ port: 10485 })\r\n\r\nconst app = new Koa()\r\nconst epk = new Koa()\r\nepk.use(serve(path.resolve(__dirname, '..', 'dist')))\r\nconst tests = new Koa()\r\ntests.use(serve(path.resolve(__dirname, '..', '.epk', 'dist')))\r\n\r\napp.use(mount('/epk', epk))\r\napp.use(mount('/tests', tests))\r\n\r\nport.then(port =>\r\n  app.listen(port))\r\n","export const isBrowser = typeof window !== 'undefined'\r\n\r\nexport const GET_TESTS = '__EPK_GET_TESTS'\r\nexport const RUN_TESTS = '__EPK_RUN_TESTS'\r\nexport const RUN_TEST = '__EPK_RUN_TEST'","import path from 'path'\r\nimport { Observable } from 'rxjs'\r\nimport { Page } from 'puppeteer'\r\nimport { switchMap } from 'rxjs/operators'\r\nimport { GET_TESTS } from '../utils'\r\nimport { AnalyzedContext } from '../types'\r\n\r\nexport const browser: (page: Page) => Observable<AnalyzedContext> =\r\n  page =>\r\n    switchMap(({ bundle }) =>\r\n      page\r\n        .evaluate(\r\n          ({ GET_TESTS, urls }: { GET_TESTS: string, urls: string[] }) =>\r\n            window[GET_TESTS](urls),\r\n          {\r\n            GET_TESTS,\r\n            urls:\r\n              (bundle.isEmpty\r\n                ? Array.from(bundle.childBundles)\r\n                : [bundle])\r\n                .map(({ name }) => name.replace(`${path.resolve(process.cwd(), '.epk', 'dist')}\\\\`, '/tests/'))\r\n          })\r\n          .then(result => ({\r\n            bundle,\r\n            tests: result\r\n          })))\r\n","import path from 'path'\r\nimport { Page } from 'puppeteer'\r\nimport { switchMap, tap } from 'rxjs/operators'\r\nimport { RUN_TESTS } from '../utils'\r\nimport { TestResult, Test } from '../types'\r\nimport { Observable } from 'rxjs'\r\n\r\nexport const browser = (page: Page): Observable<TestedContext> =>\r\n  switchMap(async ({ bundle, tests }: { bundle: any, tests: Test[] }) =>\r\n    page.coverage.startJSCoverage()\r\n      .then(async _ => ({\r\n        bundle,\r\n        tests,\r\n        testsResult:\r\n          await page\r\n            .evaluate(\r\n              ({ RUN_TESTS, tests }: { RUN_TESTS: string, tests: Test[] }) =>\r\n                window[RUN_TESTS](tests),\r\n              {\r\n                RUN_TESTS,\r\n                tests\r\n              }),\r\n        testsCoverage: await page.coverage.stopJSCoverage()\r\n      })))\r\n","import Path from 'path'\r\nimport chalk from 'chalk'\r\nimport fg from 'fast-glob'\r\nimport { filter, publish, switchMap, tap, catchError } from 'rxjs/operators'\r\nimport puppeteer, { Page, Browser } from 'puppeteer'\r\nimport cli from './cli'\r\nimport { prettifyTime } from './utils'\r\nimport Bundler from './bundler'\r\nimport logger from './logger'\r\nimport { port } from './server'\r\nimport { browser as analyzeBrowser } from './analyze'\r\nimport { browser as testBrowser } from './test'\r\nimport { test } from '../test';\r\n\r\nconst init = async ({ node = false } = {}) => {\r\n  let pageReload, buildTimeStart, buildTimeEnd, analyzeTimeStart, analyzeTimeEnd, testTimeStart, testTimeEnd\r\n  \r\n  const globs: string[] = await cli()\r\n\r\n  const browser: Browser = await puppeteer.launch({ devtools: true })\r\n  const page: Page = !node && (await browser.pages())[0]\r\n  \r\n  page.on('console', msg => logger.log(`browser: ${msg.text()}`))\r\n\r\n  await page.goto(`http://localhost:${await port}/epk/browser-runner.html`)\r\n\r\n  const entryFiles =\r\n    (await fg.async(globs))\r\n      .map(path =>\r\n        Path.join(process.cwd(), path))\r\n  const entryFilesDisplayNames =\r\n    entryFiles\r\n      .map(path =>\r\n        Path.win32.basename(path))\r\n      .join(', ')\r\n\r\n  const bundler =\r\n    Bundler(entryFiles)\r\n      |> publish()\r\n\r\n  const building =\r\n    bundler\r\n      |> filter(({name}) => name === 'buildStart')\r\n  building.subscribe(_ => {\r\n    logger.clear()\r\n    pageReload = page.reload()\r\n    buildTimeStart = Date.now()\r\n    logger.progress(`\\n${chalk.grey(`Building ${entryFilesDisplayNames}`)}`)\r\n  })\r\n\r\n  const error = bundler\r\n    |> filter(({ name }) => name === 'buildError')\r\n    |> catchError(error => logger.error(error))\r\n  error.subscribe(_ =>\r\n    logger.error(error))\r\n\r\n  const analyzed =\r\n    bundler\r\n      |> filter(({ name }) => name === 'bundled')\r\n      |> tap(_ => {\r\n          buildTimeEnd = Date.now()\r\n          logger.progress(`\\n${\r\n            chalk.green(`Built in ${prettifyTime(buildTimeEnd - buildTimeStart)}.`)\r\n          }\\n${\r\n            chalk.grey(`Analyzing ${entryFilesDisplayNames}`)}.`)\r\n        })\r\n      |> switchMap(({ bundle }): Promise<Context> =>\r\n          pageReload.then(_ => ({\r\n            bundle\r\n          }))\r\n        )\r\n      |> tap(_ => {\r\n          analyzeTimeStart = Date.now()\r\n        })\r\n      |> analyzeBrowser(page)\r\n      |> tap(_ => {\r\n          analyzeTimeEnd = Date.now()\r\n          testTimeStart = Date.now()\r\n          logger.progress(`\\n${\r\n            chalk.green(`Built in ${prettifyTime(buildTimeEnd - buildTimeStart)}.`)\r\n          }\\n${\r\n            chalk.green(`Analyzed in ${prettifyTime(analyzeTimeEnd - analyzeTimeStart)}.`)\r\n          }\\n${\r\n            chalk.green(`Testing ${entryFilesDisplayNames}.`)}`)\r\n        })\r\n      |> testBrowser(page)\r\n      |> tap(_ => {\r\n        testTimeEnd = Date.now()\r\n        logger.success(`\\n${\r\n          chalk.green(`Built in ${prettifyTime(buildTimeEnd - buildTimeStart)}.`)\r\n        }\\n${\r\n          chalk.green(`Analyzed in ${prettifyTime(analyzeTimeEnd - analyzeTimeStart)}.`)\r\n        }\\n${\r\n          chalk.green(`Tested in ${prettifyTime(testTimeEnd - testTimeStart)}.`)\r\n        }${\r\n          chalk.red(`\\nErrors:`)}\\n${\r\n            chalk.red(\r\n              Object.entries(\r\n                _.testsResult\r\n                  .reduce((obj, test) =>\r\n                    (obj[test.url]\r\n                      ? obj[test.url].push(test)\r\n                      : obj[test.url] = [test]\r\n                    , obj), {}))\r\n                .map(([url, tests]) =>\r\n                  `${url}\\n${\r\n                    tests\r\n                      .map(({ description, error: { message } }) =>\r\n                      `${description}\\n${\r\n                        message}`)\r\n                      .join('\\n')\r\n                  }`\r\n                  )\r\n                )\r\n          }`)\r\n      })\r\n  analyzed.subscribe(val => {\r\n    // logger.log(`finalValue: ${JSON.stringify(val.testsResult)}`)\r\n  })\r\n\r\n  bundler.connect()\r\n}\r\n\r\ninit()","import { isBrowser, GET_TESTS, RUN_TEST } from '../utils'\r\nimport { errors } from './error'\r\n\r\nexport const tests = new Map<string, Function>()\r\n\r\nexport const todo = _ => {}\r\nexport const pass = _ => {}\r\nexport const fail = _ => {}\r\n\r\nexport const test = (desc, func) => {\r\n  if (typeof desc !== 'string') throw new Error('desc has to be a string')\r\n  if (typeof func !== 'function') throw new Error('func has to be a function')\r\n  if (tests.has(desc)) throw new Error(`Found duplicate test description: ${desc}`)\r\n  tests.set(desc, func)\r\n}\r\n\r\nconst initiated = new Promise(resolve => setTimeout(resolve, 0))\r\n\r\nif (isBrowser) {\r\n  window.addEventListener('message', async ({ data: { name, data } }) => {\r\n    if (name === GET_TESTS) {\r\n      window.parent\r\n        .postMessage({\r\n          name: GET_TESTS,\r\n          data:\r\n            Array.from(tests)\r\n              .map(([desc, func]) => [desc, func.toString()])\r\n        })\r\n    } else if (name === RUN_TEST) {\r\n      let error\r\n      try {\r\n        const result = await tests.get(data)()\r\n        // console.log(result)\r\n        // if (result instanceof Error) error = result\r\n      } catch (err) {\r\n        // console.log(err)\r\n        error = err\r\n      }\r\n      \r\n      //   .then(result => console.log('result', result)).catch(err => console.log('error', err))\r\n      // setTimeout(_ => console.log(errors), 0)\r\n      window.parent\r\n        .postMessage({\r\n          name: GET_TESTS,\r\n          data: {\r\n            error\r\n            // ...await tests.get(data)()\r\n            //   .then(value => ({ /*value*/ }))\r\n            //   .catch(error => console.log('lol', error) || ({ error }))\r\n          }\r\n        })\r\n    }\r\n  })\r\n}","import PowerAssert from 'power-assert'\r\n\r\nexport const assert = PowerAssert.customize({\r\n\r\n})","// export * from './test'\r\n// export * from './assert'\r\n\r\n// parceljs experimental hoisting fix\r\nimport { test } from './test'\r\nimport { assert } from './assert'\r\n\r\nexport {\r\n  test,\r\n  assert\r\n}","export * from './runner/index'\r\nexport * from './test/index'"]}