{"version":3,"sources":["types.ts","core/bundler.ts","utils/index.ts","cli/logger.ts","utils/installPackage.ts","utils/getModuleParts.ts","utils/localRequire.ts","targets/chrome.ts","core/target-runtime-provider.ts","core/utils.ts","core/analyze.ts","core/test.ts","core/server.ts","core/index.ts","test/error.ts","test/test.ts","test/assert.ts","test/index.ts","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","index.ts"],"names":["NODE_GLOBAL","TARGET","BROWSER_TARGET","CHROME_EXTENSION","CHROME_CANARY","CHROME_CANARY_EXTENSION","FIREFOX","FIREFOX_EXTENSION","FIREFOX_NIGHTLY","FIREFOX_NIGHTLY_EXTENSION","BUNDLER_TARGET","targetToBundlerTarget","target","BROWSER","NODE","ELECTRON","MESSAGE_TYPE","options","Observable","create","observer","bundler","ParcelBundler","entryFiles","addAssetType","Path","resolve","__dirname","on","bundle","next","name","buildEndTime","Date","now","buildStartTime","_","error","stop","prettifyPath","path","relative","process","cwd","transformPathToTestUrl","port","replace","transformPathToEpkUrl","prettyError","err","color","undefined","message","fileName","loc","line","column","stack","codeFrame","highlightedCodeFrame","slice","indexOf","supportsEmoji","platform","env","TERM","defaultEmojis","progress","success","warning","countLines","str","split","reduce","p","stdout","columns","Math","ceil","length","pad","text","align","repeat","stringWidth","stripAnsi","countBreaks","Logger","logLevel","Chalk","supportsColor","emojis","chalk","constructor","enabled","isTest","NODE_ENV","lines","spinner","logFile","writeRaw","stopSpinner","write","persistent","verbose","_log","currDate","toLocaleTimeString","fs","createWriteStream","join","toISOString","log","bold","warn","_writeError","yellow","red","green","formatError","emoji","_color","clear","readline","clearLine","moveCursor","cursorTo","styledMessage","gray","stream","start","console","table","colWidths","row","i","item","max","map","padding","logger","handleMessage","method","args","promisify","utils","_resolve","YARN_LOCK","install","modules","filepath","installPeers","saveDev","packageManager","packageLocation","config","dirname","determinePackageManager","commandToUse","push","writeFile","Error","Promise","all","m","installPeerDependencies","basedir","resolved","pkg","load","peers","peerDependencies","peer","Object","assign","yarnLockFile","hasYarn","checkForYarnCommand","queue","PromiseQueue","maxConcurrent","retry","WorkerFarm","isWorker","callMaster","location","__filename","add","run","parts","normalize","sep","charAt","splice","Resolve","cache","Map","localRequire","triedInstall","require","key","get","e","code","packageName","set","packages","pptr","closed","browser","then","launch","devtools","page","newPage","loadFile","file","goto","evaluate","exec","close","targetRuntimes","CHROME","ChromeRuntime","targetRuntimeProvider","targetRuntime","stringify","strings","vals","finalStr","JSON","prettifyTime","time","toFixed","isBrowser","window","browserStr","data","GET_TESTS_RESPONSE","nodeStr","analyzeStr","tests","type","GET_TESTS","imports","val","app","Koa","serve","mount","epk","use","listen","getPort","_options","keys","forEach","browsers","outDir","watch","cacheDir","minify","scopeHoist","sourceMaps","detailedReport","_port","targetRuntimeProviders","bundleContainer","isEmpty","Array","from","childBundles","newContextObservable","url","analyzedObservable","testedObservable","testerObservable","connect","errors","addEventListener","todo","pass","fail","test","desc","func","has","initiated","setTimeout","emit","parent","postMessage","global","getTests","toString","runTest","description","performance","timeStart","timeEnd","RUN_TEST_RESPONSE","newEvent","RUN_TEST","events","EventEmitter","addListener","assert","PowerAssert","customize","bundleURL","getBundleURLCached","getBundleURL","matches","match","getBaseURL","exports","loadBundlesLazy","bundles","isArray","id","LazyPromise","reject","loadBundles","loadBundle","bundleLoaders","registerBundleLoader","loader","module","register","substring","lastIndexOf","toLowerCase","bundleLoader","catch","executor","promise","prototype","onSuccess","onError"],"mappings":"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","file":"index.map","sourceRoot":"..\\src","sourcesContent":["import { Page as PPTRPage } from 'puppeteer'\r\nimport { Observable } from 'rxjs'\r\n\r\nexport const NODE_GLOBAL = '__EPK_NODE_GLOBAL'\r\n\r\n/**\r\n * List of different runtimes (available) to test on\r\n */\r\nexport enum TARGET {\r\n  NODE = 'node',\r\n  ELECTRON = 'electron',\r\n  DENO = 'deno',\r\n  CHROME = 'chrome',\r\n  CHROME_EXTENSION = 'chromeExtension',\r\n  CHROME_CANARY = 'chromeCanary',\r\n  CHROME_CANARY_EXTENSION = 'chromeCanaryExtension',\r\n  FIREFOX = 'firefox',\r\n  FIREFOX_EXTENSION = 'firefoxExtension',\r\n  FIREFOX_NIGHTLY = 'firefoxNightly',\r\n  FIREFOX_NIGHTLY_EXTENSION = 'firefoxNightlyExtension'\r\n}\r\n\r\nexport enum BROWSER_TARGET {\r\n  CHROME = TARGET.CHROME_EXTENSION,\r\n  CHROME_EXTENSION = TARGET.CHROME_CANARY,\r\n  CHROME_CANARY = TARGET.CHROME_CANARY_EXTENSION,\r\n  CHROME_CANARY_EXTENSION = TARGET.FIREFOX,\r\n  FIREFOX = TARGET.FIREFOX_EXTENSION,\r\n  FIREFOX_EXTENSION = TARGET.FIREFOX_NIGHTLY,\r\n  FIREFOX_NIGHTLY = TARGET.FIREFOX_NIGHTLY_EXTENSION,\r\n  FIREFOX_NIGHTLY_EXTENSION = TARGET.FIREFOX_NIGHTLY_EXTENSION\r\n}\r\n\r\nexport enum BUNDLER_TARGET {\r\n  NODE = 'node',\r\n  BROWSER = 'browser',\r\n  ELECTRON = 'electron'\r\n}\r\n\r\nexport const targetToBundlerTarget =\r\n  (target: TARGET): BUNDLER_TARGET =>\r\n    target in BROWSER_TARGET ? BUNDLER_TARGET.BROWSER\r\n    : target as unknown as BUNDLER_TARGET === BUNDLER_TARGET.NODE ? BUNDLER_TARGET.NODE\r\n    : target as unknown as BUNDLER_TARGET === BUNDLER_TARGET.ELECTRON && BUNDLER_TARGET.NODE\r\n\r\nexport interface Bundler extends Observable<any> {}\r\n\r\nexport interface TargetRuntime extends Observable<any> {\r\n  loadFile: Function\r\n  exec: Function\r\n}\r\nexport interface TargetRuntimeObservable extends Observable<TargetRuntime> {\r\n  target: TARGET\r\n  options: TargetRuntimeOptions\r\n}\r\n\r\nexport interface TargetRuntimeOptions {}\r\nexport interface TargetRuntimeProvider extends Observable<TargetRuntimeObservable> {\r\n  target: TARGET\r\n  options: TargetRuntimeOptions\r\n}\r\nexport interface TargetRuntimeProviderOptions {}\r\n\r\nexport enum MESSAGE_TYPE {\r\n  GET_TESTS = '__EPK_GET_TESTS',\r\n  RUN_TESTS = '__EPK_RUN_TESTS',\r\n  RUN_TEST = '__EPK_RUN_TEST',\r\n  GET_TESTS_RESPONSE = '__EPK_GET_TESTS_RESPONSE',\r\n  RUN_TESTS_RESPONSE = '__EPK_RUN_TESTS_RESPONSE',\r\n  RUN_TEST_RESPONSE = '__EPK_RUN_TEST_RESPONSE'\r\n}\r\n\r\nexport interface Message {\r\n  type: MESSAGE_TYPE,\r\n  payload: any\r\n}\r\n\r\nexport interface Options {\r\n  browsers?: BROWSER_TARGET[]\r\n  entryFiles: string[]\r\n  target: BUNDLER_TARGET\r\n  watch?: Boolean\r\n  outDir?: string\r\n  cache?: Boolean\r\n  cacheDir?: string\r\n  minify?: Boolean\r\n  scopeHoist?: Boolean\r\n  /**\r\n   * 0 = log nothing\r\n   * 1 = log errors\r\n   * 2 = log warnings & errors\r\n   * 3 = log everything\r\n   */\r\n  logLevel?: 0 | 1 | 2 | 3\r\n  sourceMaps?: Boolean\r\n  detailedReport?: Boolean\r\n}\r\n\r\nexport interface Target {\r\n  type: TARGET\r\n  test: Function\r\n  prepare: Function\r\n}\r\n\r\n/**\r\n * Context object of the testing pipeline that contains all the information needed for each testing steps\r\n */\r\nexport interface Context {\r\n  /**\r\n   * Options passed to epk\r\n   */\r\n  options: Options\r\n  /**\r\n   * Files found by the paths/globs\r\n   */\r\n  files: File[]\r\n  /**\r\n   * entryFiles from Parcel\r\n   */\r\n  entryFiles: string[]\r\n  /**\r\n   * Array of targets in which the tests will be executed\r\n   */\r\n  targets: TARGET[]\r\n  name: string\r\n  bundle: any\r\n  buildStartTime: number\r\n  buildEndTime: number\r\n  analyzeEndTime?: number\r\n  analyzeStartTime?: number\r\n  testStartTime?: number\r\n  testEndTime?: number\r\n}\r\n\r\n/**\r\n * Representation of a file\r\n */\r\nexport interface File {\r\n  target: TARGET\r\n  /**\r\n   * Path of the test file\r\n   */\r\n  path: string\r\n  /**\r\n   * Url by which browsers can access the test file\r\n   */\r\n  url?: string\r\n  /**\r\n   * Array of tests\r\n   */\r\n  tests?: Test[]\r\n}\r\n\r\n/**\r\n * Representation of a test\r\n */\r\nexport interface Test {\r\n  /**\r\n   * Description of the test\r\n   */\r\n  description: string\r\n  /**\r\n   * Body of the test (Function stringified)\r\n   */\r\n  body: String\r\n  /**\r\n   * Type of test\r\n   */\r\n  type?: Function | Promise<any> | Observable<any>\r\n  /**\r\n   * Value returned by the test\r\n   */\r\n  value?: any\r\n  /**\r\n   * Error thrown by the test\r\n   */\r\n  error?: Error,\r\n  /**\r\n   * Time of execution in ms\r\n   */\r\n  executionTime?: Number,\r\n  /**\r\n   * Target\r\n   */\r\n  target?: TARGET\r\n  /**\r\n   * Code coverage of the test\r\n   */\r\n  coverage?: any\r\n}\r\n","import Path from 'path'\r\nimport ParcelBundler from 'parcel-bundler'\r\nimport { Observable } from 'rxjs'\r\nimport { Bundler, Options } from '../types'\r\n\r\nexport default (options): Bundler =>\r\n  Observable.create(observer => {\r\n    const bundler = new ParcelBundler(options.entryFiles, options)\r\n    bundler.addAssetType('js', Path.resolve(__dirname, '../src/runner/js-asset.ts'))\r\n    bundler.addAssetType('ts', Path.resolve(__dirname, '../src/runner/ts-asset.ts'))\r\n    bundler.on('bundled', bundle =>\r\n      observer.next({ options, name: 'bundled', bundle, buildEndTime: Date.now() }))\r\n    bundler.on('buildStart', entryFiles  =>\r\n      observer.next({ options, name: 'buildStart', entryFiles , buildStartTime: Date.now() }))\r\n    bundler.on('buildEnd', _ =>\r\n      observer.next({ name: 'buildEnd' }))\r\n    bundler.on('buildError', error =>\r\n      observer.next({ name:'error', error }))\r\n    \r\n    bundler.bundle()\r\n    return _ => bundler.stop()\r\n  })","import Path from 'path'\r\n\r\nexport const prettifyPath = path => Path.relative(process.cwd(), path)\r\n\r\nexport const transformPathToTestUrl = (path, port) => `${port ? `http://localhost:${port}` : ''}${path.replace(`${Path.resolve(process.cwd(), '.epk', 'dist')}\\\\`, '/tests/').replace('\\\\', '/')}`\r\nexport const transformPathToEpkUrl = (path, port) => `${port ? `http://localhost:${port}` : ''}${path.replace(`${Path.resolve(process.cwd(), 'dist')}\\\\`, '/epk/').replace('\\\\', '/')}`\r\n","// from https://github.com/parcel-bundler/parcel/tree/master/packages/core/logger/src\r\n\r\nimport Chalk from 'Chalk'\r\nimport readline from 'readline'\r\nimport { countBreaks } from 'grapheme-breaker'\r\nimport stripAnsi from 'strip-ansi'\r\nimport ora from 'ora'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\nconst prettyError = (err, { color } = { color: undefined }) => {\r\n  let message = typeof err === 'string' ? err : err.message\r\n  if (!message) message = 'Unknown error'\r\n\r\n  if (err.fileName) {\r\n    let fileName = err.fileName\r\n    if (err.loc) {\r\n      fileName += `:${err.loc.line}:${err.loc.column}`\r\n    }\r\n\r\n    message = `${fileName}: ${message}`\r\n  }\r\n\r\n  let stack\r\n  if (err.codeFrame) {\r\n    stack = (color && err.highlightedCodeFrame) || err.codeFrame\r\n  } else if (err.stack) {\r\n    stack = err.stack.slice(err.stack.indexOf('\\n') + 1)\r\n  }\r\n\r\n  return {\r\n    message, stack\r\n  }\r\n}\r\n\r\nconst supportsEmoji =\r\n  process.platform !== 'win32' || process.env.TERM === 'xterm-256color'\r\n\r\n// Fallback symbols for Windows from https://en.wikipedia.org/wiki/Code_page_437\r\nconst defaultEmojis = {\r\n  progress: supportsEmoji ? '⏳' : '∞',\r\n  success: supportsEmoji ? '✨' : '√',\r\n  error: supportsEmoji ? '🚨' : '×',\r\n  warning: supportsEmoji ? '⚠️' : '‼'\r\n}\r\n\r\nconst countLines = str =>\r\n  stripAnsi(str)\r\n    .split('\\n')\r\n    .reduce((p, line) =>\r\n      process.stdout.columns\r\n        ? p + Math.ceil((line.length || 1) / process.stdout.columns)\r\n        : p + 1)\r\n\r\n// Pad a string with spaces on either side\r\nconst pad = (text, length, align = 'left') => {\r\n  const pad = ' '.repeat(length - stringWidth(text))\r\n  if (align === 'right') return `${pad}${text}`\r\n  return `${text}${pad}`\r\n}\r\n\r\n// Count visible characters in a string\r\nconst stringWidth = str =>\r\n  // @ts-ignore\r\n  `${str}`\r\n  // @ts-ignore\r\n  |> stripAnsi\r\n  // @ts-ignore\r\n  |> countBreaks\r\n\r\nconst Logger = ({\r\n  logLevel = 3,\r\n  color = Chalk.supportsColor,\r\n  emojis = defaultEmojis,\r\n  chalk = new Chalk.constructor({ enabled: color }),\r\n  isTest = process.env.NODE_ENV === 'test'\r\n} = {}) => {\r\n  let lines = 0\r\n  let spinner\r\n  let logFile\r\n\r\n  const writeRaw = str => {\r\n    stopSpinner()\r\n    lines += countLines(str) - 1\r\n    process.stdout.write(str)\r\n  }\r\n\r\n  const write = (message, persistent = false) => {\r\n    if (logLevel > 3) {\r\n      return verbose(message)\r\n    }\r\n\r\n    if (!persistent) {\r\n      lines += countLines(message)\r\n    }\r\n\r\n    stopSpinner()\r\n    _log(message)\r\n  }\r\n\r\n  const verbose = str => {\r\n    if (logLevel < 4) return\r\n    let currDate = new Date()\r\n    str = `[${currDate.toLocaleTimeString()}]: ${str}`\r\n    if (logLevel > 4) {\r\n      if (!logFile) {\r\n        logFile = fs.createWriteStream(\r\n          path.join(process.cwd(), `parcel-debug-${currDate.toISOString()}.log`)\r\n        )\r\n      }\r\n      logFile.write(stripAnsi(str) + '\\n')\r\n    }\r\n    _log(str)\r\n  }\r\n\r\n  const log = str =>\r\n    logLevel >= 3 &&\r\n    write(str)\r\n\r\n  const persistent = str =>\r\n    logLevel >= 3 &&\r\n    write(chalk.bold(str), true)\r\n\r\n  const warn = err =>\r\n    logLevel >= 2 &&\r\n    _writeError(err, emojis.warning, chalk.yellow)\r\n\r\n  const error = err =>\r\n    logLevel >= 1 &&\r\n    _writeError(err, emojis.error, chalk.red.bold)\r\n\r\n  const success = str =>\r\n    log(`${emojis.success}  ${chalk.green.bold(str)}`)\r\n\r\n  const formatError = (err, options) => prettyError(err, options)\r\n\r\n  const _writeError = (err, emoji, _color) => {\r\n    const { message, stack } = formatError(err, { color })\r\n    write(_color(`${emoji}  ${message}`))\r\n    if (stack) write(stack)\r\n  }\r\n\r\n  const clear = () => {\r\n    if (!color || isTest || logLevel > 3) return\r\n\r\n    while (lines > 0) {\r\n      readline.clearLine(process.stdout, 0)\r\n      readline.moveCursor(process.stdout, 0, -1)\r\n      lines--\r\n    }\r\n\r\n    readline.cursorTo(process.stdout, 0)\r\n    stopSpinner()\r\n  }\r\n\r\n  const progress = str => {\r\n    if (logLevel < 3) return\r\n    else if (logLevel > 3) return verbose(str)\r\n\r\n    const styledMessage = chalk.gray.bold(str)\r\n    if (!spinner) {\r\n      spinner = ora({\r\n        text: styledMessage,\r\n        stream: process.stdout,\r\n        enabled: isTest ? false : undefined // fall back to ora default unless we need to explicitly disable it.\r\n      }).start()\r\n    } else spinner.text = styledMessage\r\n  }\r\n\r\n  const stopSpinner = () => {\r\n    if (spinner) {\r\n      spinner.stop()\r\n      spinner = null\r\n    }\r\n  }\r\n\r\n  const _log = str => console.log(str)\r\n\r\n  const table = (columns, table) => {\r\n    // Measure column widths\r\n    let colWidths = []\r\n    for (let row of table) {\r\n      let i = 0\r\n      for (let item of row) {\r\n        colWidths[i] = Math.max(colWidths[i] || 0, stringWidth(item))\r\n        i++\r\n      }\r\n    }\r\n\r\n    // Render rows\r\n    for (let row of table) {\r\n      log(\r\n        row.map((item, i) => {\r\n          // Add padding between columns unless the alignment is the opposite to the\r\n          // next column and pad to the column width.\r\n          let padding =\r\n            !columns[i + 1] || columns[i + 1].align === columns[i].align ? 4 : 0\r\n          return pad(item, colWidths[i] + padding, columns[i].align)\r\n        })\r\n        .join('')\r\n      )\r\n    }\r\n  }\r\n\r\n  const logger = {\r\n    writeRaw,\r\n    write,\r\n    verbose,\r\n    log,\r\n    persistent,\r\n    warn,\r\n    error,\r\n    success,\r\n    formatError,\r\n    _writeError,\r\n    clear,\r\n    progress,\r\n    stopSpinner,\r\n    _log,\r\n    table,\r\n    handleMessage: undefined,\r\n  }\r\n\r\n  const handleMessage = ({ method, args }) => logger[method](...args)\r\n  logger.handleMessage = handleMessage\r\n\r\n  return logger\r\n}\r\n\r\nexport default Logger()\r\n","// https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/utils/installPackage.js\r\n\r\nimport config from 'parcel-bundler/src/utils/config'\r\nimport commandExists from 'command-exists'\r\nimport logger from '../cli/logger'\r\nimport pipeSpawn from 'parcel-bundler/src/utils/pipeSpawn'\r\nimport PromiseQueue from 'parcel-bundler/src/utils/PromiseQueue'\r\nimport path from 'path'\r\nimport fs from '@parcel/fs'\r\nimport WorkerFarm from '@parcel/workers'\r\nimport utils from '@parcel/utils'\r\nimport _resolve from 'resolve'\r\n\r\nconst { promisify } = utils\r\nconst resolve  = promisify(_resolve)\r\n\r\nconst YARN_LOCK = 'yarn.lock'\r\n\r\nasync function install(modules, filepath, options = { installPeers: true, saveDev: true, packageManager: undefined }) {\r\n  let { installPeers = true, saveDev = true, packageManager } = options\r\n  if (typeof modules === 'string') {\r\n    modules = [modules]\r\n  }\r\n\r\n  logger.progress(`Installing ${modules.join(', ')}...`)\r\n\r\n  let packageLocation = await config.resolve(filepath, ['package.json'])\r\n  let cwd = packageLocation ? path.dirname(packageLocation) : process.cwd()\r\n\r\n  if (!packageManager) {\r\n    packageManager = await determinePackageManager(filepath)\r\n  }\r\n\r\n  let commandToUse = packageManager === 'npm' ? 'install' : 'add'\r\n  let args = [commandToUse, ...modules]\r\n  if (saveDev) {\r\n    args.push('-D')\r\n  } else if (packageManager === 'npm') {\r\n    args.push('--save')\r\n  }\r\n\r\n  // npm doesn't auto-create a package.json when installing,\r\n  // so create an empty one if needed.\r\n  if (packageManager === 'npm' && !packageLocation) {\r\n    await fs.writeFile(path.join(cwd, 'package.json'), '{}')\r\n  }\r\n\r\n  try {\r\n    await pipeSpawn(packageManager, args, {cwd})\r\n  } catch (err) {\r\n    throw new Error(`Failed to install ${modules.join(', ')}.`)\r\n  }\r\n\r\n  if (installPeers) {\r\n    await Promise.all(\r\n      modules.map(m => installPeerDependencies(filepath, m, options))\r\n    )\r\n  }\r\n}\r\n\r\nasync function installPeerDependencies(filepath, name, options) {\r\n  let basedir = path.dirname(filepath)\r\n  const [resolved] = await resolve(name, {basedir})\r\n  const pkg = await config.load(resolved, ['package.json'])\r\n  const peers = pkg.peerDependencies || {}\r\n\r\n  const modules = []\r\n  for (const peer in peers) {\r\n    modules.push(`${peer}@${peers[peer]}`)\r\n  }\r\n\r\n  if (modules.length) {\r\n    await install(\r\n      modules,\r\n      filepath,\r\n      Object.assign({}, options, {installPeers: false})\r\n    )\r\n  }\r\n}\r\n\r\nasync function determinePackageManager(filepath) {\r\n  const yarnLockFile = await config.resolve(filepath, [YARN_LOCK])\r\n\r\n  /**\r\n   * no yarn.lock => use npm\r\n   * yarn.lock => Use yarn, fallback to npm\r\n   */\r\n  if (!yarnLockFile) {\r\n    return 'npm'\r\n  }\r\n\r\n  const hasYarn = await checkForYarnCommand()\r\n  if (hasYarn) {\r\n    return 'yarn'\r\n  }\r\n\r\n  return 'npm'\r\n}\r\n\r\nlet hasYarn = null\r\nasync function checkForYarnCommand() {\r\n  if (hasYarn != null) {\r\n    return hasYarn\r\n  }\r\n\r\n  try {\r\n    hasYarn = await commandExists('yarn')\r\n  } catch (err) {\r\n    hasYarn = false\r\n  }\r\n\r\n  return hasYarn\r\n}\r\n\r\nlet queue = new PromiseQueue(install, {maxConcurrent: 1, retry: false})\r\nexport default async function(...args) {\r\n  // Ensure that this function is always called on the master process so we\r\n  // don't call multiple installs in parallel.\r\n  if (WorkerFarm.isWorker()) {\r\n    await WorkerFarm.callMaster({\r\n      location: __filename,\r\n      args\r\n    })\r\n    return\r\n  }\r\n\r\n  queue.add(...args)\r\n  return queue.run()\r\n}\r\n\r\n// export default async (...names) => {\r\n//   await _installPackage(names)\r\n//   return names.length === 1\r\n//           ? import(name)\r\n//           : Promise.all(names.map(name => import(name)))\r\n// }","// https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/utils/getModuleParts.js\r\nimport path from 'path'\r\n\r\nexport default function(name) {\r\n  let parts = path.normalize(name).split(path.sep)\r\n  if (parts[0].charAt(0) === '@') {\r\n    // Scoped module (e.g. @scope/module). Merge the first two parts back together.\r\n    parts.splice(0, 2, `${parts[0]}/${parts[1]}`)\r\n  }\r\n\r\n  return parts\r\n}","// https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/utils/localRequire.js\r\nimport { dirname } from 'path'\r\nimport utils from '@parcel/utils'\r\nimport Resolve from 'resolve'\r\nimport installPackage from './installPackage'\r\nimport getModuleParts from './getModuleParts'\r\n\r\nconst { promisify } = utils\r\nconst _resolve = promisify(Resolve)\r\n\r\nconst cache = new Map();\r\n\r\nexport const localRequire = async (name, path, triedInstall = false) => {\r\n  const [resolved] = await resolve(name, path, triedInstall)\r\n  return require(resolved)\r\n}\r\n\r\nexport const resolve = async (name, path, triedInstall = false) => {\r\n  let basedir = dirname(path)\r\n  let key = basedir + ':' + name\r\n  let resolved = cache.get(key)\r\n  if (!resolved) {\r\n    try {\r\n      resolved = await _resolve(name, {basedir})\r\n    } catch (e) {\r\n      if (e.code === 'MODULE_NOT_FOUND' && !triedInstall) {\r\n        const packageName = getModuleParts(name)[0]\r\n        await installPackage(packageName, path)\r\n        return resolve(name, path, true)\r\n      }\r\n      throw e\r\n    }\r\n    cache.set(key, resolved)\r\n  }\r\n  return resolved\r\n}\r\n\r\nexport default async (packages, path = __filename) =>\r\n  typeof packages === 'string'\r\n    ? localRequire(packages, path)\r\n    : Promise.all(packages.map(pkg => localRequire(pkg, path)))\r\n","import { Observable } from 'rxjs'\r\nimport localRequire from '../utils/localRequire'\r\nimport { TargetRuntimeObservable } from '../types'\r\nimport { transformPathToUrl } from '../utils'\r\n\r\nlet pptr\r\n\r\nexport default (options): TargetRuntimeObservable =>\r\n  Observable.create(observer => {\r\n    if (!pptr) pptr = localRequire('puppeteer', __filename)\r\n\r\n    let closed\r\n    const browser = pptr.then(pptr => pptr.launch({ devtools: true }))\r\n\r\n    browser.then(browser => {\r\n      if (closed) return\r\n      observer.next(Observable.create(observer => {\r\n        const page = browser.newPage()\r\n        page.then(page => {\r\n          observer.next({\r\n            loadFile: file => page.goto(transformPathToUrl('/epk/empty.html', options.port)).then(() => page.evaluate()),\r\n            exec: str => page.evaluate(str)\r\n          })\r\n        })\r\n        return () => page.then(page => page.close())\r\n      }))\r\n    })\r\n\r\n    return () => {\r\n      closed = true\r\n      browser.then(browser => browser.close())\r\n    }\r\n  })\r\n","import { TARGET, TargetRuntimeProviderOptions, TargetRuntimeProvider, TargetRuntimeObservable } from '../types'\r\nimport ChromeRuntime from '../targets/chrome'\r\nimport { map } from 'rxjs/operators'\r\n// import FirefoxRuntime from '../targets/firefox'\r\n\r\nconst targetRuntimes = new Map([\r\n  [TARGET.CHROME, ChromeRuntime],\r\n  // [TARGET.FIREFOX, FirefoxRuntime]\r\n])\r\n\r\nexport default\r\n  (target: TARGET, options: TargetRuntimeProviderOptions): TargetRuntimeProvider => {\r\n    const targetRuntimeProvider = targetRuntimes.get(target)(options)\r\n    targetRuntimeProvider.target = target\r\n    targetRuntimeProvider.options = options\r\n    // @ts-ignore\r\n    return targetRuntimeProvider\r\n            // @ts-ignore\r\n            |> map((targetRuntime: TargetRuntimeObservable) => {\r\n              targetRuntime.target = target\r\n              targetRuntime.options = options\r\n              return targetRuntime\r\n            })\r\n  }\r\n","\r\nexport const stringify = (strings, ...vals) =>\r\n  strings.reduce((finalStr, str, i) =>\r\n    `${finalStr}${str}${vals.length > i ? JSON.stringify(vals[i]) : ''}`, '')\r\n\r\nexport const prettifyTime = time =>\r\n  time < 1000\r\n    ? `${time.toFixed()}ms`\r\n    : `${(time / 1000).toFixed(2)}s`\r\n\r\nexport const isBrowser = typeof window !== 'undefined'\r\n","import { switchMap, map, mergeMap, take, delay } from 'rxjs/operators'\r\nimport { TargetRuntime, BUNDLER_TARGET, NODE_GLOBAL, MESSAGE_TYPE } from '../types'\r\nimport { stringify } from './utils'\r\n\r\nconst browserStr = data => stringify`\r\nnew Promise(resolve => {\r\n  window.addEventListener('message', ({ data }) =>\r\n    data.type === ${MESSAGE_TYPE.GET_TESTS_RESPONSE}\r\n    && resolve(data))\r\n  window.postMessage(${data}, '*')\r\n})\r\n`\r\n\r\nconst nodeStr = data => stringify`\r\nnew Promise(resolve => {\r\n  global[${NODE_GLOBAL}].addListener('message', ({ data }) =>\r\n    data.type === ${MESSAGE_TYPE.GET_TESTS_RESPONSE}\r\n    && resolve(data))\r\n  global[${NODE_GLOBAL}].emit('message', ${data})\r\n})\r\n`\r\n\r\nconst analyzeStr = (options, data) =>\r\n  options.target === BUNDLER_TARGET.BROWSER\r\n    ? browserStr(data)\r\n    : nodeStr(data)\r\n\r\nexport default\r\n  (targetRuntimeProvider, options) =>\r\n    switchMap(file =>\r\n      // @ts-ignore\r\n      targetRuntimeProvider\r\n      // @ts-ignore\r\n      |> mergeMap(async (targetRuntime: TargetRuntime) => {\r\n        await targetRuntime.loadFile(file)\r\n        // console.log(analyzeStr(options, { type: MESSAGE_TYPE.GET_TESTS }))\r\n        const tests = await targetRuntime.exec(analyzeStr(options, { type: MESSAGE_TYPE.GET_TESTS }))\r\n        return {\r\n          ...file\r\n        }\r\n      })\r\n      // @ts-ignore\r\n      |> take(1))\r\n","import { switchMap, mergeMap, take } from 'rxjs/operators'\r\n\r\nexport default\r\n  (targetRuntimeProvider, options) =>\r\n    switchMap(file =>\r\n      // @ts-ignore\r\n      targetRuntimeProvider\r\n      // @ts-ignore\r\n      |> mergeMap(async targetRuntime => {\r\n        return file\r\n      })\r\n      // @ts-ignore\r\n      |> take(1))\r\n","import path from 'path'\r\nimport { Observable } from 'rxjs'\r\nimport { switchMap } from 'rxjs/operators'\r\nimport localRequire from '../utils/localRequire'\r\n\r\nlet imports\r\n\r\nexport default options =>\r\n  switchMap(val => \r\n    Observable.create(observer => {\r\n      const { port } = options\r\n      if (!imports) imports = localRequire(['koa', 'koa-static', 'koa-mount'], __filename)\r\n\r\n      const app = imports.then(([Koa, serve, mount]) => {\r\n        const app = new Koa()\r\n        const epk = new Koa()\r\n        epk.use(serve(path.resolve(__dirname, '..', 'dist')))\r\n        const tests = new Koa()\r\n        tests.use(serve(path.resolve(process.cwd(), '.epk', 'dist')))\r\n        \r\n        app.use(mount('/epk', epk))\r\n        app.use(mount('/tests', tests))\r\n        \r\n        app.listen(port)\r\n        observer.next(val)\r\n        return app\r\n      })\r\n\r\n      return _ => app.then(app => app.close())\r\n    })\r\n  )","import { merge, ConnectableObservable, from, of, zip, Observable } from 'rxjs'\r\nimport { map, filter, mergeMap, switchMap, publish, tap, delayWhen } from 'rxjs/operators'\r\n\r\nimport { Options, Context, BUNDLER_TARGET, TARGET, File, TargetRuntimeProvider as TargetRuntimeProviderType } from '../types'\r\nimport Bundler from './bundler'\r\nimport { transformPathToTestUrl } from '../utils/index'\r\nimport TargetRuntimeProvider from './target-runtime-provider'\r\nimport analyze from './analyze'\r\nimport test from './test'\r\nimport { isBrowser } from './utils'\r\nimport server from './server'\r\nimport localRequire from '../utils/localRequire'\r\n\r\nlet getPort\r\n\r\nexport default (_options: Options) => {\r\n  // remove undefined values\r\n  Object.keys(_options).forEach(key => _options[key] === undefined && delete _options[key])\r\n\r\n  const target = _options.target || BUNDLER_TARGET.BROWSER\r\n  const options = {\r\n    browsers: ['chrome'],\r\n    target,\r\n    outDir: `.epk/dist/${target}`,\r\n    watch: true,\r\n    cache: true,\r\n    cacheDir: `.epk/cache/${target}`,\r\n    port: undefined,\r\n    minify: false,\r\n    scopeHoist: false,\r\n    logLevel: 0, // 3 = log everything, 2 = log warnings & errors, 1 = log errors\r\n    sourceMaps: true, // Enable or disable sourcemaps, defaults to enabled (minified builds currently always create sourcemaps)\r\n    detailedReport: false,\r\n    // apply options\r\n    ..._options\r\n  }\r\n  let _port\r\n  if (!isBrowser && options.target === BUNDLER_TARGET.BROWSER) {\r\n    _port = localRequire('get-port', __filename)\r\n              .then(getPort => getPort({ port: 10485 }))\r\n              .then(port => (options.port = port))\r\n  }\r\n  \r\n  // @ts-ignore\r\n  return of([\r\n            Bundler(options),\r\n            (!isBrowser && options.target === BUNDLER_TARGET.BROWSER\r\n              ? options.browsers as unknown as TARGET[]\r\n              : [options.target] as unknown as TARGET[])\r\n                .map(target => TargetRuntimeProvider(target, {}))\r\n          ])\r\n          // @ts-ignore\r\n          |> (!isBrowser && options.target === BUNDLER_TARGET.BROWSER ? delayWhen(() => from(_port)) : tap())\r\n          // @ts-ignore\r\n          |> (!isBrowser && options.target === BUNDLER_TARGET.BROWSER ? server(options) : tap())\r\n          // @ts-ignore\r\n          |> mergeMap(([ bundler, targetRuntimeProviders ]) =>\r\n            merge(\r\n              // @ts-ignore\r\n              bundler\r\n              // @ts-ignore\r\n              |> filter(({ name }) => name === 'buildStart'),\r\n              // @ts-ignore\r\n              bundler\r\n              // @ts-ignore\r\n              |> filter(({ name }) => name === 'buildStart')\r\n              // @ts-ignore\r\n              |> switchMap(({ entryFiles, buildStartTime }) =>\r\n                // @ts-ignore\r\n                bundler\r\n                // @ts-ignore\r\n                |> filter(({ name }) => name === 'bundled')\r\n                // @ts-ignore\r\n                |> map(bundleContainer => ({\r\n                  ...bundleContainer,\r\n                  entryFiles,\r\n                  buildStartTime\r\n                })))\r\n              // @ts-ignore\r\n              |> switchMap(({ bundle }) =>\r\n                // @ts-ignore\r\n                merge(...targetRuntimeProviders)\r\n                // @ts-ignore\r\n                |> mergeMap((targetRuntimeProvider: TargetRuntimeProviderType) =>\r\n                  // @ts-ignore\r\n                  from(\r\n                    (bundle.isEmpty\r\n                      ? Array.from(bundle.childBundles)\r\n                      : [bundle])\r\n                        .map(({ name: path }) => path))\r\n                        // @ts-ignore\r\n                        |> mergeMap(path => {\r\n                          // @ts-ignore\r\n                          const newContextObservable: ConnectableObservable<File> =\r\n                            // @ts-ignore\r\n                            of({\r\n                              target: targetRuntimeProvider.target,\r\n                              path,\r\n                              url: options.target === BUNDLER_TARGET.BROWSER && transformPathToTestUrl(path, options.port)\r\n                            })\r\n                            // @ts-ignore\r\n                            |> publish()\r\n\r\n                          // @ts-ignore\r\n                          const analyzedObservable: ConnectableObservable<File> =\r\n                            // @ts-ignore\r\n                            newContextObservable\r\n                            // @ts-ignore\r\n                            |> analyze(targetRuntimeProvider, options)\r\n                            // @ts-ignore\r\n                            |> publish()\r\n              \r\n                          // @ts-ignore\r\n                          const testedObservable: ConnectableObservable<File> =\r\n                            // @ts-ignore\r\n                            analyzedObservable\r\n                            // @ts-ignore\r\n                            |> test(targetRuntimeProvider, options)\r\n                            // @ts-ignore\r\n                            |> publish()\r\n              \r\n                          const testerObservable =\r\n                            merge(\r\n                              newContextObservable,\r\n                              analyzedObservable,\r\n                              testedObservable\r\n                            )\r\n              \r\n                          testedObservable.connect()\r\n                          analyzedObservable.connect()\r\n                          newContextObservable.connect()\r\n              \r\n                          return testerObservable\r\n                        })\r\n                ))\r\n            ))\r\n}\r\n\r\n          // // @ts-ignore\r\n          // return Bundler(options)\r\n          // // @ts-ignore\r\n          // |> filter(({ name }) => name === 'buildStart')\r\n          //   // @ts-ignore\r\n          // |> switchMap(({ bundler, entryFiles, buildStartTime }) => {\r\n          //   // @ts-ignore\r\n          //   const newContextObservable: ConnectableObservable<Context> =\r\n          //     bundler\r\n          //     // @ts-ignore\r\n          //     |> filter(({ name }) => name === 'bundled')\r\n          //     // @ts-ignore\r\n          //     |> map(({ bundle, ...rest }) => ({\r\n          //       bundle,\r\n          //       ...rest,\r\n          //       files:\r\n          //         (bundle.isEmpty\r\n          //           ? Array.from(bundle.childBundles)\r\n          //           : [bundle])\r\n          //             .map(({ name: path }) => ({\r\n          //               path,\r\n          //               url: options.target === BUNDLER_TARGET.BROWSER && transformPathToUrl(path)\r\n          //             })),\r\n          //       entryFiles,\r\n          //       buildStartTime\r\n          //     }))\r\n          //     // @ts-ignore\r\n          //     |> publish()\r\n\r\n          //   // @ts-ignore\r\n          //   const analyzedObservable: ConnectableObservable<Context> =\r\n          //     // @ts-ignore\r\n          //     newContextObservable\r\n          //     // @ts-ignore\r\n          //     |> analyze(options)\r\n          //     // @ts-ignore\r\n          //     |> publish()\r\n\r\n          //   // @ts-ignore\r\n          //   const testedObservable: ConnectableObservable<Context> =\r\n          //     // @ts-ignore\r\n          //     analyzedObservable\r\n          //     // @ts-ignore\r\n          //     |> test(options)\r\n          //     // @ts-ignore\r\n          //     |> publish()\r\n\r\n          //   const testerObservable =\r\n          //     merge(\r\n          //       newContextObservable,\r\n          //       analyzedObservable,\r\n          //       testedObservable\r\n          //     )\r\n\r\n          //   testedObservable.connect()\r\n          //   analyzedObservable.connect()\r\n          //   newContextObservable.connect()\r\n\r\n          //   return testerObservable\r\n          // })\r\n","import { isBrowser } from '../core/utils'\r\n\r\nexport const errors = []\r\n\r\nif (isBrowser) {\r\n  window.addEventListener('error', err => errors.push(err))\r\n} else {\r\n  process.on('uncaughtException', err => errors.push(err))\r\n}\r\n\r\n","import { EventEmitter } from 'events'\r\nimport { stringify } from 'flatted/cjs'\r\nimport { isBrowser } from '../core/utils'\r\nimport { File, Test, TestResult, MESSAGE_TYPE, NODE_GLOBAL } from '../types'\r\nimport { errors } from './error'\r\n\r\nexport const tests = new Map<string, Function>()\r\n\r\nexport const todo = _ => {}\r\nexport const pass = _ => {}\r\nexport const fail = _ => {}\r\n\r\nexport const test = (desc, func) => {\r\n  if (typeof desc !== 'string') throw new Error('desc has to be a string')\r\n  if (typeof func !== 'function') throw new Error('func has to be a function')\r\n  if (tests.has(desc)) throw new Error(`Found duplicate test description: ${desc}`)\r\n  tests.set(desc, func)\r\n}\r\n\r\nconst initiated = new Promise(resolve => setTimeout(resolve, 0))\r\n\r\nconst emit = (type, data) =>\r\n  isBrowser\r\n    ? window.parent.postMessage({ type, errors, data }, '*')\r\n    : global[NODE_GLOBAL].emit('message', { type, errors, data })\r\n\r\nconst getTests = () =>\r\n  emit(\r\n    MESSAGE_TYPE.GET_TESTS_RESPONSE,\r\n    Array\r\n      .from(tests)\r\n      .map(([desc, func]) => [\r\n        desc,\r\n        func.toString()\r\n      ])\r\n  )\r\n\r\nconst runTest = async description => {\r\n  // todo: replace by \"isBrowser ? window : require('perf_hooks')\"\r\n  const { performance } = window\r\n  let timeStart, timeEnd, data, error\r\n\r\n  try {\r\n    timeStart = performance.now()\r\n    data = stringify(await tests.get(description)())\r\n    timeEnd = performance.now()\r\n  } catch (err) {\r\n    error = err\r\n  }\r\n\r\n  emit(\r\n    MESSAGE_TYPE.RUN_TEST_RESPONSE,\r\n    {\r\n      timeStart,\r\n      timeEnd,\r\n      data,\r\n      error: error && {\r\n        name: error.name,\r\n        message: error.message\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nconst newEvent = ({ data: { type, description } }) =>\r\n    type === MESSAGE_TYPE.GET_TESTS ? getTests()\r\n  : type === MESSAGE_TYPE.RUN_TEST && runTest(description)\r\n\r\nif (isBrowser) {\r\n  window.addEventListener('message', newEvent)\r\n} else {\r\n  const events = global[NODE_GLOBAL] = new EventEmitter()\r\n  events.addListener('message', newEvent)\r\n}\r\n\r\n// const addEventListener =\r\n//   isBrowser\r\n//     ? window.addEventListener\r\n//     : global[NODE_GLOBAL].addListener\r\n\r\n// addEventListener('message', ({ data: { type, description } }) =>\r\n//     type === MESSAGE_TYPE.GET_TESTS ? getTests()\r\n//   : type === MESSAGE_TYPE.RUN_TEST && runTest(description))\r\n\r\n","import PowerAssert from 'power-assert'\r\n\r\nexport const assert = PowerAssert.customize({\r\n\r\n})","// export * from './test'\r\n// export * from './assert'\r\n\r\n// parceljs experimental hoisting fix\r\nimport { test } from './test'\r\nimport { assert } from './assert'\r\n\r\nexport {\r\n  test,\r\n  assert\r\n}","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","export * from './core/index'\r\nexport * from './test/index'\r\n\r\nif (!module.parent) import('./cli/index').then(() => {})\r\n"]}