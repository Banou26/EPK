{"version":3,"sources":["types.ts","core/bundler.ts","utils/index.ts","cli/logger.ts","utils/installPackage.ts","utils/getModuleParts.ts","utils/localRequire.ts","targets/chrome.ts","core/target-runtime-provider.ts","core/utils.ts","core/analyze.ts","core/test.ts","core/server.ts","core/index.ts","test/error.ts","test/test.ts","test/assert.ts","test/index.ts","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","index.ts"],"names":["NODE_GLOBAL","TARGET","BROWSER_TARGET","CHROME_EXTENSION","CHROME_CANARY","CHROME_CANARY_EXTENSION","FIREFOX","FIREFOX_EXTENSION","FIREFOX_NIGHTLY","FIREFOX_NIGHTLY_EXTENSION","BUNDLER_TARGET","targetToBundlerTarget","target","BROWSER","NODE","ELECTRON","MESSAGE_TYPE","FileType","options","Observable","create","observer","bundler","ParcelBundler","entryFiles","addAssetType","Path","resolve","__dirname","on","bundle","next","name","buildEndTime","Date","now","buildStartTime","_","error","stop","refCount","prettifyPath","_path","path","relative","process","cwd","getEmptyPageUrl","port","transformPathToEpkUrl","transformPathToTestUrl","replace","prettyError","err","color","undefined","message","fileName","loc","line","column","stack","codeFrame","highlightedCodeFrame","slice","indexOf","supportsEmoji","platform","env","TERM","defaultEmojis","progress","success","warning","countLines","str","split","reduce","p","stdout","columns","Math","ceil","length","pad","text","align","repeat","stringWidth","stripAnsi","countBreaks","Logger","logLevel","Chalk","supportsColor","emojis","chalk","constructor","enabled","isTest","NODE_ENV","lines","spinner","logFile","writeRaw","stopSpinner","write","persistent","verbose","_log","currDate","toLocaleTimeString","fs","createWriteStream","join","toISOString","log","bold","warn","_writeError","yellow","red","green","formatError","emoji","_color","clear","readline","clearLine","moveCursor","cursorTo","styledMessage","gray","stream","start","console","table","colWidths","row","i","item","max","map","padding","logger","handleMessage","method","args","promisify","utils","_resolve","YARN_LOCK","install","modules","filepath","installPeers","saveDev","packageManager","packageLocation","config","dirname","determinePackageManager","commandToUse","push","writeFile","Error","Promise","all","m","installPeerDependencies","basedir","resolved","pkg","load","peers","peerDependencies","peer","Object","assign","yarnLockFile","hasYarn","checkForYarnCommand","queue","PromiseQueue","maxConcurrent","retry","WorkerFarm","isWorker","callMaster","location","__filename","add","run","parts","normalize","sep","charAt","splice","Resolve","cache","Map","localRequire","triedInstall","require","key","get","e","code","packageName","set","packages","includes","pptr","closed","browser","then","launch","devtools","page","newPage","emptyHTMLFilePath","url","loadFile","file","goto","addScriptTag","exec","evaluate","close","targetRuntimes","CHROME","ChromeRuntime","targetRuntimeProvider","targetRuntime","stringify","strings","vals","finalStr","JSON","prettifyTime","time","toFixed","isBrowser","window","browserStr","data","GET_TESTS_RESPONSE","nodeStr","analyzeStr","tests","errors","type","GET_TESTS","ANALYZE","RUN_TEST_RESPONSE","testStr","test","result","RUN_TEST","description","TEST","imports","val","app","Koa","serve","mount","epk","use","listen","_options","keys","forEach","browsers","outDir","watch","cacheDir","minify","scopeHoist","sourceMaps","detailedReport","throwErrors","hmr","_port","getPort","targetRuntimeProviders","bundleContainer","isEmpty","Array","from","childBundles","childBundle","newContextObservable","entryAsset","analyzedObservable","testedObservable","testerObservable","connect","addEventListener","todo","pass","fail","desc","func","has","initiated","setTimeout","emit","parent","postMessage","global","getTests","body","toString","runTest","performance","timeStart","timeEnd","value","stackFrame","ErrorStackParser","parse","newEvent","events","EventEmitter","addListener","assert","PowerAssert","customize","bundleURL","getBundleURLCached","getBundleURL","matches","match","getBaseURL","exports","loadBundlesLazy","bundles","isArray","id","LazyPromise","reject","loadBundles","loadBundle","bundleLoaders","registerBundleLoader","loader","module","register","substring","lastIndexOf","toLowerCase","bundleLoader","catch","executor","promise","prototype","onSuccess","onError"],"mappings":"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","file":"index.map","sourceRoot":"..\\src","sourcesContent":["import { Observable } from 'rxjs'\r\n\r\nexport const NODE_GLOBAL = '__EPK_NODE_GLOBAL'\r\n\r\n/**\r\n * List of different runtimes (available) to test on\r\n */\r\nexport enum TARGET {\r\n  NODE = 'node',\r\n  ELECTRON = 'electron',\r\n  DENO = 'deno',\r\n  CHROME = 'chrome',\r\n  CHROME_EXTENSION = 'chromeExtension',\r\n  CHROME_CANARY = 'chromeCanary',\r\n  CHROME_CANARY_EXTENSION = 'chromeCanaryExtension',\r\n  FIREFOX = 'firefox',\r\n  FIREFOX_EXTENSION = 'firefoxExtension',\r\n  FIREFOX_NIGHTLY = 'firefoxNightly',\r\n  FIREFOX_NIGHTLY_EXTENSION = 'firefoxNightlyExtension'\r\n}\r\n\r\nexport enum BROWSER_TARGET {\r\n  CHROME = TARGET.CHROME_EXTENSION,\r\n  CHROME_EXTENSION = TARGET.CHROME_CANARY,\r\n  CHROME_CANARY = TARGET.CHROME_CANARY_EXTENSION,\r\n  CHROME_CANARY_EXTENSION = TARGET.FIREFOX,\r\n  FIREFOX = TARGET.FIREFOX_EXTENSION,\r\n  FIREFOX_EXTENSION = TARGET.FIREFOX_NIGHTLY,\r\n  FIREFOX_NIGHTLY = TARGET.FIREFOX_NIGHTLY_EXTENSION,\r\n  FIREFOX_NIGHTLY_EXTENSION = TARGET.FIREFOX_NIGHTLY_EXTENSION\r\n}\r\n\r\nexport enum BUNDLER_TARGET {\r\n  NODE = 'node',\r\n  BROWSER = 'browser',\r\n  ELECTRON = 'electron'\r\n}\r\n\r\nexport const targetToBundlerTarget =\r\n  (target: TARGET): BUNDLER_TARGET =>\r\n    target in BROWSER_TARGET ? BUNDLER_TARGET.BROWSER\r\n    : target as unknown as BUNDLER_TARGET === BUNDLER_TARGET.NODE ? BUNDLER_TARGET.NODE\r\n    : target as unknown as BUNDLER_TARGET === BUNDLER_TARGET.ELECTRON && BUNDLER_TARGET.NODE\r\n\r\nexport interface Bundler extends Observable<any> {}\r\n\r\nexport interface TargetRuntime extends Observable<any> {\r\n  addListener: Function\r\n  removeListener: Function\r\n  loadFile: Function\r\n  exec: Function\r\n}\r\nexport interface TargetRuntimeObservable extends Observable<TargetRuntime> {\r\n  target: TARGET\r\n  options: TargetRuntimeOptions\r\n}\r\n\r\nexport interface TargetRuntimeOptions {}\r\nexport interface TargetRuntimeProvider extends Observable<TargetRuntimeObservable> {\r\n  target: TARGET\r\n  options: TargetRuntimeOptions\r\n}\r\nexport interface TargetRuntimeProviderOptions {}\r\n\r\nexport enum MESSAGE_TYPE {\r\n  GET_TESTS = '__EPK_GET_TESTS',\r\n  RUN_TESTS = '__EPK_RUN_TESTS',\r\n  RUN_TEST = '__EPK_RUN_TEST',\r\n  GET_TESTS_RESPONSE = '__EPK_GET_TESTS_RESPONSE',\r\n  RUN_TESTS_RESPONSE = '__EPK_RUN_TESTS_RESPONSE',\r\n  RUN_TEST_RESPONSE = '__EPK_RUN_TEST_RESPONSE'\r\n}\r\n\r\nexport interface Message {\r\n  type: MESSAGE_TYPE,\r\n  payload: any\r\n}\r\n\r\nexport interface Options {\r\n  browsers?: BROWSER_TARGET[]\r\n  entryFiles: string[]\r\n  target: BUNDLER_TARGET\r\n  watch?: Boolean\r\n  outDir?: string\r\n  cache?: Boolean\r\n  cacheDir?: string\r\n  minify?: Boolean\r\n  scopeHoist?: Boolean\r\n  /**\r\n   * 0 = log nothing\r\n   * 1 = log errors\r\n   * 2 = log warnings & errors\r\n   * 3 = log everything\r\n   */\r\n  logLevel?: 0 | 1 | 2 | 3\r\n  sourceMaps?: Boolean\r\n  detailedReport?: Boolean\r\n}\r\n\r\nexport interface Target {\r\n  type: TARGET\r\n  test: Function\r\n  prepare: Function\r\n}\r\n\r\n/**\r\n * Context object of the testing pipeline that contains all the information needed for each testing steps\r\n */\r\nexport interface Context {\r\n  /**\r\n   * Options passed to epk\r\n   */\r\n  options: Options\r\n  /**\r\n   * Files found by the paths/globs\r\n   */\r\n  files: File[]\r\n  /**\r\n   * entryFiles from Parcel\r\n   */\r\n  entryFiles: string[]\r\n  /**\r\n   * Array of targets in which the tests will be executed\r\n   */\r\n  targets: TARGET[]\r\n  name: string\r\n  bundle: any\r\n  buildStartTime: number\r\n  buildEndTime: number\r\n  analyzeEndTime?: number\r\n  analyzeStartTime?: number\r\n  testStartTime?: number\r\n  testEndTime?: number\r\n}\r\n\r\nexport enum FileType  {\r\n  ANALYZE = 'ANALYZE',\r\n  TEST = 'TEST',\r\n  DONE = 'DONE'\r\n}\r\n\r\n/**\r\n * Representation of a file\r\n */\r\nexport interface File {\r\n  type?: FileType\r\n\r\n  target: TARGET\r\n  /**\r\n   * Path of the source test file\r\n   */\r\n  name: string\r\n  /**\r\n   * Path of the bundled test file\r\n   */\r\n  path: string\r\n  /**\r\n   * Url by which browsers can access the test file\r\n   */\r\n  url?: string\r\n  /**\r\n   * Test ran\r\n   */\r\n  test?: Test\r\n  /**\r\n   * Array of analyzed tests\r\n   */\r\n  tests?: Test[]\r\n  /**\r\n   * Array of errors\r\n   */\r\n  errors?: string[]\r\n}\r\n\r\n/**\r\n * Representation of a test\r\n */\r\nexport interface Test {\r\n  /**\r\n   * Description of the test\r\n   */\r\n  description: string\r\n  /**\r\n   * Body of the test (Function stringified)\r\n   */\r\n  body: String\r\n  /**\r\n   * Type of test\r\n   */\r\n  // type?: Function | Promise<any> | Observable<any>\r\n  type?: string\r\n  /**\r\n   * Value returned by the test\r\n   */\r\n  value?: any\r\n  /**\r\n   * Error thrown by the test\r\n   */\r\n  errors?: Error[]\r\n\r\n  timeStart?: Number\r\n\r\n  timeEnd?: Number\r\n  \r\n  /**\r\n   * Target\r\n   */\r\n  target?: TARGET\r\n  /**\r\n   * Code coverage of the test\r\n   */\r\n  coverage?: any\r\n}\r\n","import Path from 'path'\r\nimport ParcelBundler from 'parcel-bundler'\r\nimport { Observable } from 'rxjs'\r\nimport { Bundler } from '../types'\r\nimport { publish } from 'rxjs/operators'\r\n\r\nexport default (options): Bundler =>\r\n  // @ts-ignore\r\n  (Observable.create(observer => {\r\n    const bundler = new ParcelBundler(options.entryFiles, options)\r\n    bundler.addAssetType('js', Path.resolve(__dirname, '../src/core/js-asset.ts'))\r\n    bundler.addAssetType('ts', Path.resolve(__dirname, '../src/core/ts-asset.ts'))\r\n    bundler.on('bundled', bundle =>\r\n      observer.next({ options, name: 'bundled', bundle, buildEndTime: Date.now() }))\r\n    bundler.on('buildStart', entryFiles  =>\r\n      observer.next({ options, name: 'buildStart', entryFiles , buildStartTime: Date.now() }))\r\n    bundler.on('buildEnd', _ =>\r\n      observer.next({ name: 'buildEnd' }))\r\n    bundler.on('buildError', error =>\r\n      observer.next({ name:'error', error }))\r\n    \r\n    bundler.bundle()\r\n    return _ => bundler.stop()\r\n  })\r\n  // @ts-ignore\r\n  |> publish())\r\n  // @ts-ignore\r\n  .refCount()","import path from 'path'\r\n\r\nexport const prettifyPath = _path => path.relative(process.cwd(), _path)\r\n\r\nexport const getEmptyPageUrl = port =>\r\n  transformPathToEpkUrl(path.resolve(__dirname, '..', 'dist', 'empty.html'), port)\r\n\r\n\r\nexport const transformPathToTestUrl = (_path, port) =>\r\n  `${port ? `http://localhost:${port}` : ''}${_path.replace(`${path.resolve(process.cwd(), '.epk', 'dist')}\\\\`, '/tests/').replace('\\\\', '/')}`\r\n  \r\nexport const transformPathToEpkUrl = (_path, port) =>\r\n  `${port ? `http://localhost:${port}` : ''}${_path.replace(`${path.resolve(__dirname, '..', 'dist')}\\\\`, '/epk/').replace('\\\\', '/')}`\r\n","// from https://github.com/parcel-bundler/parcel/tree/master/packages/core/logger/src\r\n\r\nimport Chalk from 'Chalk'\r\nimport readline from 'readline'\r\nimport { countBreaks } from 'grapheme-breaker'\r\nimport stripAnsi from 'strip-ansi'\r\nimport ora from 'ora'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\nconst prettyError = (err, { color } = { color: undefined }) => {\r\n  let message = typeof err === 'string' ? err : err.message\r\n  if (!message) message = 'Unknown error'\r\n\r\n  if (err.fileName) {\r\n    let fileName = err.fileName\r\n    if (err.loc) {\r\n      fileName += `:${err.loc.line}:${err.loc.column}`\r\n    }\r\n\r\n    message = `${fileName}: ${message}`\r\n  }\r\n\r\n  let stack\r\n  if (err.codeFrame) {\r\n    stack = (color && err.highlightedCodeFrame) || err.codeFrame\r\n  } else if (err.stack) {\r\n    stack = err.stack.slice(err.stack.indexOf('\\n') + 1)\r\n  }\r\n\r\n  return {\r\n    message, stack\r\n  }\r\n}\r\n\r\nconst supportsEmoji =\r\n  process.platform !== 'win32' || process.env.TERM === 'xterm-256color'\r\n\r\n// Fallback symbols for Windows from https://en.wikipedia.org/wiki/Code_page_437\r\nconst defaultEmojis = {\r\n  progress: supportsEmoji ? '⏳' : '∞',\r\n  success: supportsEmoji ? '✨' : '√',\r\n  error: supportsEmoji ? '🚨' : '×',\r\n  warning: supportsEmoji ? '⚠️' : '‼'\r\n}\r\n\r\nconst countLines = str =>\r\n  stripAnsi(str)\r\n    .split('\\n')\r\n    .reduce((p, line) =>\r\n      process.stdout.columns\r\n        ? p + Math.ceil((line.length || 1) / process.stdout.columns)\r\n        : p + 1, 0)\r\n\r\n// Pad a string with spaces on either side\r\nconst pad = (text, length, align = 'left') => {\r\n  const pad = ' '.repeat(length - stringWidth(text))\r\n  if (align === 'right') return `${pad}${text}`\r\n  return `${text}${pad}`\r\n}\r\n\r\n// Count visible characters in a string\r\nconst stringWidth = str =>\r\n  // @ts-ignore\r\n  `${str}`\r\n  // @ts-ignore\r\n  |> stripAnsi\r\n  // @ts-ignore\r\n  |> countBreaks\r\n\r\nconst Logger = ({\r\n  logLevel = 3,\r\n  color = Chalk.supportsColor,\r\n  emojis = defaultEmojis,\r\n  chalk = new Chalk.constructor({ enabled: color }),\r\n  isTest = process.env.NODE_ENV === 'test'\r\n} = {}) => {\r\n  let lines = 0\r\n  let spinner\r\n  let logFile\r\n\r\n  const writeRaw = str => {\r\n    stopSpinner()\r\n    lines += countLines(str) - 1\r\n    process.stdout.write(str)\r\n  }\r\n\r\n  const write = (message, persistent = false) => {\r\n    if (logLevel > 3) {\r\n      return verbose(message)\r\n    }\r\n\r\n    if (!persistent) {\r\n      lines += countLines(message)\r\n    }\r\n\r\n    stopSpinner()\r\n    _log(message)\r\n  }\r\n\r\n  const verbose = str => {\r\n    if (logLevel < 4) return\r\n    let currDate = new Date()\r\n    str = `[${currDate.toLocaleTimeString()}]: ${str}`\r\n    if (logLevel > 4) {\r\n      if (!logFile) {\r\n        logFile = fs.createWriteStream(\r\n          path.join(process.cwd(), `parcel-debug-${currDate.toISOString()}.log`)\r\n        )\r\n      }\r\n      logFile.write(stripAnsi(str) + '\\n')\r\n    }\r\n    _log(str)\r\n  }\r\n\r\n  const log = str =>\r\n    logLevel >= 3 &&\r\n    write(str)\r\n\r\n  const persistent = str =>\r\n    logLevel >= 3 &&\r\n    write(chalk.bold(str), true)\r\n\r\n  const warn = err =>\r\n    logLevel >= 2 &&\r\n    _writeError(err, emojis.warning, chalk.yellow)\r\n\r\n  const error = err =>\r\n    logLevel >= 1 &&\r\n    _writeError(err, emojis.error, chalk.red.bold)\r\n\r\n  const success = str =>\r\n    log(`${emojis.success}  ${chalk.green.bold(str)}`)\r\n\r\n  const formatError = (err, options) => prettyError(err, options)\r\n\r\n  const _writeError = (err, emoji, _color) => {\r\n    const { message, stack } = formatError(err, { color })\r\n    write(_color(`${emoji}  ${message}`))\r\n    if (stack) write(stack)\r\n  }\r\n\r\n  const clear = () => {\r\n    if (!color || isTest || logLevel > 3) return\r\n\r\n    while (lines > 0) {\r\n      readline.clearLine(process.stdout, 0)\r\n      readline.moveCursor(process.stdout, 0, -1)\r\n      lines--\r\n    }\r\n\r\n    readline.cursorTo(process.stdout, 0)\r\n    stopSpinner()\r\n  }\r\n\r\n  const progress = str => {\r\n    if (logLevel < 3) return\r\n    else if (logLevel > 3) return verbose(str)\r\n\r\n    const styledMessage = chalk.gray.bold(str)\r\n    if (!spinner) {\r\n      spinner = ora({\r\n        text: styledMessage,\r\n        stream: process.stdout,\r\n        enabled: isTest ? false : undefined // fall back to ora default unless we need to explicitly disable it.\r\n      }).start()\r\n    } else spinner.text = styledMessage\r\n  }\r\n\r\n  const stopSpinner = () => {\r\n    if (spinner) {\r\n      spinner.stop()\r\n      spinner = null\r\n    }\r\n  }\r\n\r\n  const _log = str => console.log(str)\r\n\r\n  const table = (columns, table) => {\r\n    // Measure column widths\r\n    let colWidths = []\r\n    for (let row of table) {\r\n      let i = 0\r\n      for (let item of row) {\r\n        colWidths[i] = Math.max(colWidths[i] || 0, stringWidth(item))\r\n        i++\r\n      }\r\n    }\r\n\r\n    // Render rows\r\n    for (let row of table) {\r\n      log(\r\n        row.map((item, i) => {\r\n          // Add padding between columns unless the alignment is the opposite to the\r\n          // next column and pad to the column width.\r\n          let padding =\r\n            !columns[i + 1] || columns[i + 1].align === columns[i].align ? 4 : 0\r\n          return pad(item, colWidths[i] + padding, columns[i].align)\r\n        })\r\n        .join('')\r\n      )\r\n    }\r\n  }\r\n\r\n  const logger = {\r\n    writeRaw,\r\n    write,\r\n    verbose,\r\n    log,\r\n    persistent,\r\n    warn,\r\n    error,\r\n    success,\r\n    formatError,\r\n    _writeError,\r\n    clear,\r\n    progress,\r\n    stopSpinner,\r\n    _log,\r\n    table,\r\n    handleMessage: undefined,\r\n  }\r\n\r\n  const handleMessage = ({ method, args }) => logger[method](...args)\r\n  logger.handleMessage = handleMessage\r\n\r\n  return logger\r\n}\r\n\r\nexport default Logger()\r\n","// https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/utils/installPackage.js\r\n\r\nimport config from 'parcel-bundler/src/utils/config'\r\nimport commandExists from 'command-exists'\r\nimport logger from '../cli/logger'\r\nimport pipeSpawn from 'parcel-bundler/src/utils/pipeSpawn'\r\nimport PromiseQueue from 'parcel-bundler/src/utils/PromiseQueue'\r\nimport path from 'path'\r\nimport fs from '@parcel/fs'\r\nimport WorkerFarm from '@parcel/workers'\r\nimport utils from '@parcel/utils'\r\nimport _resolve from 'resolve'\r\n\r\nconst { promisify } = utils\r\nconst resolve  = promisify(_resolve)\r\n\r\nconst YARN_LOCK = 'yarn.lock'\r\n\r\nasync function install(modules, filepath, options = { installPeers: true, saveDev: true, packageManager: undefined }) {\r\n  let { installPeers = true, saveDev = true, packageManager } = options\r\n  if (typeof modules === 'string') {\r\n    modules = [modules]\r\n  }\r\n\r\n  logger.progress(`Installing ${modules.join(', ')}...`)\r\n\r\n  let packageLocation = await config.resolve(filepath, ['package.json'])\r\n  let cwd = packageLocation ? path.dirname(packageLocation) : process.cwd()\r\n\r\n  if (!packageManager) {\r\n    packageManager = await determinePackageManager(filepath)\r\n  }\r\n\r\n  let commandToUse = packageManager === 'npm' ? 'install' : 'add'\r\n  let args = [commandToUse, ...modules]\r\n  if (saveDev) {\r\n    args.push('-D')\r\n  } else if (packageManager === 'npm') {\r\n    args.push('--save')\r\n  }\r\n\r\n  // npm doesn't auto-create a package.json when installing,\r\n  // so create an empty one if needed.\r\n  if (packageManager === 'npm' && !packageLocation) {\r\n    await fs.writeFile(path.join(cwd, 'package.json'), '{}')\r\n  }\r\n\r\n  try {\r\n    await pipeSpawn(packageManager, args, {cwd})\r\n  } catch (err) {\r\n    throw new Error(`Failed to install ${modules.join(', ')}.`)\r\n  }\r\n\r\n  if (installPeers) {\r\n    await Promise.all(\r\n      modules.map(m => installPeerDependencies(filepath, m, options))\r\n    )\r\n  }\r\n}\r\n\r\nasync function installPeerDependencies(filepath, name, options) {\r\n  let basedir = path.dirname(filepath)\r\n  const [resolved] = await resolve(name, {basedir})\r\n  const pkg = await config.load(resolved, ['package.json'])\r\n  const peers = pkg.peerDependencies || {}\r\n\r\n  const modules = []\r\n  for (const peer in peers) {\r\n    modules.push(`${peer}@${peers[peer]}`)\r\n  }\r\n\r\n  if (modules.length) {\r\n    await install(\r\n      modules,\r\n      filepath,\r\n      Object.assign({}, options, {installPeers: false})\r\n    )\r\n  }\r\n}\r\n\r\nasync function determinePackageManager(filepath) {\r\n  const yarnLockFile = await config.resolve(filepath, [YARN_LOCK])\r\n\r\n  /**\r\n   * no yarn.lock => use npm\r\n   * yarn.lock => Use yarn, fallback to npm\r\n   */\r\n  if (!yarnLockFile) {\r\n    return 'npm'\r\n  }\r\n\r\n  const hasYarn = await checkForYarnCommand()\r\n  if (hasYarn) {\r\n    return 'yarn'\r\n  }\r\n\r\n  return 'npm'\r\n}\r\n\r\nlet hasYarn = null\r\nasync function checkForYarnCommand() {\r\n  if (hasYarn != null) {\r\n    return hasYarn\r\n  }\r\n\r\n  try {\r\n    hasYarn = await commandExists('yarn')\r\n  } catch (err) {\r\n    hasYarn = false\r\n  }\r\n\r\n  return hasYarn\r\n}\r\n\r\nlet queue = new PromiseQueue(install, {maxConcurrent: 1, retry: false})\r\nexport default async function(...args) {\r\n  // Ensure that this function is always called on the master process so we\r\n  // don't call multiple installs in parallel.\r\n  if (WorkerFarm.isWorker()) {\r\n    await WorkerFarm.callMaster({\r\n      location: __filename,\r\n      args\r\n    })\r\n    return\r\n  }\r\n\r\n  queue.add(...args)\r\n  return queue.run()\r\n}\r\n\r\n// export default async (...names) => {\r\n//   await _installPackage(names)\r\n//   return names.length === 1\r\n//           ? import(name)\r\n//           : Promise.all(names.map(name => import(name)))\r\n// }","// https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/utils/getModuleParts.js\r\nimport path from 'path'\r\n\r\nexport default function(name) {\r\n  let parts = path.normalize(name).split(path.sep)\r\n  if (parts[0].charAt(0) === '@') {\r\n    // Scoped module (e.g. @scope/module). Merge the first two parts back together.\r\n    parts.splice(0, 2, `${parts[0]}/${parts[1]}`)\r\n  }\r\n\r\n  return parts\r\n}","// https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/utils/localRequire.js\r\nimport Path, { dirname } from 'path'\r\nimport utils from '@parcel/utils'\r\nimport Resolve from 'resolve'\r\nimport installPackage from './installPackage'\r\nimport getModuleParts from './getModuleParts'\r\n\r\nconst { promisify } = utils\r\nconst _resolve = promisify(Resolve)\r\n\r\nconst cache = new Map();\r\n\r\nexport const localRequire = async (name, path, triedInstall = false) => {\r\n  const [resolved] = await resolve(name, path, triedInstall)\r\n  return require(resolved)\r\n}\r\n\r\nexport const resolve = async (name, path, triedInstall = false) => {\r\n  let basedir = dirname(path)\r\n  let key = basedir + ':' + name\r\n  let resolved = cache.get(key)\r\n  if (!resolved) {\r\n    try {\r\n      resolved = await _resolve(name, {basedir})\r\n    } catch (e) {\r\n      if (e.code === 'MODULE_NOT_FOUND' && !triedInstall) {\r\n        const packageName = getModuleParts(name)[0]\r\n        await installPackage(packageName, path)\r\n        return resolve(name, path, true)\r\n      }\r\n      throw e\r\n    }\r\n    cache.set(key, resolved)\r\n  }\r\n  return resolved\r\n}\r\n\r\nexport default async (packages, path = __dirname.includes('node_modules') ? Path.resolve(__dirname, '..', '..') : __dirname) =>\r\n  typeof packages === 'string'\r\n    ? localRequire(packages, path)\r\n    : Promise.all(packages.map(pkg => localRequire(pkg, path)))\r\n","import path from 'path'\r\nimport { Observable } from 'rxjs'\r\nimport localRequire from '../utils/localRequire'\r\nimport { TargetRuntimeObservable } from '../types'\r\nimport { transformPathToEpkUrl } from '../utils'\r\n\r\nlet pptr\r\n\r\nexport default (options): TargetRuntimeObservable =>\r\n  Observable.create(observer => {\r\n    if (!pptr) pptr = localRequire('puppeteer')\r\n\r\n    let closed\r\n    const browser = pptr.then(pptr => pptr.launch({ devtools: true }))\r\n\r\n    browser.then(browser => {\r\n      if (closed) return\r\n      observer.next(Observable.create(observer => {\r\n        const page = browser.newPage()\r\n        const emptyHTMLFilePath = path.resolve(__dirname, '..', 'dist', 'empty.html')\r\n        const url = transformPathToEpkUrl(emptyHTMLFilePath, options.port)\r\n        page.then(page => {\r\n          observer.next({\r\n            loadFile: file => page.goto(url).then(() => page.addScriptTag({ url: file.url })),\r\n            exec: str => page.evaluate(str)\r\n          })\r\n        })\r\n        return () => page.then(page => page.close())\r\n      }))\r\n    })\r\n\r\n    return () => {\r\n      closed = true\r\n      browser.then(browser => browser.close())\r\n    }\r\n  })\r\n","import { TARGET, TargetRuntimeProviderOptions, TargetRuntimeProvider, TargetRuntimeObservable } from '../types'\r\nimport ChromeRuntime from '../targets/chrome'\r\nimport { map } from 'rxjs/operators'\r\n// import FirefoxRuntime from '../targets/firefox'\r\n\r\nconst targetRuntimes = new Map([\r\n  [TARGET.CHROME, ChromeRuntime],\r\n  // [TARGET.FIREFOX, FirefoxRuntime]\r\n])\r\n\r\nexport default\r\n  (target: TARGET, options: TargetRuntimeProviderOptions): TargetRuntimeProvider => {\r\n    const targetRuntimeProvider = targetRuntimes.get(target)(options)\r\n    targetRuntimeProvider.target = target\r\n    targetRuntimeProvider.options = options\r\n    // @ts-ignore\r\n    return targetRuntimeProvider\r\n      // @ts-ignore\r\n      |> map((targetRuntime: TargetRuntimeObservable) => {\r\n        targetRuntime.target = target\r\n        targetRuntime.options = options\r\n        return targetRuntime\r\n      })\r\n  }\r\n","\r\nexport const stringify = (strings, ...vals) =>\r\n  strings.reduce((finalStr, str, i) =>\r\n    `${finalStr}${str}${vals.length > i ? JSON.stringify(vals[i]) : ''}`, '')\r\n\r\nexport const prettifyTime = time =>\r\n  time < 1000\r\n    ? `${time.toFixed()}ms`\r\n    : `${(time / 1000).toFixed(2)}s`\r\n\r\nexport const isBrowser = typeof window !== 'undefined'\r\n","import { switchMap, map, mergeMap, take, delay } from 'rxjs/operators'\r\nimport { TargetRuntime, BUNDLER_TARGET, NODE_GLOBAL, MESSAGE_TYPE, File, FileType } from '../types'\r\nimport { stringify } from './utils'\r\n\r\nconst browserStr = data => stringify`\r\nnew Promise(resolve => {\r\n  window.addEventListener('message', ({ data }) =>\r\n    data.type === ${MESSAGE_TYPE.GET_TESTS_RESPONSE}\r\n    && resolve(data))\r\n  window.postMessage(${data}, '*')\r\n})\r\n`\r\n\r\nconst nodeStr = data => stringify`\r\nnew Promise(resolve => {\r\n  global[${NODE_GLOBAL}].addListener('message', ({ data }) =>\r\n    data.type === ${MESSAGE_TYPE.GET_TESTS_RESPONSE}\r\n    && resolve(data))\r\n  global[${NODE_GLOBAL}].emit('message', ${data})\r\n})\r\n`\r\n\r\nconst analyzeStr = (options, data) =>\r\n  options.target === BUNDLER_TARGET.BROWSER\r\n    ? browserStr(data)\r\n    : nodeStr(data)\r\n\r\nexport default\r\n  (targetRuntimeProvider, options) =>\r\n    // @ts-ignore\r\n    switchMap((file: File) =>\r\n      // @ts-ignore\r\n      targetRuntimeProvider\r\n      // @ts-ignore\r\n      |> mergeMap(async (targetRuntime: TargetRuntime) => {\r\n        await targetRuntime.loadFile(file)\r\n        const { data: tests, errors } = await targetRuntime.exec(analyzeStr(options, { type: MESSAGE_TYPE.GET_TESTS }))\r\n        return {\r\n          type: FileType.ANALYZE,\r\n          ...file,\r\n          tests,\r\n          errors\r\n        }\r\n      })\r\n      // @ts-ignore\r\n      |> take(1))\r\n","import { switchMap, mergeMap, take } from 'rxjs/operators'\r\nimport { TargetRuntime, BUNDLER_TARGET, NODE_GLOBAL, MESSAGE_TYPE, FileType } from '../types'\r\nimport { stringify } from './utils'\r\nimport StackTrace from 'stacktrace-gps'\r\nimport SourceMap from 'source-map'\r\n\r\nconst browserStr = data => stringify`\r\nnew Promise(resolve => {\r\n  window.addEventListener('message', ({ data }) =>\r\n    data.type === ${MESSAGE_TYPE.RUN_TEST_RESPONSE}\r\n    && resolve(data))\r\n  window.postMessage(${data}, '*')\r\n})\r\n`\r\n\r\nconst nodeStr = data => stringify`\r\nnew Promise(resolve => {\r\n  global[${NODE_GLOBAL}].addListener('message', ({ data }) =>\r\n    data.type === ${MESSAGE_TYPE.RUN_TEST_RESPONSE}\r\n    && resolve(data))\r\n  global[${NODE_GLOBAL}].emit('message', ${data})\r\n})\r\n`\r\n\r\nconst testStr = (options, data) =>\r\n  options.target === BUNDLER_TARGET.BROWSER\r\n    ? browserStr(data)\r\n    : nodeStr(data)\r\n\r\nexport default\r\n  (file, targetRuntimeProvider, options) =>\r\n    mergeMap(test =>\r\n      // @ts-ignore\r\n      targetRuntimeProvider\r\n      // @ts-ignore\r\n      |> mergeMap(async (targetRuntime: TargetRuntime) => {\r\n        await targetRuntime.loadFile(file)\r\n        const { data: result } = await targetRuntime.exec(testStr(options, { type: MESSAGE_TYPE.RUN_TEST, description: test.description }))\r\n        \r\n        // var stack = ErrorStackParser.parse(new Error('boom'));\r\n        // console.assert(stack[0] == new StackFrame({fileName: 'http://localhost:9999/file.min.js', lineNumber: 1, columnNumber: 32}));\r\n\r\n        // var sourceCache = {'http://localhost:9999/file.min.js': 'var foo=function(){};function bar(){}var baz=eval(\"XXX\");\\n\r\n        // var sourceMap = '{\"version\":3,\"sources\":[\"./file.js\"],\"sourceRoot\":\"http://localhost:4000/\",\"names\":[\"foo\",\"bar\",\"baz\",\"eval\"],\"mappings\":\"AAAA,GAAIA,KAAM,YACV,SAASC,QACT,GAAIC,KAAMC,KAAK\",\"file\":\"file.min.js\"}';\r\n        // var sourceMapConsumerCache = {'http://localhost:4000/file.js.map': new SourceMap.SourceMapConsumer(sourceMap)};\r\n\r\n        // var gps = new StackTraceGPS({offline: true, sourceCache: sourceCache, sourceMapConsumerCache: sourceMapConsumerCache});\r\n        // gps.pinpoint(stack[0]).then(function(betterStackFrame) {\r\n        //     console.assert(betterStackFrame === new StackFrame({functionName: 'bar', fileName: 'http://localhost:9999/file.js', lineNumber: 2, columnNumber: 9}));\r\n        // });\r\n        \r\n        return {\r\n          ...file,\r\n          type: FileType.TEST,\r\n          test: {\r\n            ...test,\r\n            ...result\r\n          }\r\n        }\r\n      })\r\n      // @ts-ignore\r\n      |> take(1))\r\n","import path from 'path'\r\nimport { Observable } from 'rxjs'\r\nimport { switchMap } from 'rxjs/operators'\r\nimport localRequire from '../utils/localRequire'\r\n\r\nlet imports\r\n\r\nexport default options =>\r\n  switchMap(val =>\r\n    Observable.create(observer => {\r\n      const { port } = options\r\n      if (!imports) imports = localRequire(['koa', 'koa-static', 'koa-mount'])\r\n\r\n      const app = imports.then(([Koa, serve, mount]) => {\r\n        const app = new Koa()\r\n        const epk = new Koa()\r\n        epk.use(serve(path.resolve(__dirname, '..', 'dist')))\r\n        const tests = new Koa()\r\n        tests.use(serve(path.resolve(process.cwd(), '.epk', 'dist')))\r\n        \r\n        app.use(mount('/epk', epk))\r\n        app.use(mount('/tests', tests))\r\n        try {\r\n          return app.listen(port)\r\n        } finally {\r\n          observer.next(val)\r\n        }\r\n      })\r\n\r\n      return _ => app.then(app => app.close())\r\n    })\r\n  )\r\n","import { merge, ConnectableObservable, from, of } from 'rxjs'\r\nimport { map, filter, mergeMap, switchMap, publish, tap, delayWhen } from 'rxjs/operators'\r\n\r\nimport { Options, BUNDLER_TARGET, TARGET, File, TargetRuntimeProvider as TargetRuntimeProviderType } from '../types'\r\nimport Bundler from './bundler'\r\nimport { transformPathToTestUrl } from '../utils/index'\r\nimport TargetRuntimeProvider from './target-runtime-provider'\r\nimport analyze from './analyze'\r\nimport test from './test'\r\nimport { isBrowser } from './utils'\r\nimport server from './server'\r\nimport localRequire from '../utils/localRequire'\r\n\r\n\r\nexport default (_options: Options) => {\r\n  // remove undefined values\r\n  Object.keys(_options).forEach(key => _options[key] === undefined && delete _options[key])\r\n\r\n  const target = _options.target || BUNDLER_TARGET.BROWSER\r\n  const options = {\r\n    browsers: ['chrome'],\r\n    target,\r\n    outDir: `.epk/dist/${target}`,\r\n    watch: true,\r\n    cache: true,\r\n    cacheDir: `.epk/cache/${target}`,\r\n    port: undefined,\r\n    minify: false,\r\n    scopeHoist: false,\r\n    logLevel: 0, // 3 = log everything, 2 = log warnings & errors, 1 = log errors\r\n    sourceMaps: true, // Enable or disable sourcemaps, defaults to enabled (minified builds currently always create sourcemaps)\r\n    detailedReport: false,\r\n    throwErrors: true,\r\n    hmr: false,\r\n    // apply options\r\n    ..._options\r\n  }\r\n  let _port\r\n  if (!isBrowser && options.target === BUNDLER_TARGET.BROWSER) {\r\n    _port = localRequire('get-port')\r\n              .then(getPort => getPort({ port: 10485 }))\r\n              .then(port => (options.port = port))\r\n  }\r\n  // @ts-ignore\r\n  return of([\r\n            Bundler(options),\r\n            (!isBrowser && options.target === BUNDLER_TARGET.BROWSER\r\n              ? options.browsers as unknown as TARGET[]\r\n              : [options.target] as unknown as TARGET[])\r\n                .map(target => TargetRuntimeProvider(target, options))\r\n          ])\r\n          // @ts-ignore\r\n          |> (!isBrowser && options.target === BUNDLER_TARGET.BROWSER ? delayWhen(() => from(_port)) : tap())\r\n          // @ts-ignore\r\n          |> (!isBrowser && options.target === BUNDLER_TARGET.BROWSER ? server(options) : tap())\r\n          // @ts-ignore\r\n          |> mergeMap(([ bundler, targetRuntimeProviders ]) =>\r\n            merge(\r\n              // @ts-ignore\r\n              bundler |> filter(({ name }) => name === 'buildStart'),\r\n              // @ts-ignore\r\n              bundler |> filter(({ name }) => name === 'bundled'),\r\n              // @ts-ignore\r\n              merge(...targetRuntimeProviders)\r\n              // @ts-ignore\r\n              |> mergeMap((targetRuntimeProvider: TargetRuntimeProviderType) =>\r\n                // @ts-ignore\r\n                bundler\r\n                // @ts-ignore\r\n                |> filter(({ name }) => name === 'buildStart')\r\n                // @ts-ignore\r\n                |> switchMap(({ entryFiles, buildStartTime }) =>\r\n                  // @ts-ignore\r\n                  bundler\r\n                  // @ts-ignore\r\n                  |> filter(({ name }) => name === 'bundled')\r\n                  // @ts-ignore\r\n                  |> map(bundleContainer => ({\r\n                    ...bundleContainer,\r\n                    entryFiles,\r\n                    buildStartTime\r\n                  }))\r\n                )\r\n                // @ts-ignore\r\n                |> switchMap(({ bundle }) =>\r\n                  // @ts-ignore\r\n                  from(\r\n                    (bundle.isEmpty\r\n                      ? Array.from(bundle.childBundles)\r\n                      : [bundle]))\r\n                    // @ts-ignore\r\n                    |> mergeMap((childBundle: any) => {\r\n                      const { name: path } = childBundle\r\n                      // @ts-ignore\r\n                      const newContextObservable: ConnectableObservable<File> =\r\n                        // @ts-ignore\r\n                        of({\r\n                          target: targetRuntimeProvider.target,\r\n                          name: childBundle.entryAsset.name,\r\n                          path,\r\n                          url: options.target === BUNDLER_TARGET.BROWSER && transformPathToTestUrl(path, options.port)\r\n                        })\r\n                        // @ts-ignore\r\n                        |> publish()\r\n\r\n                      // @ts-ignore\r\n                      const analyzedObservable: ConnectableObservable<File> =\r\n                        // @ts-ignore\r\n                        newContextObservable\r\n                        // @ts-ignore\r\n                        |> analyze(targetRuntimeProvider, options)\r\n                        // @ts-ignore\r\n                        |> publish()\r\n          \r\n                      // @ts-ignore\r\n                      const testedObservable: ConnectableObservable<File> =\r\n                        // @ts-ignore\r\n                        analyzedObservable\r\n                        // @ts-ignore\r\n                        |> filter(file => !file.errors.length)\r\n                        // @ts-ignore\r\n                        |> switchMap(file =>\r\n                          // @ts-ignore\r\n                          from(file.tests)\r\n                          // @ts-ignore\r\n                          |> test(file, targetRuntimeProvider, options))\r\n                        // @ts-ignore\r\n                        |> publish()\r\n          \r\n                      const testerObservable =\r\n                        merge(\r\n                          newContextObservable,\r\n                          analyzedObservable,\r\n                          testedObservable\r\n                        )\r\n          \r\n                      testedObservable.connect()\r\n                      analyzedObservable.connect()\r\n                      newContextObservable.connect()\r\n          \r\n                      return testerObservable\r\n                    })\r\n              )\r\n            )\r\n          )\r\n        )\r\n}\r\n","import { isBrowser } from '../core/utils'\r\n\r\nexport const errors = []\r\n\r\nif (isBrowser) {\r\n  window.addEventListener('error', err => errors.push(err))\r\n} else {\r\n  process.on('uncaughtException', err => errors.push(err))\r\n}\r\n\r\n","import { EventEmitter } from 'events'\r\nimport { stringify } from 'flatted/cjs'\r\nimport ErrorStackParser from 'error-stack-parser'\r\nimport { isBrowser } from '../core/utils'\r\nimport { File, Test, TestResult, MESSAGE_TYPE, NODE_GLOBAL } from '../types'\r\nimport { errors } from './error'\r\nimport { isObservable } from 'rxjs';\r\n\r\nexport const tests = new Map<string, Function>()\r\n\r\nexport const todo = _ => {}\r\nexport const pass = _ => {}\r\nexport const fail = _ => {}\r\n\r\nexport const test = (desc, func) => {\r\n  if (typeof desc !== 'string') throw new Error('desc has to be a string')\r\n  if (typeof func !== 'function') throw new Error('func has to be a function')\r\n  if (tests.has(desc)) throw new Error(`Found duplicate test description: ${desc}`)\r\n  tests.set(desc, func)\r\n}\r\n\r\nconst initiated = new Promise(resolve => setTimeout(resolve, 0))\r\n\r\nconst emit = (type, data) =>\r\n  isBrowser\r\n    ? window.parent.postMessage({ type, errors, data }, '*')\r\n    : global[NODE_GLOBAL].emit('message', { type, errors, data })\r\n\r\nconst getTests = () =>\r\n  emit(\r\n    MESSAGE_TYPE.GET_TESTS_RESPONSE,\r\n    Array\r\n      .from(tests)\r\n      .map(([description, func]) => ({\r\n        description,\r\n        body: func.toString()\r\n      }))\r\n  )\r\n\r\nconst runTest = async description => {\r\n  // todo: replace by \"isBrowser ? window : require('perf_hooks')\"\r\n  const { performance } = window\r\n  let timeStart, timeEnd, value, error\r\n\r\n  try {\r\n    timeStart = performance.now()\r\n    value = await tests.get(description)()\r\n  } catch (err) {\r\n    error = err\r\n  } finally {\r\n    timeEnd = performance.now()\r\n  }\r\n\r\n  emit(\r\n    MESSAGE_TYPE.RUN_TEST_RESPONSE,\r\n    {\r\n      timeStart,\r\n      timeEnd,\r\n      type:\r\n        isObservable(value) ? 'observable'\r\n        : value instanceof Promise ? 'promise'\r\n        : 'function',\r\n      value: stringify(value),\r\n      errors:\r\n        (error\r\n          ? [error, ...errors]\r\n          : errors).map(err => ({\r\n            name: err.name,\r\n            message: err.message,\r\n            toString: err.toString(),\r\n            stack: err.stack,\r\n            stackFrame: ErrorStackParser.parse(err)\r\n          }))\r\n    }\r\n  )\r\n}\r\n\r\nconst newEvent = ({ data: { type, description } }) =>\r\n    type === MESSAGE_TYPE.GET_TESTS ? getTests()\r\n  : type === MESSAGE_TYPE.RUN_TEST && runTest(description)\r\n\r\nif (isBrowser) {\r\n  window.addEventListener('message', newEvent)\r\n} else {\r\n  const events = global[NODE_GLOBAL] = new EventEmitter()\r\n  events.addListener('message', newEvent)\r\n}\r\n\r\n// const addEventListener =\r\n//   isBrowser\r\n//     ? window.addEventListener\r\n//     : global[NODE_GLOBAL].addListener\r\n\r\n// addEventListener('message', ({ data: { type, description } }) =>\r\n//     type === MESSAGE_TYPE.GET_TESTS ? getTests()\r\n//   : type === MESSAGE_TYPE.RUN_TEST && runTest(description))\r\n","import PowerAssert from 'power-assert'\r\n\r\nexport const assert = PowerAssert.customize({\r\n\r\n})","// export * from './test'\r\n// export * from './assert'\r\n\r\n// parceljs experimental hoisting fix\r\nimport { test } from './test'\r\nimport { assert } from './assert'\r\n\r\nexport {\r\n  test,\r\n  assert\r\n}","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","export * from './core/index'\r\nexport * from './test/index'\r\n\r\nif (!module.parent) import('./cli/index').then(() => {}) // keep the then because parcel lazy-load imports\r\n"]}