{"version":3,"sources":["runner/cli.ts","runner/utils.ts","runner/bundler.ts","runner/logger.ts","runner/server.ts","utils.ts","runner/analyze.ts","runner/test.ts","runner/post-analyze.ts","runner/index.ts","test/test.ts","test/assert.ts","test/index.ts","index.ts"],"names":["Promise","resolve","reject","program","command","description","action","cmd","commands","find","c","name","help","on","console","log","chalk","bold","args","process","argv","some","splice","parse","prettifyPath","path","Path","relative","cwd","prettifyTime","time","toFixed","entryFiles","observable","Observable","create","observer","bundler","Bundler","outDir","watch","cache","cacheDir","minify","scopeHoist","hmr","target","logLevel","sourceMaps","detailedReport","addAssetType","__dirname","bundle","next","bundledTime","Date","now","entryPoints","buildStartTime","_","error","stop","prettyError","err","opts","message","fileName","loc","line","column","stack","codeFrame","color","highlightedCodeFrame","slice","indexOf","supportsEmoji","platform","env","TERM","emoji","progress","success","warning","Logger","constructor","options","lines","spinner","setOptions","isNaN","Number","supportsColor","enabled","isTest","NODE_ENV","countLines","split","reduce","p","stdout","columns","Math","ceil","length","writeRaw","stopSpinner","write","persistent","verbose","_log","currDate","toLocaleTimeString","logFile","fs","createWriteStream","join","toISOString","warn","_writeError","yellow","red","green","formatError","clear","readline","clearLine","moveCursor","cursorTo","styledMessage","gray","text","stream","undefined","start","handleMessage","method","table","colWidths","row","i","item","max","stringWidth","items","map","padding","align","pad","repeat","string","port","app","Koa","epk","use","tests","then","listen","isBrowser","window","GET_TESTS","RUN_TESTS","RUN_TEST","browser","ctx","page","evaluate","urls","isEmpty","Array","from","childBundles","distPath","entryAsset","sourcePath","url","replace","val","logger","grey","analyzeStartTime","coverage","startJSCoverage","testsResult","testsCoverage","stopJSCoverage","analyzeEndTime","testStartTime","formatTest","shift","trim","formatTests","underline","format","buildTime","analyzeTime","testTime","groupedTests","reset","filter","test","testEndTime","Object","entries","obj","push","init","node","globs","puppeteer","launch","devtools","pages","msg","goto","fg","async","reload","analyze","postAnalyze","module","parent","obs","subscribe","Map","todo","pass","fail","desc","func","Error","has","set","initiated","setTimeout","addEventListener","data","postMessage","toString","result","get","assert","PowerAssert","customize"],"mappings":"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","file":"index.map","sourceRoot":"..\\src","sourcesContent":["import program from 'commander'\r\nimport chalk from 'chalk'\r\n\r\nexport default (): string[] =>\r\n  new Promise((resolve, reject) => {\r\n    program\r\n      .command('serve [input...]')\r\n      .description('starts a development server')\r\n      .action(resolve)\r\n\r\n    program\r\n      .command('help [command]')\r\n      .description('display help information for a command')\r\n      .action(function(command) {\r\n        let cmd = program.commands.find(c => c.name() === command) || program\r\n        cmd.help()\r\n      })\r\n\r\n    program.on('--help', function() {\r\n      console.log('')\r\n      console.log(\r\n        '  Run `' +\r\n          chalk.bold('epk help <command>') +\r\n          '` for more information on specific commands'\r\n      )\r\n      console.log('')\r\n    })\r\n\r\n    // Make serve the default command except for --help\r\n    const args = process.argv\r\n    if (args[2] === '--help' || args[2] === '-h') args[2] = 'help'\r\n    if (!args[2] || !program.commands.some(c => c.name() === args[2])) {\r\n      args.splice(2, 0, 'serve')\r\n    }\r\n\r\n    program.parse(args)\r\n  }) as any","import Path from 'path'\r\n\r\nexport const prettifyPath = path => Path.relative(process.cwd(), path)\r\n\r\nexport const prettifyTime = time =>\r\n  time < 1000\r\n    ? `${time.toFixed()}ms`\r\n    : `${(time / 1000).toFixed(2)}s`\r\n","import Path from 'path'\r\nimport Bundler from 'parcel-bundler'\r\nimport { Observable } from 'rxjs'\r\n\r\nexport default entryFiles => {\r\n  const observable = Observable.create(observer => {\r\n    const bundler = new Bundler(entryFiles, {\r\n      outDir: '.epk/dist',\r\n      watch: true,\r\n      cache: true,\r\n      cacheDir: '.epk/cache',\r\n      minify: false,\r\n      scopeHoist: false,\r\n      hmr: false,\r\n      target: 'browser',\r\n      logLevel: 0, // 3 = log everything, 2 = log warnings & errors, 1 = log errors\r\n      sourceMaps: true, // Enable or disable sourcemaps, defaults to enabled (minified builds currently always create sourcemaps)\r\n      detailedReport: false\r\n    })\r\n    bundler.addAssetType('js', Path.resolve(__dirname, '../src/runner/js-asset.ts'))\r\n    bundler.addAssetType('ts', Path.resolve(__dirname, '../src/runner/ts-asset.ts'))\r\n    bundler.on('bundled', bundle =>\r\n      observer.next({ name: 'bundled', bundle, bundledTime: Date.now() }))\r\n    bundler.on('buildStart', entryPoints =>\r\n      observer.next({ bundler: observable, name: 'buildStart', entryPoints, buildStartTime: Date.now() }))\r\n    bundler.on('buildEnd', _ =>\r\n      observer.next({ name: 'buildEnd' }))\r\n    bundler.on('buildError', error =>\r\n      observer.next({ name:'error', error }))\r\n    bundler.bundle()\r\n    return _ => bundler.stop()\r\n  })\r\n  return observable\r\n}\r\n","// https://github.com/parcel-bundler/parcel/tree/master/packages/core/logger/src\r\n\r\nimport chalk from 'chalk'\r\nimport readline from 'readline'\r\nimport { countBreaks } from 'grapheme-breaker'\r\nimport stripAnsi from 'strip-ansi'\r\nimport ora from 'ora'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\nconst prettyError = (err, opts = {}) => {\r\n  let message = typeof err === 'string' ? err : err.message\r\n  if (!message) message = 'Unknown error'\r\n\r\n  if (err.fileName) {\r\n    let fileName = err.fileName\r\n    if (err.loc) {\r\n      fileName += `:${err.loc.line}:${err.loc.column}`\r\n    }\r\n\r\n    message = `${fileName}: ${message}`\r\n  }\r\n\r\n  let stack;\r\n  if (err.codeFrame) {\r\n    stack = (opts.color && err.highlightedCodeFrame) || err.codeFrame\r\n  } else if (err.stack) {\r\n    stack = err.stack.slice(err.stack.indexOf('\\n') + 1)\r\n  }\r\n\r\n  return {\r\n    message, stack\r\n  }\r\n}\r\n\r\nconst supportsEmoji =\r\n  process.platform !== 'win32' || process.env.TERM === 'xterm-256color'\r\n\r\n// Fallback symbols for Windows from https://en.wikipedia.org/wiki/Code_page_437\r\nconst emoji = {\r\n  progress: supportsEmoji ? '⏳' : '∞',\r\n  success: supportsEmoji ? '✨' : '√',\r\n  error: supportsEmoji ? '🚨' : '×',\r\n  warning: supportsEmoji ? '⚠️' : '‼'\r\n}\r\n\r\nclass Logger {\r\n  constructor(options) {\r\n    this.lines = 0;\r\n    this.spinner = null;\r\n    this.setOptions(options);\r\n  }\r\n\r\n  setOptions(options) {\r\n    this.logLevel =\r\n      options && isNaN(options.logLevel) === false\r\n        ? Number(options.logLevel)\r\n        : 3;\r\n    this.color =\r\n      options && typeof options.color === 'boolean'\r\n        ? options.color\r\n        : chalk.supportsColor;\r\n    this.emoji = (options && options.emoji) || emoji;\r\n    this.chalk = new chalk.constructor({enabled: this.color});\r\n    this.isTest =\r\n      options && typeof options.isTest === 'boolean'\r\n        ? options.isTest\r\n        : process.env.NODE_ENV === 'test';\r\n  }\r\n\r\n  countLines(message) {\r\n    return stripAnsi(message)\r\n      .split('\\n')\r\n      .reduce((p, line) => {\r\n        if (process.stdout.columns) {\r\n          return p + Math.ceil((line.length || 1) / process.stdout.columns);\r\n        }\r\n\r\n        return p + 1;\r\n      }, 0);\r\n  }\r\n\r\n  writeRaw(message) {\r\n    this.stopSpinner();\r\n\r\n    this.lines += this.countLines(message) - 1;\r\n    process.stdout.write(message);\r\n  }\r\n\r\n  write(message, persistent = false) {\r\n    if (this.logLevel > 3) {\r\n      return this.verbose(message);\r\n    }\r\n\r\n    if (!persistent) {\r\n      this.lines += this.countLines(message);\r\n    }\r\n\r\n    this.stopSpinner();\r\n    this._log(message);\r\n  }\r\n\r\n  verbose(message) {\r\n    if (this.logLevel < 4) {\r\n      return;\r\n    }\r\n\r\n    let currDate = new Date();\r\n    message = `[${currDate.toLocaleTimeString()}]: ${message}`;\r\n    if (this.logLevel > 4) {\r\n      if (!this.logFile) {\r\n        this.logFile = fs.createWriteStream(\r\n          path.join(process.cwd(), `parcel-debug-${currDate.toISOString()}.log`)\r\n        );\r\n      }\r\n      this.logFile.write(stripAnsi(message) + '\\n');\r\n    }\r\n    this._log(message);\r\n  }\r\n\r\n  log(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    this.write(message);\r\n  }\r\n\r\n  persistent(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    this.write(this.chalk.bold(message), true);\r\n  }\r\n\r\n  warn(err) {\r\n    if (this.logLevel < 2) {\r\n      return;\r\n    }\r\n\r\n    this._writeError(err, this.emoji.warning, this.chalk.yellow);\r\n  }\r\n\r\n  error(err) {\r\n    if (this.logLevel < 1) {\r\n      return;\r\n    }\r\n\r\n    this._writeError(err, this.emoji.error, this.chalk.red.bold);\r\n  }\r\n\r\n  success(message) {\r\n    this.log(`${this.emoji.success}  ${this.chalk.green.bold(message)}`);\r\n  }\r\n\r\n  formatError(err, opts) {\r\n    return prettyError(err, opts);\r\n  }\r\n\r\n  _writeError(err, emoji, color) {\r\n    let {message, stack} = this.formatError(err, {color: this.color});\r\n    this.write(color(`${emoji}  ${message}`));\r\n    if (stack) {\r\n      this.write(stack);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!this.color || this.isTest || this.logLevel > 3) {\r\n      return;\r\n    }\r\n\r\n    while (this.lines > 0) {\r\n      readline.clearLine(process.stdout, 0);\r\n      readline.moveCursor(process.stdout, 0, -1);\r\n      this.lines--;\r\n    }\r\n\r\n    readline.cursorTo(process.stdout, 0);\r\n    this.stopSpinner();\r\n  }\r\n\r\n  progress(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    if (this.logLevel > 3) {\r\n      return this.verbose(message);\r\n    }\r\n\r\n    let styledMessage = this.chalk.gray.bold(message);\r\n    if (!this.spinner) {\r\n      this.spinner = ora({\r\n        text: styledMessage,\r\n        stream: process.stdout,\r\n        enabled: this.isTest ? false : undefined // fall back to ora default unless we need to explicitly disable it.\r\n      }).start();\r\n    } else {\r\n      this.spinner.text = styledMessage;\r\n    }\r\n  }\r\n\r\n  stopSpinner() {\r\n    if (this.spinner) {\r\n      this.spinner.stop();\r\n      this.spinner = null;\r\n    }\r\n  }\r\n\r\n  handleMessage(options) {\r\n    this[options.method](...options.args);\r\n  }\r\n\r\n  _log(message) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(message);\r\n  }\r\n\r\n  table(columns, table) {\r\n    // Measure column widths\r\n    let colWidths = [];\r\n    for (let row of table) {\r\n      let i = 0;\r\n      for (let item of row) {\r\n        colWidths[i] = Math.max(colWidths[i] || 0, stringWidth(item));\r\n        i++;\r\n      }\r\n    }\r\n\r\n    // Render rows\r\n    for (let row of table) {\r\n      let items = row.map((item, i) => {\r\n        // Add padding between columns unless the alignment is the opposite to the\r\n        // next column and pad to the column width.\r\n        let padding =\r\n          !columns[i + 1] || columns[i + 1].align === columns[i].align ? 4 : 0;\r\n        return pad(item, colWidths[i] + padding, columns[i].align);\r\n      });\r\n\r\n      this.log(items.join(''));\r\n    }\r\n  }\r\n}\r\n\r\n// Pad a string with spaces on either side\r\nfunction pad(text, length, align = 'left') {\r\n  let pad = ' '.repeat(length - stringWidth(text));\r\n  if (align === 'right') {\r\n    return pad + text;\r\n  }\r\n\r\n  return text + pad;\r\n}\r\n\r\n// Count visible characters in a string\r\nfunction stringWidth(string) {\r\n  return countBreaks(stripAnsi('' + string))\r\n}\r\n\r\nexport default new Logger()\r\n","import path from 'path'\r\nimport Koa from 'koa'\r\nimport serve from 'koa-static'\r\nimport mount from 'koa-mount'\r\nimport getPort from 'get-port'\r\n\r\nexport const port = getPort({ port: 10485 })\r\n\r\nconst app = new Koa()\r\nconst epk = new Koa()\r\nepk.use(serve(path.resolve(__dirname, '..', 'dist')))\r\nconst tests = new Koa()\r\ntests.use(serve(path.resolve(process.cwd(), '.epk', 'dist')))\r\n\r\napp.use(mount('/epk', epk))\r\napp.use(mount('/tests', tests))\r\n\r\nport.then(port =>\r\n  app.listen(port))\r\n","export const isBrowser = typeof window !== 'undefined'\r\n\r\nexport const GET_TESTS = '__EPK_GET_TESTS'\r\nexport const RUN_TESTS = '__EPK_RUN_TESTS'\r\nexport const RUN_TEST = '__EPK_RUN_TEST'","import path from 'path'\r\nimport chalk from 'chalk'\r\nimport { Observable, of } from 'rxjs'\r\nimport { Page } from 'puppeteer'\r\nimport { switchMap, filter, tap, map } from 'rxjs/operators'\r\nimport { prettifyPath, prettifyTime } from './utils'\r\nimport { isBrowser, GET_TESTS } from '../utils'\r\nimport { AnalyzedContext, TestedContext } from '../types'\r\nimport logger from './logger'\r\n\r\nexport const browser: Observable<AnalyzedContext> =\r\n  // @ts-ignore\r\n  switchMap(async (ctx: AnalyzedContext) => {\r\n    const { bundle, page } = ctx\r\n    const tests = await page.evaluate(\r\n        ({ GET_TESTS, urls }: { GET_TESTS: string, urls: string[] }) =>\r\n          window[GET_TESTS](urls),\r\n        {\r\n          GET_TESTS,\r\n          urls:\r\n            (bundle.isEmpty\r\n              ? Array.from(bundle.childBundles)\r\n              : [bundle])\r\n              .map(({ name: distPath, entryAsset: { name: sourcePath } }) => ({\r\n                sourcePath,\r\n                distPath,\r\n                url: distPath.replace(`${path.resolve(process.cwd(), '.epk', 'dist')}\\\\`, '/tests/')\r\n              }))\r\n        }\r\n      )\r\n    return {\r\n      tests,\r\n      ...ctx\r\n    }\r\n  })\r\n\r\nexport default\r\n  switchMap(val =>\r\n    // @ts-ignore\r\n    of(val)\r\n    // @ts-ignore\r\n    |> tap(({ entryPoints, bundledTime, buildStartTime }: TestedContext) => {\r\n        logger.progress(`\\n${\r\n          chalk.green(`Built in ${prettifyTime(bundledTime - buildStartTime)}.`)\r\n        }\\n${\r\n          chalk.grey(`Analyzing ${entryPoints.map(prettifyPath).join(', ')}`)}.`)\r\n      })\r\n      // @ts-ignore\r\n    |> tap((ctx: TestedContext) => (ctx.analyzeStartTime = Date.now()))\r\n    // @ts-ignore\r\n    |> browser)","import path from 'path'\r\nimport chalk from 'chalk'\r\nimport { Page } from 'puppeteer'\r\nimport { switchMap, tap } from 'rxjs/operators'\r\nimport { prettifyTime, prettifyPath } from './utils'\r\nimport { RUN_TESTS } from '../utils'\r\nimport { TestResult, Test, TestedContext, AnalyzedContext } from '../types'\r\nimport { Observable, of } from 'rxjs'\r\nimport logger from './logger'\r\n\r\nexport const browser: Observable<TestedContext> =\r\n  // @ts-ignore\r\n  switchMap(async (ctx: AnalyzedContext): TestedContext => {\r\n    const { page, bundle, tests } = ctx\r\n    await page.coverage.startJSCoverage()\r\n    const testsResult = await page.evaluate(\r\n        ({ RUN_TESTS, tests }: { RUN_TESTS: string, tests: Test[] }) =>\r\n          window[RUN_TESTS](tests),\r\n        {\r\n          RUN_TESTS,\r\n          tests\r\n        }\r\n      )\r\n    return {\r\n      testsResult,\r\n      testsCoverage: await page.coverage.stopJSCoverage(),\r\n      ...ctx\r\n    }\r\n  })\r\n\r\nexport default\r\n  switchMap(val =>\r\n    // @ts-ignore\r\n    of(val)\r\n    // @ts-ignore\r\n    |> tap((ctx: TestedContext) => {\r\n        ctx.analyzeEndTime = Date.now()\r\n        ctx.testStartTime = Date.now()\r\n        const { entryPoints, buildStartTime, bundledTime, analyzeEndTime, analyzeStartTime } = ctx\r\n        logger.progress(`\\n${\r\n          chalk.green(`Built in ${prettifyTime(bundledTime - buildStartTime)}.`)\r\n        }\\n${\r\n          chalk.green(`Analyzed in ${prettifyTime(analyzeEndTime - analyzeStartTime)}.`)\r\n        }\\n${\r\n          chalk.green(`Testing ${entryPoints.map(prettifyPath).join(', ')}.`)}`)\r\n      })\r\n    // @ts-ignore\r\n    |> browser)","import chalk from 'chalk'\r\nimport { switchMap,tap } from 'rxjs/operators'\r\nimport { of } from 'rxjs'\r\nimport { prettifyPath, prettifyTime} from './utils'\r\nimport logger from './logger'\r\n\r\nconst formatTest = ({ description, error: { message } }) => `\\\r\n ${description}\r\n ${chalk.gray(\r\n    message\r\n      .split('\\n')\r\n      .shift()\r\n      .trim())}\r\n\r\n${chalk.red(\r\n    message\r\n      .split('\\n')\r\n      .splice(2)\r\n      .join('\\n'))}`\r\n\r\n\r\nconst formatTests = tests => `\\\r\n${chalk.underline(prettifyPath(tests[0].sourcePath))}\r\n\r\n${tests\r\n    .map(formatTest)\r\n    .join('\\n')}`\r\n\r\n\r\nconst format = (buildTime, analyzeTime, testTime, groupedTests) => `\r\n${chalk.green(`Built in ${buildTime}.`)}\r\n${chalk.green(`Analyzed in ${analyzeTime}.`)}\r\n${chalk.green(`Tested in ${testTime}.`)}\r\n${chalk.reset.red(`Errors:`)}\r\n\r\n${chalk.reset(\r\n    groupedTests\r\n      .map(([sourcePath, tests]) => [\r\n          sourcePath,\r\n          tests\r\n            .filter(test => test.error)\r\n        ])\r\n      .map(([, tests]) => formatTests(tests))\r\n      .join('\\n'))}`\r\n\r\nexport default\r\n  switchMap(val =>\r\n    of(val)\r\n    |> tap(ctx => {\r\n        ctx.testEndTime = Date.now()\r\n        const { entryPoints, buildStartTime, bundledTime, analyzeEndTime, analyzeStartTime, testStartTime, testEndTime, testsResult } = ctx\r\n        format(\r\n          prettifyTime(bundledTime - buildStartTime),\r\n          prettifyTime(analyzeEndTime - analyzeStartTime),\r\n          prettifyTime(testEndTime - testStartTime),\r\n          Object.entries(\r\n            testsResult\r\n              .reduce((obj, test) =>\r\n                (obj[test.sourcePath]\r\n                  ? obj[test.sourcePath].push(test)\r\n                  : obj[test.sourcePath] = [test]\r\n                , obj), {}))\r\n        )\r\n        |> logger.success\r\n    }))\r\n","import Path from 'path'\r\nimport chalk from 'chalk'\r\nimport fg from 'fast-glob'\r\nimport { filter, publish, switchMap, tap, catchError } from 'rxjs/operators'\r\nimport puppeteer, { Page, Browser } from 'puppeteer'\r\nimport cli from './cli'\r\nimport { prettifyPath, prettifyTime } from './utils'\r\nimport Bundler from './bundler'\r\nimport logger from './logger'\r\nimport { port } from './server'\r\nimport analyze from './analyze'\r\nimport test from './test'\r\nimport { of, Observable } from 'rxjs'\r\nimport postAnalyze from './post-analyze'\r\n\r\nconst init = async ({ node = false } = {}): Promise<Observable<any>> => {\r\n  logger.progress(`\\n${chalk.grey(`Preparing the environment.`)}`)\r\n  const globs: string[] = await cli()\r\n\r\n  const browser: Browser = await puppeteer.launch({ devtools: true })\r\n  const page: Page = !node && (await browser.pages())[0]\r\n\r\n  page.on('console', msg => logger.log(`browser: ${msg.text()}`))\r\n\r\n  await page.goto(`http://localhost:${await port}/epk/browser-runner.html`)\r\n\r\n  const entryFiles =\r\n    (await fg.async(globs))\r\n      .map(path => Path.join(process.cwd(), path))\r\n\r\n  return (Bundler(entryFiles)\r\n    // @ts-ignore\r\n    |> filter(({ name }) => name === 'buildStart')\r\n    // @ts-ignore\r\n    |> tap(_ => {\r\n        logger.clear()\r\n        logger.progress(`\\n${chalk.grey(`Building ${entryFiles.map(prettifyPath).join(', ')}`)}`)\r\n      })\r\n      // @ts-ignore\r\n    |> switchMap(({ bundler, entryPoints, buildStartTime }) =>\r\n        // @ts-ignore\r\n        bundler\r\n        // @ts-ignore\r\n        |> filter(({ name }) => name === 'bundled')\r\n        // @ts-ignore\r\n        |> switchMap(async ctx => {\r\n            await page.reload()\r\n            return {\r\n              bundler,\r\n              entryPoints,\r\n              page,\r\n              buildStartTime,\r\n              ...ctx\r\n            }\r\n          })\r\n        // @ts-ignore\r\n        |> analyze\r\n        // @ts-ignore\r\n        |> test\r\n        // @ts-ignore\r\n        |> postAnalyze)) as any\r\n}\r\n\r\nif (!module.parent) {\r\n  init()\r\n    .then(obs =>\r\n      obs.subscribe(_ => {}))\r\n}\r\n","import { isBrowser, GET_TESTS, RUN_TEST } from '../utils'\r\nimport { errors } from './error'\r\n\r\nexport const tests = new Map<string, Function>()\r\n\r\nexport const todo = _ => {}\r\nexport const pass = _ => {}\r\nexport const fail = _ => {}\r\n\r\nexport const test = (desc, func) => {\r\n  if (typeof desc !== 'string') throw new Error('desc has to be a string')\r\n  if (typeof func !== 'function') throw new Error('func has to be a function')\r\n  if (tests.has(desc)) throw new Error(`Found duplicate test description: ${desc}`)\r\n  tests.set(desc, func)\r\n}\r\n\r\nconst initiated = new Promise(resolve => setTimeout(resolve, 0))\r\n\r\nif (isBrowser) {\r\n  window.addEventListener('message', async ({ data: { name, data } }) => {\r\n    if (name === GET_TESTS) {\r\n      window.parent\r\n        .postMessage({\r\n          name: GET_TESTS,\r\n          data:\r\n            Array.from(tests)\r\n              .map(([desc, func]) => [desc, func.toString()])\r\n        })\r\n    } else if (name === RUN_TEST) {\r\n      let error\r\n      try {\r\n        const result = await tests.get(data)()\r\n        // console.log(result)\r\n        // if (result instanceof Error) error = result\r\n      } catch (err) {\r\n        // console.log(err)\r\n        error = err\r\n      }\r\n      \r\n      //   .then(result => console.log('result', result)).catch(err => console.log('error', err))\r\n      // setTimeout(_ => console.log(errors), 0)\r\n      window.parent\r\n        .postMessage({\r\n          name: GET_TESTS,\r\n          data: {\r\n            error\r\n            // ...await tests.get(data)()\r\n            //   .then(value => ({ /*value*/ }))\r\n            //   .catch(error => console.log('lol', error) || ({ error }))\r\n          }\r\n        })\r\n    }\r\n  })\r\n}","import PowerAssert from 'power-assert'\r\n\r\nexport const assert = PowerAssert.customize({\r\n\r\n})","// export * from './test'\r\n// export * from './assert'\r\n\r\n// parceljs experimental hoisting fix\r\nimport { test } from './test'\r\nimport { assert } from './assert'\r\n\r\nexport {\r\n  test,\r\n  assert\r\n}","export * from './runner/index'\r\nexport * from './test/index'"]}