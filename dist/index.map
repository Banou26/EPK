{"version":3,"sources":["utils.ts","assert/index.ts","runner/cli.ts","runner/utils.ts","runner/bundler.ts","runner/logger.ts","runner/analyze.ts","runner/index.ts","index.ts"],"names":["isBrowser","window","TESTS_METADATA","assert","PowerAssert","customize","tests","test","desc","func","Error","includes","push","setTimeout","_","JSON","stringify","Promise","resolve","reject","program","command","description","action","cmd","commands","find","c","name","help","on","console","log","chalk","bold","args","process","argv","some","splice","parse","prettifyTime","time","toFixed","frames","getFrame","i","length","check","x","textFunction","operator","value","Observable","create","observer","completed","updateLine","draft","t1","Date","now","observable","pipe","obs","refCount","sub","subscribe","val","done","next","spinnerSub","icon","running","connect","unsubscribe","cancelled","entryFiles","bundler","Bundler","outDir","watch","cache","cacheDir","minify","scopeHoist","hmr","target","logLevel","sourceMaps","detailedReport","addAssetType","Path","__dirname","bundle","entryPoints","error","stop","prettyError","err","opts","message","fileName","loc","line","column","stack","codeFrame","color","highlightedCodeFrame","slice","indexOf","supportsEmoji","platform","env","TERM","emoji","progress","success","warning","Logger","constructor","options","lines","spinner","setOptions","isNaN","Number","supportsColor","enabled","isTest","NODE_ENV","countLines","split","reduce","p","stdout","columns","Math","ceil","writeRaw","stopSpinner","write","persistent","verbose","_log","currDate","toLocaleTimeString","logFile","fs","createWriteStream","path","join","cwd","toISOString","warn","_writeError","yellow","red","green","formatError","clear","readline","clearLine","moveCursor","cursorTo","styledMessage","gray","text","stream","undefined","start","handleMessage","method","table","colWidths","row","item","max","stringWidth","items","map","padding","align","pad","repeat","string","countBreaks","readFile","util","promisify","getTestsMetadata","browser","file","page","all","newPage","close","result","exposeFunction","res","evaluate","catch","pageProvider","maxPages","Array","then","pages","rootBundle","isEmpty","from","childBundles","init","buildTimeStart","buildTimeEnd","analyzeTimeStart","analyzeTimeEnd","globs","puppeteer","launch","devtools","fg","async","entryFilesDisplayNames","win32","basename","building","logger","grey","analyzed"],"mappings":"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","file":"index.map","sourceRoot":"..\\src","sourcesContent":["export const isBrowser = typeof window !== 'undefined'\r\n\r\nexport const TESTS_METADATA = '__STEINSGATE_TESTS_METADATA'","import PowerAssert from 'power-assert'\r\nimport { isBrowser, TESTS_METADATA } from '../utils.ts'\r\n\r\nexport const assert = PowerAssert.customize({\r\n\r\n})\r\n\r\nexport const tests = []\r\n\r\nexport const test = (desc, func) => {\r\n  if (typeof desc !== 'string') throw new Error('desc has to be a string')\r\n  if (typeof func !== 'function') throw new Error('func has to be a function')\r\n  if (tests.includes(desc)) throw new Error(`Found duplicate test description: ${desc}`)\r\n  tests.push(desc)\r\n}\r\n\r\nsetTimeout(_ => {\r\n  if (isBrowser) {\r\n    window?.[TESTS_METADATA]?.(JSON.stringify(tests))\r\n  }\r\n}, 0)","import program from 'commander'\r\nimport chalk from 'chalk'\r\n\r\nexport default _ =>\r\n  new Promise((resolve, reject) => {\r\n    program\r\n      .command('serve [input...]')\r\n      .description('starts a development server')\r\n      .action(resolve)\r\n\r\n    program\r\n      .command('help [command]')\r\n      .description('display help information for a command')\r\n      .action(function(command) {\r\n        let cmd = program.commands.find(c => c.name() === command) || program\r\n        cmd.help()\r\n      })\r\n\r\n    program.on('--help', function() {\r\n      console.log('')\r\n      console.log(\r\n        '  Run `' +\r\n          chalk.bold('epk help <command>') +\r\n          '` for more information on specific commands'\r\n      )\r\n      console.log('')\r\n    })\r\n\r\n    // Make serve the default command except for --help\r\n    const args = process.argv\r\n    if (args[2] === '--help' || args[2] === '-h') args[2] = 'help'\r\n    if (!args[2] || !program.commands.some(c => c.name() === args[2])) {\r\n      args.splice(2, 0, 'serve')\r\n    }\r\n\r\n    program.parse(args)\r\n  })","// import draftlog from 'draftlog'\r\nimport { Observable, timer, of } from 'rxjs'\r\nimport { takeUntil, switchMap, take, publish } from 'rxjs/operators'\r\n\r\nexport const prettifyTime = time =>\r\n  time < 1000\r\n    ? `${time.toFixed()}ms`\r\n    : `${(time / 1000).toFixed(2)}s`\r\n\r\n\r\n// draftlog.into(console)\r\n\r\nexport const frames = ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏']\r\nexport const getFrame =\r\n  i =>\r\n    frames[i % frames.length]\r\nexport const check = '✔'\r\nexport const x = '✖'\r\n\r\n\r\nexport const log = (textFunction, operator) =>\r\n  switchMap(value =>\r\n    Observable.create(observer => {\r\n      let completed\r\n      const updateLine = console.draft()\r\n      const t1 = Date.now()\r\n      const observable =\r\n        of(value)\r\n          .pipe(\r\n            operator,\r\n            publish()\r\n          )\r\n      const obs = observable.refCount()\r\n      const sub = obs.subscribe(val => {\r\n        completed = true\r\n        updateLine(\r\n          textFunction({\r\n            time: prettifyTime(Date.now() - t1),\r\n            done: true,\r\n            value\r\n          })\r\n        )\r\n        observer.next(val)\r\n      })\r\n      const spinnerSub =\r\n        timer(0, 100)\r\n          .pipe(\r\n            takeUntil(obs),\r\n          )\r\n          .subscribe(i =>\r\n            updateLine(\r\n              textFunction({\r\n                icon: frames[i % frames.length],\r\n                running: true,\r\n                value,\r\n                i\r\n              })\r\n            ))\r\n      observable.connect()\r\n      return _ => {\r\n        if (completed) return\r\n        sub.unsubscribe()\r\n        spinnerSub.unsubscribe()\r\n        updateLine(\r\n          textFunction({\r\n            cancelled: true,\r\n            value\r\n          })\r\n        )\r\n      }\r\n    }))","import Path from 'path'\r\nimport Bundler from 'parcel-bundler'\r\nimport { Observable } from 'rxjs'\r\n\r\nexport default entryFiles =>\r\n  Observable.create(observer => {\r\n    const bundler = new Bundler(entryFiles, {\r\n      outDir: '.epk/dist',\r\n      watch: true,\r\n      cache: true,\r\n      cacheDir: '.epk/cache',\r\n      minify: false,\r\n      scopeHoist: false,\r\n      hmr: false,\r\n      target: 'browser',\r\n      logLevel: 0, // 3 = log everything, 2 = log warnings & errors, 1 = log errors\r\n      sourceMaps: true, // Enable or disable sourcemaps, defaults to enabled (minified builds currently always create sourcemaps)\r\n      detailedReport: false\r\n    })\r\n    bundler.addAssetType('js', Path.resolve(__dirname, '../src/runner/js-asset.ts'))\r\n    bundler.addAssetType('ts', Path.resolve(__dirname, '../src/runner/ts-asset.ts'))\r\n    bundler.on('bundled', bundle =>\r\n      observer.next({ name: 'bundled', bundle }))\r\n    bundler.on('buildStart', entryPoints =>\r\n      observer.next({ name: 'buildStart', entryPoints }))\r\n    bundler.on('buildEnd', _ =>\r\n      observer.next({ name: 'buildEnd' }))\r\n    bundler.on('buildError', error =>\r\n      observer.next({ name:'error', error }))\r\n    bundler.bundle()\r\n    return _ => bundler.stop()\r\n  })\r\n","// https://github.com/parcel-bundler/parcel/tree/master/packages/core/logger/src\r\n\r\nimport chalk from 'chalk'\r\nimport readline from 'readline'\r\nimport { coundBreaks } from 'grapheme-breaker'\r\nimport stripAnsi from 'strip-ansi'\r\nimport ora from 'ora'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\nconst prettyError = (err, opts = {}) => {\r\n  let message = typeof err === 'string' ? err : err.message\r\n  if (!message) message = 'Unknown error'\r\n\r\n  if (err.fileName) {\r\n    let fileName = err.fileName\r\n    if (err.loc) {\r\n      fileName += `:${err.loc.line}:${err.loc.column}`\r\n    }\r\n\r\n    message = `${fileName}: ${message}`\r\n  }\r\n\r\n  let stack;\r\n  if (err.codeFrame) {\r\n    stack = (opts.color && err.highlightedCodeFrame) || err.codeFrame\r\n  } else if (err.stack) {\r\n    stack = err.stack.slice(err.stack.indexOf('\\n') + 1)\r\n  }\r\n\r\n  return {\r\n    message, stack\r\n  }\r\n}\r\n\r\nconst supportsEmoji =\r\n  process.platform !== 'win32' || process.env.TERM === 'xterm-256color'\r\n\r\n// Fallback symbols for Windows from https://en.wikipedia.org/wiki/Code_page_437\r\nconst emoji = {\r\n  progress: supportsEmoji ? '⏳' : '∞',\r\n  success: supportsEmoji ? '✨' : '√',\r\n  error: supportsEmoji ? '🚨' : '×',\r\n  warning: supportsEmoji ? '⚠️' : '‼'\r\n}\r\n\r\nclass Logger {\r\n  constructor(options) {\r\n    this.lines = 0;\r\n    this.spinner = null;\r\n    this.setOptions(options);\r\n  }\r\n\r\n  setOptions(options) {\r\n    this.logLevel =\r\n      options && isNaN(options.logLevel) === false\r\n        ? Number(options.logLevel)\r\n        : 3;\r\n    this.color =\r\n      options && typeof options.color === 'boolean'\r\n        ? options.color\r\n        : chalk.supportsColor;\r\n    this.emoji = (options && options.emoji) || emoji;\r\n    this.chalk = new chalk.constructor({enabled: this.color});\r\n    this.isTest =\r\n      options && typeof options.isTest === 'boolean'\r\n        ? options.isTest\r\n        : process.env.NODE_ENV === 'test';\r\n  }\r\n\r\n  countLines(message) {\r\n    return stripAnsi(message)\r\n      .split('\\n')\r\n      .reduce((p, line) => {\r\n        if (process.stdout.columns) {\r\n          return p + Math.ceil((line.length || 1) / process.stdout.columns);\r\n        }\r\n\r\n        return p + 1;\r\n      }, 0);\r\n  }\r\n\r\n  writeRaw(message) {\r\n    this.stopSpinner();\r\n\r\n    this.lines += this.countLines(message) - 1;\r\n    process.stdout.write(message);\r\n  }\r\n\r\n  write(message, persistent = false) {\r\n    if (this.logLevel > 3) {\r\n      return this.verbose(message);\r\n    }\r\n\r\n    if (!persistent) {\r\n      this.lines += this.countLines(message);\r\n    }\r\n\r\n    this.stopSpinner();\r\n    this._log(message);\r\n  }\r\n\r\n  verbose(message) {\r\n    if (this.logLevel < 4) {\r\n      return;\r\n    }\r\n\r\n    let currDate = new Date();\r\n    message = `[${currDate.toLocaleTimeString()}]: ${message}`;\r\n    if (this.logLevel > 4) {\r\n      if (!this.logFile) {\r\n        this.logFile = fs.createWriteStream(\r\n          path.join(process.cwd(), `parcel-debug-${currDate.toISOString()}.log`)\r\n        );\r\n      }\r\n      this.logFile.write(stripAnsi(message) + '\\n');\r\n    }\r\n    this._log(message);\r\n  }\r\n\r\n  log(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    this.write(message);\r\n  }\r\n\r\n  persistent(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    this.write(this.chalk.bold(message), true);\r\n  }\r\n\r\n  warn(err) {\r\n    if (this.logLevel < 2) {\r\n      return;\r\n    }\r\n\r\n    this._writeError(err, this.emoji.warning, this.chalk.yellow);\r\n  }\r\n\r\n  error(err) {\r\n    if (this.logLevel < 1) {\r\n      return;\r\n    }\r\n\r\n    this._writeError(err, this.emoji.error, this.chalk.red.bold);\r\n  }\r\n\r\n  success(message) {\r\n    this.log(`${this.emoji.success}  ${this.chalk.green.bold(message)}`);\r\n  }\r\n\r\n  formatError(err, opts) {\r\n    return prettyError(err, opts);\r\n  }\r\n\r\n  _writeError(err, emoji, color) {\r\n    let {message, stack} = this.formatError(err, {color: this.color});\r\n    this.write(color(`${emoji}  ${message}`));\r\n    if (stack) {\r\n      this.write(stack);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!this.color || this.isTest || this.logLevel > 3) {\r\n      return;\r\n    }\r\n\r\n    while (this.lines > 0) {\r\n      readline.clearLine(process.stdout, 0);\r\n      readline.moveCursor(process.stdout, 0, -1);\r\n      this.lines--;\r\n    }\r\n\r\n    readline.cursorTo(process.stdout, 0);\r\n    this.stopSpinner();\r\n  }\r\n\r\n  progress(message) {\r\n    if (this.logLevel < 3) {\r\n      return;\r\n    }\r\n\r\n    if (this.logLevel > 3) {\r\n      return this.verbose(message);\r\n    }\r\n\r\n    let styledMessage = this.chalk.gray.bold(message);\r\n    if (!this.spinner) {\r\n      this.spinner = ora({\r\n        text: styledMessage,\r\n        stream: process.stdout,\r\n        enabled: this.isTest ? false : undefined // fall back to ora default unless we need to explicitly disable it.\r\n      }).start();\r\n    } else {\r\n      this.spinner.text = styledMessage;\r\n    }\r\n  }\r\n\r\n  stopSpinner() {\r\n    if (this.spinner) {\r\n      this.spinner.stop();\r\n      this.spinner = null;\r\n    }\r\n  }\r\n\r\n  handleMessage(options) {\r\n    this[options.method](...options.args);\r\n  }\r\n\r\n  _log(message) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(message);\r\n  }\r\n\r\n  table(columns, table) {\r\n    // Measure column widths\r\n    let colWidths = [];\r\n    for (let row of table) {\r\n      let i = 0;\r\n      for (let item of row) {\r\n        colWidths[i] = Math.max(colWidths[i] || 0, stringWidth(item));\r\n        i++;\r\n      }\r\n    }\r\n\r\n    // Render rows\r\n    for (let row of table) {\r\n      let items = row.map((item, i) => {\r\n        // Add padding between columns unless the alignment is the opposite to the\r\n        // next column and pad to the column width.\r\n        let padding =\r\n          !columns[i + 1] || columns[i + 1].align === columns[i].align ? 4 : 0;\r\n        return pad(item, colWidths[i] + padding, columns[i].align);\r\n      });\r\n\r\n      this.log(items.join(''));\r\n    }\r\n  }\r\n}\r\n\r\n// Pad a string with spaces on either side\r\nfunction pad(text, length, align = 'left') {\r\n  let pad = ' '.repeat(length - stringWidth(text));\r\n  if (align === 'right') {\r\n    return pad + text;\r\n  }\r\n\r\n  return text + pad;\r\n}\r\n\r\n// Count visible characters in a string\r\nfunction stringWidth(string) {\r\n  return countBreaks(stripAnsi('' + string))\r\n}\r\n\r\nexport default new Logger()\r\n","import fs from 'fs'\r\nimport util from 'util'\r\nimport { Observable, of } from 'rxjs'\r\nimport { mergeMap, switchMap, take, tap, filter } from 'rxjs/operators'\r\nimport { TESTS_METADATA } from '../utils.ts'\r\nconst readFile = util.promisify(fs.readFile)\r\n\r\nconst getTestsMetadata =\r\n  (browser, bundle) =>\r\n    Observable.create(observer => {\r\n      let cancelled\r\n      (async _ => {\r\n        const [file, page] = await Promise.all([readFile(bundle.name, 'utf8'), browser.newPage()])\r\n        const close = _ => page.close()\r\n        if (cancelled) return close(0)\r\n        // page.on('console', msg => console.log(msg.text()))\r\n        const result = await new Promise(async (resolve, reject) => {\r\n          await page.exposeFunction(TESTS_METADATA, async res => {\r\n            resolve(res)\r\n          })\r\n          if (cancelled) return close(1)\r\n          page.evaluate(file).catch(_ => {})\r\n        })\r\n        close(2)\r\n        observer.next(result)\r\n      })()\r\n      return _ => (cancelled = true)\r\n    })\r\n\r\nconst pageProvider =\r\n  (browser, maxPages = 5) =>\r\n    Observable.create(observer => {\r\n      Promise.all(\r\n        Array(5)\r\n          .map(_ =>\r\n            browser.newPage()))\r\n        .then(pages => {\r\n\r\n        })\r\n      return _ => {\r\n\r\n      }\r\n    })\r\n\r\nexport default ({ browser, maxPages = 25 }) =>\r\n  switchMap(rootBundle =>\r\n    of(\r\n      ...rootBundle.isEmpty\r\n        ? Array.from(rootBundle.childBundles)\r\n        : [rootBundle])\r\n      .pipe(\r\n        mergeMap(bundle =>\r\n          getTestsMetadata(browser, bundle),\r\n        maxPages)))","import Path from 'path'\r\nimport chalk from 'chalk'\r\nimport fg from 'fast-glob'\r\nimport { timer } from 'rxjs'\r\nimport { filter, publish, switchMap, map, tap, catchError } from 'rxjs/operators'\r\nimport puppeteer from 'puppeteer'\r\nimport cli from './cli.ts'\r\nimport { prettifyTime, log, frames, x, check, getFrame } from './utils.ts'\r\nimport Bundler from './bundler.ts'\r\nimport logger from './logger.ts'\r\nimport analyze from './analyze.ts'\r\n\r\nconst init = async _ => {\r\n  let buildTimeStart, buildTimeEnd, analyzeTimeStart, analyzeTimeEnd\r\n\r\n  const globs = await cli()\r\n  const browser = await puppeteer.launch({ devtools: false })\r\n  const entryFiles =\r\n    (await fg.async(globs))\r\n      .map(path =>\r\n        Path.join(process.cwd(), path))\r\n  const entryFilesDisplayNames =\r\n    entryFiles\r\n      .map(path =>\r\n        Path.win32.basename(path))\r\n      .join(', ')\r\n\r\n  const bundler =\r\n    Bundler(entryFiles)\r\n      |> publish()\r\n\r\n  const building =\r\n    bundler\r\n      |> filter(({name}) => name === 'buildStart')\r\n  building.subscribe(_ => {\r\n    logger.clear()\r\n    buildTimeStart = Date.now()\r\n    logger.progress(chalk.grey(`Building ${entryFilesDisplayNames}`))\r\n  })\r\n\r\n  const error = bundler\r\n    |> filter(({name}) => name === 'buildError')\r\n    |> catchError(error => logger.error(error))\r\n  error.subscribe(_ =>\r\n    logger.error(error))\r\n\r\n  const analyzed =\r\n    bundler\r\n      |> filter(({name}) => name === 'bundled')\r\n      |> tap(_ => {\r\n          buildTimeEnd = Date.now()\r\n          logger.progress(chalk.green(`Built in ${prettifyTime(buildTimeEnd - buildTimeStart)}.`))\r\n        })\r\n      |> map(({bundle}) => bundle)\r\n      |> tap(_ => {\r\n          analyzeTimeStart = Date.now()\r\n          logger.progress(chalk.grey(`Analyzing ${entryFilesDisplayNames}`))\r\n        })\r\n      |> analyze({ browser })\r\n      |> tap(_ => {\r\n          analyzeTimeEnd = Date.now()\r\n          logger.progress(chalk.green(`Analyzed in ${prettifyTime(analyzeTimeEnd - analyzeTimeStart)}.`))\r\n        })\r\n  analyzed.subscribe(val => {})\r\n\r\n  bundler.connect()\r\n}\r\n\r\ninit()","export * from './assert/index.ts'\r\nexport * from './runner/index.ts'\r\n"]}